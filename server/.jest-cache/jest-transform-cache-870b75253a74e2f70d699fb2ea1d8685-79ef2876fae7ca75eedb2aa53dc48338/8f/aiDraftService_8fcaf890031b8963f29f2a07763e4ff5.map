{"version":3,"names":["cov_1k8b5c3bda","actualCoverage","OpenAI","z","config","aiPromptTemplateService","s","openai","getOpenAIClient","f","b","process","env","OPENAI_API_KEY","apiKey","LongRangePlanDraftSchema","object","units","array","title","string","term","expectedDurationWeeks","number","bigIdeas","linkedExpectations","code","type","enum","UnitPlanDraftSchema","essentialQuestions","learningGoals","successCriteria","assessmentFor","assessmentAs","assessmentOf","crossCurricularLinks","timelineEstimateWeeks","LessonPlanDraftSchema","mindsOnDescription","mindsOnDuration","actionDescription","actionDuration","consolidationDescription","consolidationDuration","resources","accommodations","assessmentStrategy","DaybookDraftSchema","weeklyBigIdeas","dailyReflectionPrompts","substituteNotes","weeklyInsights","generateLongRangePlanDraft","input","client","console","warn","promptContext","grade","subject","academicYear","termStructure","prompt","systemPrompt","temperature","generateLongRangePlanPrompt","expectations","response","chat","completions","create","model","messages","role","content","choices","message","Error","parsed","JSON","parse","result","recordPromptUsage","error","generateUnitPlanDraft","unitTitle","generateUnitPlanPrompt","longRangePlanContext","generateLessonPlanDraft","generateLessonPlanPrompt","duration","unitContext","lessonNumber","generateDaybookDraft","weekStartDate","lessons","map","lesson","join","specialEvents","generatePlanSuggestions","existingContent","context"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/aiDraftService.ts"],"sourcesContent":["import OpenAI from 'openai';\nimport { z } from 'zod';\nimport { config } from 'dotenv';\nimport { aiPromptTemplateService, PromptContext, CurriculumExpectation } from './aiPromptTemplateService';\n\n// Load environment variables\nconfig();\n\n// Lazy initialization of OpenAI client\nlet openai: OpenAI | null = null;\n\nfunction getOpenAIClient(): OpenAI | null {\n  if (!openai && process.env.OPENAI_API_KEY) {\n    openai = new OpenAI({\n      apiKey: process.env.OPENAI_API_KEY,\n    });\n  }\n  return openai;\n}\n\n// Response schemas for validation\nconst LongRangePlanDraftSchema = z.object({\n  units: z.array(z.object({\n    title: z.string(),\n    term: z.string(),\n    expectedDurationWeeks: z.number(),\n    bigIdeas: z.array(z.string()),\n    linkedExpectations: z.array(z.object({\n      code: z.string(),\n      type: z.enum(['overall', 'specific']),\n    })),\n  })),\n});\n\nconst UnitPlanDraftSchema = z.object({\n  title: z.string(),\n  bigIdeas: z.array(z.string()),\n  essentialQuestions: z.array(z.string()),\n  learningGoals: z.array(z.string()),\n  successCriteria: z.array(z.string()),\n  assessmentFor: z.array(z.string()),\n  assessmentAs: z.array(z.string()),\n  assessmentOf: z.array(z.string()),\n  crossCurricularLinks: z.array(z.string()),\n  timelineEstimateWeeks: z.number(),\n});\n\nconst LessonPlanDraftSchema = z.object({\n  title: z.string(),\n  learningGoals: z.array(z.string()),\n  successCriteria: z.array(z.string()),\n  mindsOnDescription: z.string(),\n  mindsOnDuration: z.number(),\n  actionDescription: z.string(),\n  actionDuration: z.number(),\n  consolidationDescription: z.string(),\n  consolidationDuration: z.number(),\n  resources: z.array(z.string()),\n  accommodations: z.string(),\n  assessmentStrategy: z.string(),\n});\n\nconst DaybookDraftSchema = z.object({\n  weeklyBigIdeas: z.array(z.string()),\n  dailyReflectionPrompts: z.array(z.string()),\n  substituteNotes: z.string(),\n  weeklyInsights: z.string(),\n});\n\n// Re-export types from prompt template service for compatibility\nexport type { CurriculumExpectation, PromptContext } from './aiPromptTemplateService';\n\nexport interface LongRangePlanDraftInput {\n  expectations: CurriculumExpectation[];\n  subject: string;\n  grade: number;\n  academicYear: string;\n  termStructure: 'semester' | 'trimester' | 'quarterly';\n}\n\nexport interface UnitPlanDraftInput {\n  unitTitle: string;\n  subject: string;\n  grade: number;\n  expectations: CurriculumExpectation[];\n  longRangePlanContext?: string;\n}\n\nexport interface LessonPlanDraftInput {\n  unitTitle: string;\n  subject: string;\n  grade: number;\n  expectations: CurriculumExpectation[];\n  unitContext?: string;\n  duration: number;\n  lessonNumber?: number;\n}\n\nexport interface DaybookDraftInput {\n  lessons: Array<{\n    title: string;\n    subject: string;\n    duration: number;\n    learningGoals: string[];\n  }>;\n  weekStartDate: string;\n  specialEvents?: string[];\n}\n\n// AI Draft Generation Functions\n\nexport async function generateLongRangePlanDraft(input: LongRangePlanDraftInput) {\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      units: []\n    };\n  }\n\n  try {\n    // Use the new prompt template service\n    const promptContext: PromptContext = {\n      grade: input.grade,\n      subject: input.subject,\n      academicYear: input.academicYear,\n      term: input.termStructure\n    };\n\n    const { prompt, systemPrompt, temperature } = aiPromptTemplateService.generateLongRangePlanPrompt(\n      promptContext,\n      input.expectations\n    );\n\n    const response = await client.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: prompt }\n      ],\n      temperature,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    const result = LongRangePlanDraftSchema.parse(parsed);\n    \n    // Record successful usage\n    aiPromptTemplateService.recordPromptUsage('lrp-v2.0', true);\n    \n    return result;\n  } catch (error) {\n    console.error('Error generating long-range plan draft:', error);\n    aiPromptTemplateService.recordPromptUsage('lrp-v2.0', false, error instanceof Error ? error.message : 'Unknown error');\n    throw new Error('Failed to generate long-range plan draft');\n  }\n}\n\nexport async function generateUnitPlanDraft(input: UnitPlanDraftInput) {\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      title: input.unitTitle || 'Generated Unit Plan',\n      bigIdeas: [],\n      essentialQuestions: [],\n      learningGoals: [],\n      successCriteria: [],\n      assessmentFor: [],\n      assessmentAs: [],\n      assessmentOf: [],\n      crossCurricularLinks: [],\n      timelineEstimateWeeks: 0\n    };\n  }\n\n  try {\n    // Use the new prompt template service\n    const promptContext: PromptContext = {\n      grade: input.grade,\n      subject: input.subject\n    };\n\n    const { prompt, systemPrompt, temperature } = aiPromptTemplateService.generateUnitPlanPrompt(\n      promptContext,\n      input.unitTitle,\n      input.expectations,\n      3, // default 3 weeks\n      input.longRangePlanContext\n    );\n\n    const response = await client.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: prompt }\n      ],\n      temperature,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    const result = UnitPlanDraftSchema.parse(parsed);\n    \n    // Record successful usage\n    aiPromptTemplateService.recordPromptUsage('up-v2.0', true);\n    \n    return result;\n  } catch (error) {\n    console.error('Error generating unit plan draft:', error);\n    aiPromptTemplateService.recordPromptUsage('up-v2.0', false, error instanceof Error ? error.message : 'Unknown error');\n    throw new Error('Failed to generate unit plan draft');\n  }\n}\n\nexport async function generateLessonPlanDraft(input: LessonPlanDraftInput) {\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      title: input.unitTitle || 'Generated Lesson Plan',\n      learningGoals: [],\n      successCriteria: [],\n      mindsOnDescription: '',\n      mindsOnDuration: 0,\n      actionDescription: '',\n      actionDuration: 0,\n      consolidationDescription: '',\n      consolidationDuration: 0,\n      resources: [],\n      accommodations: '',\n      assessmentStrategy: ''\n    };\n  }\n\n  try {\n    // Use the new prompt template service\n    const promptContext: PromptContext = {\n      grade: input.grade,\n      subject: input.subject\n    };\n\n    const { prompt, systemPrompt, temperature } = aiPromptTemplateService.generateLessonPlanPrompt(\n      promptContext,\n      input.unitTitle,\n      input.expectations,\n      input.duration,\n      input.unitContext,\n      input.lessonNumber\n    );\n\n    const response = await client.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: prompt }\n      ],\n      temperature,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    const result = LessonPlanDraftSchema.parse(parsed);\n    \n    // Record successful usage\n    aiPromptTemplateService.recordPromptUsage('lp-v2.0', true);\n    \n    return result;\n  } catch (error) {\n    console.error('Error generating lesson plan draft:', error);\n    aiPromptTemplateService.recordPromptUsage('lp-v2.0', false, error instanceof Error ? error.message : 'Unknown error');\n    throw new Error('Failed to generate lesson plan draft');\n  }\n}\n\nexport async function generateDaybookDraft(input: DaybookDraftInput) {\n  const prompt = `\nCreate a weekly daybook summary and substitute plan for the week starting ${input.weekStartDate}.\n\nScheduled lessons:\n${input.lessons.map(lesson => \n  `- ${lesson.title} (${lesson.subject}, ${lesson.duration} min): ${lesson.learningGoals.join(', ')}`\n).join('\\n')}\n\n${input.specialEvents ? `Special events this week: ${input.specialEvents.join(', ')}` : ''}\n\nGenerate:\n- Weekly big ideas that connect the lessons\n- Daily reflection prompts for the teacher\n- Clear substitute teacher notes\n- Weekly insights for planning ahead\n\nReturn a JSON object with this structure:\n{\n  \"weeklyBigIdeas\": [\"Big idea connecting the week's learning\"],\n  \"dailyReflectionPrompts\": [\"What went well?\", \"What challenges arose?\"],\n  \"substituteNotes\": \"Clear, step-by-step instructions for a substitute teacher\",\n  \"weeklyInsights\": \"Observations and suggestions for next week\"\n}\n\nFocus on practical, actionable content that supports both teaching and reflection.\n  `;\n\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      weeklyBigIdeas: [],\n      dailyReflectionPrompts: [],\n      substituteNotes: '',\n      weeklyInsights: ''\n    };\n  }\n\n  try {\n    const response = await openai.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: 'You are a supportive mentor teacher helping with weekly planning and reflection.' },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.3,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    return DaybookDraftSchema.parse(parsed);\n  } catch (error) {\n    console.error('Error generating daybook draft:', error);\n    throw new Error('Failed to generate daybook draft');\n  }\n}\n\n// Helper function to generate suggestions for existing content\nexport async function generatePlanSuggestions(\n  type: 'long-range' | 'unit' | 'lesson' | 'daybook',\n  existingContent: string,\n  context?: string\n) {\n  const prompt = `\nAs an expert educator, provide 3-5 specific suggestions to improve this ${type} plan:\n\nCurrent content:\n${existingContent}\n\n${context ? `Additional context: ${context}` : ''}\n\nFocus on:\n- Alignment with curriculum expectations\n- Age-appropriate activities and language\n- Assessment strategies\n- Engagement and differentiation\n- ETFO best practices\n\nProvide practical, actionable suggestions.\n  `;\n\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty suggestions');\n    return [];\n  }\n\n  try {\n    const response = await openai.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: 'You are an experienced teacher mentor providing constructive feedback on lesson plans.' },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.4,\n    });\n\n    return response.choices[0]?.message?.content || '';\n  } catch (error) {\n    console.error('Error generating plan suggestions:', error);\n    throw new Error('Failed to generate suggestions');\n  }\n}"],"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","ignoreList":[]}