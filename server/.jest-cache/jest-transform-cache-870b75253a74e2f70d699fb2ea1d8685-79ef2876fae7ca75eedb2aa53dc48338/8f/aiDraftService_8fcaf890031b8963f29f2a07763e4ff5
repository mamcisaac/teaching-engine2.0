ac06c83522e364383a7bb975ebf6133a
/* istanbul ignore next */
function cov_1k8b5c3bda() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/aiDraftService.ts";
  var hash = "0ecf4e65974fce68097014900780a02acdb041fc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/aiDraftService.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 9
        }
      },
      "1": {
        start: {
          line: 8,
          column: 13
        },
        end: {
          line: 8,
          column: 17
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 14,
          column: 5
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 13,
          column: 11
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 18
        }
      },
      "5": {
        start: {
          line: 18,
          column: 33
        },
        end: {
          line: 29,
          column: 2
        }
      },
      "6": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 41,
          column: 2
        }
      },
      "7": {
        start: {
          line: 42,
          column: 30
        },
        end: {
          line: 55,
          column: 2
        }
      },
      "8": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 61,
          column: 2
        }
      },
      "9": {
        start: {
          line: 64,
          column: 19
        },
        end: {
          line: 64,
          column: 36
        }
      },
      "10": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "11": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 78
        }
      },
      "12": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "13": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "14": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "15": {
        start: {
          line: 79,
          column: 54
        },
        end: {
          line: 79,
          column: 140
        }
      },
      "16": {
        start: {
          line: 80,
          column: 25
        },
        end: {
          line: 87,
          column: 10
        }
      },
      "17": {
        start: {
          line: 88,
          column: 24
        },
        end: {
          line: 88,
          column: 61
        }
      },
      "18": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 90,
          column: 55
        }
      },
      "19": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 55
        }
      },
      "20": {
        start: {
          line: 91,
          column: 23
        },
        end: {
          line: 91,
          column: 42
        }
      },
      "21": {
        start: {
          line: 92,
          column: 23
        },
        end: {
          line: 92,
          column: 61
        }
      },
      "22": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 68
        }
      },
      "23": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 22
        }
      },
      "24": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 72
        }
      },
      "25": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 127
        }
      },
      "26": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 68
        }
      },
      "27": {
        start: {
          line: 104,
          column: 19
        },
        end: {
          line: 104,
          column: 36
        }
      },
      "28": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "29": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 78
        }
      },
      "30": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 118,
          column: 10
        }
      },
      "31": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 149,
          column: 5
        }
      },
      "32": {
        start: {
          line: 122,
          column: 30
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "33": {
        start: {
          line: 126,
          column: 54
        },
        end: {
          line: 127,
          column: 35
        }
      },
      "34": {
        start: {
          line: 128,
          column: 25
        },
        end: {
          line: 135,
          column: 10
        }
      },
      "35": {
        start: {
          line: 136,
          column: 24
        },
        end: {
          line: 136,
          column: 61
        }
      },
      "36": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 138,
          column: 55
        }
      },
      "37": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 55
        }
      },
      "38": {
        start: {
          line: 139,
          column: 23
        },
        end: {
          line: 139,
          column: 42
        }
      },
      "39": {
        start: {
          line: 140,
          column: 23
        },
        end: {
          line: 140,
          column: 56
        }
      },
      "40": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 67
        }
      },
      "41": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 22
        }
      },
      "42": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 66
        }
      },
      "43": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 126
        }
      },
      "44": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 62
        }
      },
      "45": {
        start: {
          line: 152,
          column: 19
        },
        end: {
          line: 152,
          column: 36
        }
      },
      "46": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "47": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 78
        }
      },
      "48": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 168,
          column: 10
        }
      },
      "49": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "50": {
        start: {
          line: 172,
          column: 30
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "51": {
        start: {
          line: 176,
          column: 54
        },
        end: {
          line: 176,
          column: 209
        }
      },
      "52": {
        start: {
          line: 177,
          column: 25
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "53": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 185,
          column: 61
        }
      },
      "54": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 187,
          column: 55
        }
      },
      "55": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 55
        }
      },
      "56": {
        start: {
          line: 188,
          column: 23
        },
        end: {
          line: 188,
          column: 42
        }
      },
      "57": {
        start: {
          line: 189,
          column: 23
        },
        end: {
          line: 189,
          column: 58
        }
      },
      "58": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 67
        }
      },
      "59": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 22
        }
      },
      "60": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 68
        }
      },
      "61": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 126
        }
      },
      "62": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 64
        }
      },
      "63": {
        start: {
          line: 201,
          column: 19
        },
        end: {
          line: 224,
          column: 3
        }
      },
      "64": {
        start: {
          line: 205,
          column: 30
        },
        end: {
          line: 205,
          column: 129
        }
      },
      "65": {
        start: {
          line: 225,
          column: 19
        },
        end: {
          line: 225,
          column: 36
        }
      },
      "66": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 234,
          column: 5
        }
      },
      "67": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 78
        }
      },
      "68": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 233,
          column: 10
        }
      },
      "69": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "70": {
        start: {
          line: 236,
          column: 25
        },
        end: {
          line: 243,
          column: 10
        }
      },
      "71": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 244,
          column: 61
        }
      },
      "72": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 246,
          column: 55
        }
      },
      "73": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 55
        }
      },
      "74": {
        start: {
          line: 247,
          column: 23
        },
        end: {
          line: 247,
          column: 42
        }
      },
      "75": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 48
        }
      },
      "76": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 64
        }
      },
      "77": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 60
        }
      },
      "78": {
        start: {
          line: 257,
          column: 19
        },
        end: {
          line: 273,
          column: 3
        }
      },
      "79": {
        start: {
          line: 274,
          column: 19
        },
        end: {
          line: 274,
          column: 36
        }
      },
      "80": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 278,
          column: 5
        }
      },
      "81": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 84
        }
      },
      "82": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 18
        }
      },
      "83": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 293,
          column: 5
        }
      },
      "84": {
        start: {
          line: 280,
          column: 25
        },
        end: {
          line: 287,
          column: 10
        }
      },
      "85": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 59
        }
      },
      "86": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 67
        }
      },
      "87": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "getOpenAIClient",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 24
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "generateLongRangePlanDraft",
        decl: {
          start: {
            line: 63,
            column: 22
          },
          end: {
            line: 63,
            column: 48
          }
        },
        loc: {
          start: {
            line: 63,
            column: 56
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 63
      },
      "2": {
        name: "generateUnitPlanDraft",
        decl: {
          start: {
            line: 103,
            column: 22
          },
          end: {
            line: 103,
            column: 43
          }
        },
        loc: {
          start: {
            line: 103,
            column: 51
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 103
      },
      "3": {
        name: "generateLessonPlanDraft",
        decl: {
          start: {
            line: 151,
            column: 22
          },
          end: {
            line: 151,
            column: 45
          }
        },
        loc: {
          start: {
            line: 151,
            column: 53
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 151
      },
      "4": {
        name: "generateDaybookDraft",
        decl: {
          start: {
            line: 200,
            column: 22
          },
          end: {
            line: 200,
            column: 42
          }
        },
        loc: {
          start: {
            line: 200,
            column: 50
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 200
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 205,
            column: 20
          },
          end: {
            line: 205,
            column: 21
          }
        },
        loc: {
          start: {
            line: 205,
            column: 30
          },
          end: {
            line: 205,
            column: 129
          }
        },
        line: 205
      },
      "6": {
        name: "generatePlanSuggestions",
        decl: {
          start: {
            line: 256,
            column: 22
          },
          end: {
            line: 256,
            column: 45
          }
        },
        loc: {
          start: {
            line: 256,
            column: 78
          },
          end: {
            line: 294,
            column: 1
          }
        },
        line: 256
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 10,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 10,
            column: 15
          }
        }, {
          start: {
            line: 10,
            column: 19
          },
          end: {
            line: 10,
            column: 45
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 90,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 90,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "4": {
        loc: {
          start: {
            line: 99,
            column: 69
          },
          end: {
            line: 99,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 94
          },
          end: {
            line: 99,
            column: 107
          }
        }, {
          start: {
            line: 99,
            column: 110
          },
          end: {
            line: 99,
            column: 125
          }
        }],
        line: 99
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 108,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 108,
            column: 34
          }
        }, {
          start: {
            line: 108,
            column: 38
          },
          end: {
            line: 108,
            column: 59
          }
        }],
        line: 108
      },
      "7": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 138,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 138,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "8": {
        loc: {
          start: {
            line: 147,
            column: 68
          },
          end: {
            line: 147,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 93
          },
          end: {
            line: 147,
            column: 106
          }
        }, {
          start: {
            line: 147,
            column: 109
          },
          end: {
            line: 147,
            column: 124
          }
        }],
        line: 147
      },
      "9": {
        loc: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "10": {
        loc: {
          start: {
            line: 156,
            column: 19
          },
          end: {
            line: 156,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 19
          },
          end: {
            line: 156,
            column: 34
          }
        }, {
          start: {
            line: 156,
            column: 38
          },
          end: {
            line: 156,
            column: 61
          }
        }],
        line: 156
      },
      "11": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 187,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 187,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "12": {
        loc: {
          start: {
            line: 196,
            column: 68
          },
          end: {
            line: 196,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 93
          },
          end: {
            line: 196,
            column: 106
          }
        }, {
          start: {
            line: 196,
            column: 109
          },
          end: {
            line: 196,
            column: 124
          }
        }],
        line: 196
      },
      "13": {
        loc: {
          start: {
            line: 207,
            column: 2
          },
          end: {
            line: 207,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 207,
            column: 24
          },
          end: {
            line: 207,
            column: 85
          }
        }, {
          start: {
            line: 207,
            column: 88
          },
          end: {
            line: 207,
            column: 90
          }
        }],
        line: 207
      },
      "14": {
        loc: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "15": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 246,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 246,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "16": {
        loc: {
          start: {
            line: 263,
            column: 2
          },
          end: {
            line: 263,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 263,
            column: 12
          },
          end: {
            line: 263,
            column: 44
          }
        }, {
          start: {
            line: 263,
            column: 47
          },
          end: {
            line: 263,
            column: 49
          }
        }],
        line: 263
      },
      "17": {
        loc: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "18": {
        loc: {
          start: {
            line: 288,
            column: 15
          },
          end: {
            line: 288,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 15
          },
          end: {
            line: 288,
            column: 52
          }
        }, {
          start: {
            line: 288,
            column: 56
          },
          end: {
            line: 288,
            column: 58
          }
        }],
        line: 288
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/aiDraftService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/aiDraftService.ts"],
      sourcesContent: ["import OpenAI from 'openai';\nimport { z } from 'zod';\nimport { config } from 'dotenv';\nimport { aiPromptTemplateService, PromptContext, CurriculumExpectation } from './aiPromptTemplateService';\n\n// Load environment variables\nconfig();\n\n// Lazy initialization of OpenAI client\nlet openai: OpenAI | null = null;\n\nfunction getOpenAIClient(): OpenAI | null {\n  if (!openai && process.env.OPENAI_API_KEY) {\n    openai = new OpenAI({\n      apiKey: process.env.OPENAI_API_KEY,\n    });\n  }\n  return openai;\n}\n\n// Response schemas for validation\nconst LongRangePlanDraftSchema = z.object({\n  units: z.array(z.object({\n    title: z.string(),\n    term: z.string(),\n    expectedDurationWeeks: z.number(),\n    bigIdeas: z.array(z.string()),\n    linkedExpectations: z.array(z.object({\n      code: z.string(),\n      type: z.enum(['overall', 'specific']),\n    })),\n  })),\n});\n\nconst UnitPlanDraftSchema = z.object({\n  title: z.string(),\n  bigIdeas: z.array(z.string()),\n  essentialQuestions: z.array(z.string()),\n  learningGoals: z.array(z.string()),\n  successCriteria: z.array(z.string()),\n  assessmentFor: z.array(z.string()),\n  assessmentAs: z.array(z.string()),\n  assessmentOf: z.array(z.string()),\n  crossCurricularLinks: z.array(z.string()),\n  timelineEstimateWeeks: z.number(),\n});\n\nconst LessonPlanDraftSchema = z.object({\n  title: z.string(),\n  learningGoals: z.array(z.string()),\n  successCriteria: z.array(z.string()),\n  mindsOnDescription: z.string(),\n  mindsOnDuration: z.number(),\n  actionDescription: z.string(),\n  actionDuration: z.number(),\n  consolidationDescription: z.string(),\n  consolidationDuration: z.number(),\n  resources: z.array(z.string()),\n  accommodations: z.string(),\n  assessmentStrategy: z.string(),\n});\n\nconst DaybookDraftSchema = z.object({\n  weeklyBigIdeas: z.array(z.string()),\n  dailyReflectionPrompts: z.array(z.string()),\n  substituteNotes: z.string(),\n  weeklyInsights: z.string(),\n});\n\n// Re-export types from prompt template service for compatibility\nexport type { CurriculumExpectation, PromptContext } from './aiPromptTemplateService';\n\nexport interface LongRangePlanDraftInput {\n  expectations: CurriculumExpectation[];\n  subject: string;\n  grade: number;\n  academicYear: string;\n  termStructure: 'semester' | 'trimester' | 'quarterly';\n}\n\nexport interface UnitPlanDraftInput {\n  unitTitle: string;\n  subject: string;\n  grade: number;\n  expectations: CurriculumExpectation[];\n  longRangePlanContext?: string;\n}\n\nexport interface LessonPlanDraftInput {\n  unitTitle: string;\n  subject: string;\n  grade: number;\n  expectations: CurriculumExpectation[];\n  unitContext?: string;\n  duration: number;\n  lessonNumber?: number;\n}\n\nexport interface DaybookDraftInput {\n  lessons: Array<{\n    title: string;\n    subject: string;\n    duration: number;\n    learningGoals: string[];\n  }>;\n  weekStartDate: string;\n  specialEvents?: string[];\n}\n\n// AI Draft Generation Functions\n\nexport async function generateLongRangePlanDraft(input: LongRangePlanDraftInput) {\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      units: []\n    };\n  }\n\n  try {\n    // Use the new prompt template service\n    const promptContext: PromptContext = {\n      grade: input.grade,\n      subject: input.subject,\n      academicYear: input.academicYear,\n      term: input.termStructure\n    };\n\n    const { prompt, systemPrompt, temperature } = aiPromptTemplateService.generateLongRangePlanPrompt(\n      promptContext,\n      input.expectations\n    );\n\n    const response = await client.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: prompt }\n      ],\n      temperature,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    const result = LongRangePlanDraftSchema.parse(parsed);\n    \n    // Record successful usage\n    aiPromptTemplateService.recordPromptUsage('lrp-v2.0', true);\n    \n    return result;\n  } catch (error) {\n    console.error('Error generating long-range plan draft:', error);\n    aiPromptTemplateService.recordPromptUsage('lrp-v2.0', false, error instanceof Error ? error.message : 'Unknown error');\n    throw new Error('Failed to generate long-range plan draft');\n  }\n}\n\nexport async function generateUnitPlanDraft(input: UnitPlanDraftInput) {\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      title: input.unitTitle || 'Generated Unit Plan',\n      bigIdeas: [],\n      essentialQuestions: [],\n      learningGoals: [],\n      successCriteria: [],\n      assessmentFor: [],\n      assessmentAs: [],\n      assessmentOf: [],\n      crossCurricularLinks: [],\n      timelineEstimateWeeks: 0\n    };\n  }\n\n  try {\n    // Use the new prompt template service\n    const promptContext: PromptContext = {\n      grade: input.grade,\n      subject: input.subject\n    };\n\n    const { prompt, systemPrompt, temperature } = aiPromptTemplateService.generateUnitPlanPrompt(\n      promptContext,\n      input.unitTitle,\n      input.expectations,\n      3, // default 3 weeks\n      input.longRangePlanContext\n    );\n\n    const response = await client.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: prompt }\n      ],\n      temperature,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    const result = UnitPlanDraftSchema.parse(parsed);\n    \n    // Record successful usage\n    aiPromptTemplateService.recordPromptUsage('up-v2.0', true);\n    \n    return result;\n  } catch (error) {\n    console.error('Error generating unit plan draft:', error);\n    aiPromptTemplateService.recordPromptUsage('up-v2.0', false, error instanceof Error ? error.message : 'Unknown error');\n    throw new Error('Failed to generate unit plan draft');\n  }\n}\n\nexport async function generateLessonPlanDraft(input: LessonPlanDraftInput) {\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      title: input.unitTitle || 'Generated Lesson Plan',\n      learningGoals: [],\n      successCriteria: [],\n      mindsOnDescription: '',\n      mindsOnDuration: 0,\n      actionDescription: '',\n      actionDuration: 0,\n      consolidationDescription: '',\n      consolidationDuration: 0,\n      resources: [],\n      accommodations: '',\n      assessmentStrategy: ''\n    };\n  }\n\n  try {\n    // Use the new prompt template service\n    const promptContext: PromptContext = {\n      grade: input.grade,\n      subject: input.subject\n    };\n\n    const { prompt, systemPrompt, temperature } = aiPromptTemplateService.generateLessonPlanPrompt(\n      promptContext,\n      input.unitTitle,\n      input.expectations,\n      input.duration,\n      input.unitContext,\n      input.lessonNumber\n    );\n\n    const response = await client.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: prompt }\n      ],\n      temperature,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    const result = LessonPlanDraftSchema.parse(parsed);\n    \n    // Record successful usage\n    aiPromptTemplateService.recordPromptUsage('lp-v2.0', true);\n    \n    return result;\n  } catch (error) {\n    console.error('Error generating lesson plan draft:', error);\n    aiPromptTemplateService.recordPromptUsage('lp-v2.0', false, error instanceof Error ? error.message : 'Unknown error');\n    throw new Error('Failed to generate lesson plan draft');\n  }\n}\n\nexport async function generateDaybookDraft(input: DaybookDraftInput) {\n  const prompt = `\nCreate a weekly daybook summary and substitute plan for the week starting ${input.weekStartDate}.\n\nScheduled lessons:\n${input.lessons.map(lesson => \n  `- ${lesson.title} (${lesson.subject}, ${lesson.duration} min): ${lesson.learningGoals.join(', ')}`\n).join('\\n')}\n\n${input.specialEvents ? `Special events this week: ${input.specialEvents.join(', ')}` : ''}\n\nGenerate:\n- Weekly big ideas that connect the lessons\n- Daily reflection prompts for the teacher\n- Clear substitute teacher notes\n- Weekly insights for planning ahead\n\nReturn a JSON object with this structure:\n{\n  \"weeklyBigIdeas\": [\"Big idea connecting the week's learning\"],\n  \"dailyReflectionPrompts\": [\"What went well?\", \"What challenges arose?\"],\n  \"substituteNotes\": \"Clear, step-by-step instructions for a substitute teacher\",\n  \"weeklyInsights\": \"Observations and suggestions for next week\"\n}\n\nFocus on practical, actionable content that supports both teaching and reflection.\n  `;\n\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      weeklyBigIdeas: [],\n      dailyReflectionPrompts: [],\n      substituteNotes: '',\n      weeklyInsights: ''\n    };\n  }\n\n  try {\n    const response = await openai.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: 'You are a supportive mentor teacher helping with weekly planning and reflection.' },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.3,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    return DaybookDraftSchema.parse(parsed);\n  } catch (error) {\n    console.error('Error generating daybook draft:', error);\n    throw new Error('Failed to generate daybook draft');\n  }\n}\n\n// Helper function to generate suggestions for existing content\nexport async function generatePlanSuggestions(\n  type: 'long-range' | 'unit' | 'lesson' | 'daybook',\n  existingContent: string,\n  context?: string\n) {\n  const prompt = `\nAs an expert educator, provide 3-5 specific suggestions to improve this ${type} plan:\n\nCurrent content:\n${existingContent}\n\n${context ? `Additional context: ${context}` : ''}\n\nFocus on:\n- Alignment with curriculum expectations\n- Age-appropriate activities and language\n- Assessment strategies\n- Engagement and differentiation\n- ETFO best practices\n\nProvide practical, actionable suggestions.\n  `;\n\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty suggestions');\n    return [];\n  }\n\n  try {\n    const response = await openai.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: 'You are an experienced teacher mentor providing constructive feedback on lesson plans.' },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.4,\n    });\n\n    return response.choices[0]?.message?.content || '';\n  } catch (error) {\n    console.error('Error generating plan suggestions:', error);\n    throw new Error('Failed to generate suggestions');\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0ecf4e65974fce68097014900780a02acdb041fc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1k8b5c3bda = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1k8b5c3bda();
import OpenAI from 'openai';
import { z } from 'zod';
import { config } from 'dotenv';
import { aiPromptTemplateService } from './aiPromptTemplateService';
// Load environment variables
/* istanbul ignore next */
cov_1k8b5c3bda().s[0]++;
config();
// Lazy initialization of OpenAI client
let openai =
/* istanbul ignore next */
(cov_1k8b5c3bda().s[1]++, null);
function getOpenAIClient() {
  /* istanbul ignore next */
  cov_1k8b5c3bda().f[0]++;
  cov_1k8b5c3bda().s[2]++;
  if (
  /* istanbul ignore next */
  (cov_1k8b5c3bda().b[1][0]++, !openai) &&
  /* istanbul ignore next */
  (cov_1k8b5c3bda().b[1][1]++, process.env.OPENAI_API_KEY)) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().b[0][0]++;
    cov_1k8b5c3bda().s[3]++;
    openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY
    });
  } else
  /* istanbul ignore next */
  {
    cov_1k8b5c3bda().b[0][1]++;
  }
  cov_1k8b5c3bda().s[4]++;
  return openai;
}
// Response schemas for validation
const LongRangePlanDraftSchema =
/* istanbul ignore next */
(cov_1k8b5c3bda().s[5]++, z.object({
  units: z.array(z.object({
    title: z.string(),
    term: z.string(),
    expectedDurationWeeks: z.number(),
    bigIdeas: z.array(z.string()),
    linkedExpectations: z.array(z.object({
      code: z.string(),
      type: z.enum(['overall', 'specific'])
    }))
  }))
}));
const UnitPlanDraftSchema =
/* istanbul ignore next */
(cov_1k8b5c3bda().s[6]++, z.object({
  title: z.string(),
  bigIdeas: z.array(z.string()),
  essentialQuestions: z.array(z.string()),
  learningGoals: z.array(z.string()),
  successCriteria: z.array(z.string()),
  assessmentFor: z.array(z.string()),
  assessmentAs: z.array(z.string()),
  assessmentOf: z.array(z.string()),
  crossCurricularLinks: z.array(z.string()),
  timelineEstimateWeeks: z.number()
}));
const LessonPlanDraftSchema =
/* istanbul ignore next */
(cov_1k8b5c3bda().s[7]++, z.object({
  title: z.string(),
  learningGoals: z.array(z.string()),
  successCriteria: z.array(z.string()),
  mindsOnDescription: z.string(),
  mindsOnDuration: z.number(),
  actionDescription: z.string(),
  actionDuration: z.number(),
  consolidationDescription: z.string(),
  consolidationDuration: z.number(),
  resources: z.array(z.string()),
  accommodations: z.string(),
  assessmentStrategy: z.string()
}));
const DaybookDraftSchema =
/* istanbul ignore next */
(cov_1k8b5c3bda().s[8]++, z.object({
  weeklyBigIdeas: z.array(z.string()),
  dailyReflectionPrompts: z.array(z.string()),
  substituteNotes: z.string(),
  weeklyInsights: z.string()
}));
// AI Draft Generation Functions
export async function generateLongRangePlanDraft(input) {
  /* istanbul ignore next */
  cov_1k8b5c3bda().f[1]++;
  const client =
  /* istanbul ignore next */
  (cov_1k8b5c3bda().s[9]++, getOpenAIClient());
  /* istanbul ignore next */
  cov_1k8b5c3bda().s[10]++;
  if (!client) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().b[2][0]++;
    cov_1k8b5c3bda().s[11]++;
    console.warn('OpenAI API key not configured - returning empty draft');
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[12]++;
    return {
      units: []
    };
  } else
  /* istanbul ignore next */
  {
    cov_1k8b5c3bda().b[2][1]++;
  }
  cov_1k8b5c3bda().s[13]++;
  try {
    // Use the new prompt template service
    const promptContext =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[14]++, {
      grade: input.grade,
      subject: input.subject,
      academicYear: input.academicYear,
      term: input.termStructure
    });
    const {
      prompt,
      systemPrompt,
      temperature
    } =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[15]++, aiPromptTemplateService.generateLongRangePlanPrompt(promptContext, input.expectations));
    const response =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[16]++, await client.chat.completions.create({
      model: 'gpt-4',
      messages: [{
        role: 'system',
        content: systemPrompt
      }, {
        role: 'user',
        content: prompt
      }],
      temperature
    }));
    const content =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[17]++, response.choices[0]?.message?.content);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[18]++;
    if (!content) {
      /* istanbul ignore next */
      cov_1k8b5c3bda().b[3][0]++;
      cov_1k8b5c3bda().s[19]++;
      throw new Error('No response from OpenAI');
    } else
    /* istanbul ignore next */
    {
      cov_1k8b5c3bda().b[3][1]++;
    }
    const parsed =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[20]++, JSON.parse(content));
    const result =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[21]++, LongRangePlanDraftSchema.parse(parsed));
    // Record successful usage
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[22]++;
    aiPromptTemplateService.recordPromptUsage('lrp-v2.0', true);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[23]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[24]++;
    console.error('Error generating long-range plan draft:', error);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[25]++;
    aiPromptTemplateService.recordPromptUsage('lrp-v2.0', false, error instanceof Error ?
    /* istanbul ignore next */
    (cov_1k8b5c3bda().b[4][0]++, error.message) :
    /* istanbul ignore next */
    (cov_1k8b5c3bda().b[4][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[26]++;
    throw new Error('Failed to generate long-range plan draft');
  }
}
export async function generateUnitPlanDraft(input) {
  /* istanbul ignore next */
  cov_1k8b5c3bda().f[2]++;
  const client =
  /* istanbul ignore next */
  (cov_1k8b5c3bda().s[27]++, getOpenAIClient());
  /* istanbul ignore next */
  cov_1k8b5c3bda().s[28]++;
  if (!client) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().b[5][0]++;
    cov_1k8b5c3bda().s[29]++;
    console.warn('OpenAI API key not configured - returning empty draft');
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[30]++;
    return {
      title:
      /* istanbul ignore next */
      (cov_1k8b5c3bda().b[6][0]++, input.unitTitle) ||
      /* istanbul ignore next */
      (cov_1k8b5c3bda().b[6][1]++, 'Generated Unit Plan'),
      bigIdeas: [],
      essentialQuestions: [],
      learningGoals: [],
      successCriteria: [],
      assessmentFor: [],
      assessmentAs: [],
      assessmentOf: [],
      crossCurricularLinks: [],
      timelineEstimateWeeks: 0
    };
  } else
  /* istanbul ignore next */
  {
    cov_1k8b5c3bda().b[5][1]++;
  }
  cov_1k8b5c3bda().s[31]++;
  try {
    // Use the new prompt template service
    const promptContext =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[32]++, {
      grade: input.grade,
      subject: input.subject
    });
    const {
      prompt,
      systemPrompt,
      temperature
    } =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[33]++, aiPromptTemplateService.generateUnitPlanPrompt(promptContext, input.unitTitle, input.expectations, 3,
    // default 3 weeks
    input.longRangePlanContext));
    const response =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[34]++, await client.chat.completions.create({
      model: 'gpt-4',
      messages: [{
        role: 'system',
        content: systemPrompt
      }, {
        role: 'user',
        content: prompt
      }],
      temperature
    }));
    const content =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[35]++, response.choices[0]?.message?.content);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[36]++;
    if (!content) {
      /* istanbul ignore next */
      cov_1k8b5c3bda().b[7][0]++;
      cov_1k8b5c3bda().s[37]++;
      throw new Error('No response from OpenAI');
    } else
    /* istanbul ignore next */
    {
      cov_1k8b5c3bda().b[7][1]++;
    }
    const parsed =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[38]++, JSON.parse(content));
    const result =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[39]++, UnitPlanDraftSchema.parse(parsed));
    // Record successful usage
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[40]++;
    aiPromptTemplateService.recordPromptUsage('up-v2.0', true);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[41]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[42]++;
    console.error('Error generating unit plan draft:', error);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[43]++;
    aiPromptTemplateService.recordPromptUsage('up-v2.0', false, error instanceof Error ?
    /* istanbul ignore next */
    (cov_1k8b5c3bda().b[8][0]++, error.message) :
    /* istanbul ignore next */
    (cov_1k8b5c3bda().b[8][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[44]++;
    throw new Error('Failed to generate unit plan draft');
  }
}
export async function generateLessonPlanDraft(input) {
  /* istanbul ignore next */
  cov_1k8b5c3bda().f[3]++;
  const client =
  /* istanbul ignore next */
  (cov_1k8b5c3bda().s[45]++, getOpenAIClient());
  /* istanbul ignore next */
  cov_1k8b5c3bda().s[46]++;
  if (!client) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().b[9][0]++;
    cov_1k8b5c3bda().s[47]++;
    console.warn('OpenAI API key not configured - returning empty draft');
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[48]++;
    return {
      title:
      /* istanbul ignore next */
      (cov_1k8b5c3bda().b[10][0]++, input.unitTitle) ||
      /* istanbul ignore next */
      (cov_1k8b5c3bda().b[10][1]++, 'Generated Lesson Plan'),
      learningGoals: [],
      successCriteria: [],
      mindsOnDescription: '',
      mindsOnDuration: 0,
      actionDescription: '',
      actionDuration: 0,
      consolidationDescription: '',
      consolidationDuration: 0,
      resources: [],
      accommodations: '',
      assessmentStrategy: ''
    };
  } else
  /* istanbul ignore next */
  {
    cov_1k8b5c3bda().b[9][1]++;
  }
  cov_1k8b5c3bda().s[49]++;
  try {
    // Use the new prompt template service
    const promptContext =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[50]++, {
      grade: input.grade,
      subject: input.subject
    });
    const {
      prompt,
      systemPrompt,
      temperature
    } =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[51]++, aiPromptTemplateService.generateLessonPlanPrompt(promptContext, input.unitTitle, input.expectations, input.duration, input.unitContext, input.lessonNumber));
    const response =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[52]++, await client.chat.completions.create({
      model: 'gpt-4',
      messages: [{
        role: 'system',
        content: systemPrompt
      }, {
        role: 'user',
        content: prompt
      }],
      temperature
    }));
    const content =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[53]++, response.choices[0]?.message?.content);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[54]++;
    if (!content) {
      /* istanbul ignore next */
      cov_1k8b5c3bda().b[11][0]++;
      cov_1k8b5c3bda().s[55]++;
      throw new Error('No response from OpenAI');
    } else
    /* istanbul ignore next */
    {
      cov_1k8b5c3bda().b[11][1]++;
    }
    const parsed =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[56]++, JSON.parse(content));
    const result =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[57]++, LessonPlanDraftSchema.parse(parsed));
    // Record successful usage
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[58]++;
    aiPromptTemplateService.recordPromptUsage('lp-v2.0', true);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[59]++;
    return result;
  } catch (error) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[60]++;
    console.error('Error generating lesson plan draft:', error);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[61]++;
    aiPromptTemplateService.recordPromptUsage('lp-v2.0', false, error instanceof Error ?
    /* istanbul ignore next */
    (cov_1k8b5c3bda().b[12][0]++, error.message) :
    /* istanbul ignore next */
    (cov_1k8b5c3bda().b[12][1]++, 'Unknown error'));
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[62]++;
    throw new Error('Failed to generate lesson plan draft');
  }
}
export async function generateDaybookDraft(input) {
  /* istanbul ignore next */
  cov_1k8b5c3bda().f[4]++;
  const prompt =
  /* istanbul ignore next */
  (cov_1k8b5c3bda().s[63]++, `
Create a weekly daybook summary and substitute plan for the week starting ${input.weekStartDate}.

Scheduled lessons:
${input.lessons.map(lesson => {
    /* istanbul ignore next */
    cov_1k8b5c3bda().f[5]++;
    cov_1k8b5c3bda().s[64]++;
    return `- ${lesson.title} (${lesson.subject}, ${lesson.duration} min): ${lesson.learningGoals.join(', ')}`;
  }).join('\n')}

${input.specialEvents ?
  /* istanbul ignore next */
  (cov_1k8b5c3bda().b[13][0]++, `Special events this week: ${input.specialEvents.join(', ')}`) :
  /* istanbul ignore next */
  (cov_1k8b5c3bda().b[13][1]++, '')}

Generate:
- Weekly big ideas that connect the lessons
- Daily reflection prompts for the teacher
- Clear substitute teacher notes
- Weekly insights for planning ahead

Return a JSON object with this structure:
{
  "weeklyBigIdeas": ["Big idea connecting the week's learning"],
  "dailyReflectionPrompts": ["What went well?", "What challenges arose?"],
  "substituteNotes": "Clear, step-by-step instructions for a substitute teacher",
  "weeklyInsights": "Observations and suggestions for next week"
}

Focus on practical, actionable content that supports both teaching and reflection.
  `);
  const client =
  /* istanbul ignore next */
  (cov_1k8b5c3bda().s[65]++, getOpenAIClient());
  /* istanbul ignore next */
  cov_1k8b5c3bda().s[66]++;
  if (!client) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().b[14][0]++;
    cov_1k8b5c3bda().s[67]++;
    console.warn('OpenAI API key not configured - returning empty draft');
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[68]++;
    return {
      weeklyBigIdeas: [],
      dailyReflectionPrompts: [],
      substituteNotes: '',
      weeklyInsights: ''
    };
  } else
  /* istanbul ignore next */
  {
    cov_1k8b5c3bda().b[14][1]++;
  }
  cov_1k8b5c3bda().s[69]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[70]++, await openai.chat.completions.create({
      model: 'gpt-4',
      messages: [{
        role: 'system',
        content: 'You are a supportive mentor teacher helping with weekly planning and reflection.'
      }, {
        role: 'user',
        content: prompt
      }],
      temperature: 0.3
    }));
    const content =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[71]++, response.choices[0]?.message?.content);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[72]++;
    if (!content) {
      /* istanbul ignore next */
      cov_1k8b5c3bda().b[15][0]++;
      cov_1k8b5c3bda().s[73]++;
      throw new Error('No response from OpenAI');
    } else
    /* istanbul ignore next */
    {
      cov_1k8b5c3bda().b[15][1]++;
    }
    const parsed =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[74]++, JSON.parse(content));
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[75]++;
    return DaybookDraftSchema.parse(parsed);
  } catch (error) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[76]++;
    console.error('Error generating daybook draft:', error);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[77]++;
    throw new Error('Failed to generate daybook draft');
  }
}
// Helper function to generate suggestions for existing content
export async function generatePlanSuggestions(type, existingContent, context) {
  /* istanbul ignore next */
  cov_1k8b5c3bda().f[6]++;
  const prompt =
  /* istanbul ignore next */
  (cov_1k8b5c3bda().s[78]++, `
As an expert educator, provide 3-5 specific suggestions to improve this ${type} plan:

Current content:
${existingContent}

${context ?
  /* istanbul ignore next */
  (cov_1k8b5c3bda().b[16][0]++, `Additional context: ${context}`) :
  /* istanbul ignore next */
  (cov_1k8b5c3bda().b[16][1]++, '')}

Focus on:
- Alignment with curriculum expectations
- Age-appropriate activities and language
- Assessment strategies
- Engagement and differentiation
- ETFO best practices

Provide practical, actionable suggestions.
  `);
  const client =
  /* istanbul ignore next */
  (cov_1k8b5c3bda().s[79]++, getOpenAIClient());
  /* istanbul ignore next */
  cov_1k8b5c3bda().s[80]++;
  if (!client) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().b[17][0]++;
    cov_1k8b5c3bda().s[81]++;
    console.warn('OpenAI API key not configured - returning empty suggestions');
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[82]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_1k8b5c3bda().b[17][1]++;
  }
  cov_1k8b5c3bda().s[83]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_1k8b5c3bda().s[84]++, await openai.chat.completions.create({
      model: 'gpt-4',
      messages: [{
        role: 'system',
        content: 'You are an experienced teacher mentor providing constructive feedback on lesson plans.'
      }, {
        role: 'user',
        content: prompt
      }],
      temperature: 0.4
    }));
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[85]++;
    return /* istanbul ignore next */(cov_1k8b5c3bda().b[18][0]++, response.choices[0]?.message?.content) ||
    /* istanbul ignore next */
    (cov_1k8b5c3bda().b[18][1]++, '');
  } catch (error) {
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[86]++;
    console.error('Error generating plan suggestions:', error);
    /* istanbul ignore next */
    cov_1k8b5c3bda().s[87]++;
    throw new Error('Failed to generate suggestions');
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,