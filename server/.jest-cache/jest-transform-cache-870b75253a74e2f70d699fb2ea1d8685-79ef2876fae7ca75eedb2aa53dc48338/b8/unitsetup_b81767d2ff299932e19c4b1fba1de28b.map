{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/setup/unit.setup.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/setup/unit.setup.ts"],"sourcesContent":["/**\n * Optimized Unit Test Setup\n * Fast, isolated setup with comprehensive mocking\n */\n\nimport { jest } from '@jest/globals';\n\n// Set test environment\nprocess.env.NODE_ENV = 'test';\nprocess.env.JWT_SECRET = 'test-secret';\nprocess.env.DATABASE_URL = 'file:./test.db';\n\n// Performance monitoring for tests\nconst testMetrics = new Map<string, { start: number; memory: number }>();\n\n// Hook into test lifecycle for performance monitoring\nif (process.env.MONITOR_TEST_PERFORMANCE === 'true') {\n  global.beforeEach(() => {\n    const testName = expect.getState().currentTestName || 'unknown';\n    testMetrics.set(testName, {\n      start: performance.now(),\n      memory: process.memoryUsage().heapUsed,\n    });\n  });\n\n  global.afterEach(() => {\n    const testName = expect.getState().currentTestName || 'unknown';\n    const metrics = testMetrics.get(testName);\n    if (metrics) {\n      const duration = performance.now() - metrics.start;\n      const memoryDelta = process.memoryUsage().heapUsed - metrics.memory;\n      \n      // Log slow tests\n      if (duration > 100) {\n        console.warn(`⚠️  Slow test: ${testName} took ${duration.toFixed(2)}ms`);\n      }\n      \n      // Log memory leaks\n      if (memoryDelta > 10 * 1024 * 1024) { // 10MB\n        console.warn(`⚠️  Memory leak suspected: ${testName} used ${(memoryDelta / 1024 / 1024).toFixed(2)}MB`);\n      }\n    }\n  });\n}\n\n// Mock all external dependencies upfront\njest.mock('@teaching-engine/database');\njest.mock('openai');\njest.mock('fs');\njest.mock('path');\njest.mock('canvas');\njest.mock('pdfkit');\njest.mock('pdf-parse');\njest.mock('mammoth');\njest.mock('cheerio');\njest.mock('axios');\njest.mock('node-cron');\njest.mock('handlebars');\njest.mock('html-to-docx');\njest.mock('archiver');\njest.mock('unzipper');\n\n// Mock heavy services\njest.mock('@/services/emailService');\njest.mock('@/services/embeddingService');\njest.mock('@/services/llmService');\njest.mock('@/services/clusteringService');\njest.mock('@/services/materialGenerator');\njest.mock('@/services/aiPlanningAssistant');\n\n// Mock logger with no-op functions for speed\njest.mock('@/logger', () => ({\n  __esModule: true,\n  default: {\n    debug: jest.fn(),\n    info: jest.fn(),\n    warn: jest.fn(),\n    error: jest.fn(),\n    child: jest.fn(() => ({\n      debug: jest.fn(),\n      info: jest.fn(),\n      warn: jest.fn(),\n      error: jest.fn(),\n    })),\n  },\n}));\n\n// Clear all mocks between tests\nafterEach(() => {\n  jest.clearAllMocks();\n});\n\n// Export test utilities\nexport const getMockPrismaClient = () => {\n  const { PrismaClient } = jest.requireMock('@teaching-engine/database');\n  return new PrismaClient();\n};\n\nexport const resetAllMocks = () => {\n  jest.clearAllMocks();\n  jest.resetModules();\n};"],"version":3}