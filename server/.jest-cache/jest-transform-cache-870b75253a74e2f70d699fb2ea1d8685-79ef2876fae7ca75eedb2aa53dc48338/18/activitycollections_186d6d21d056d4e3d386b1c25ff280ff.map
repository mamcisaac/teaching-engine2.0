{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/activity-collections.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/activity-collections.ts"],"sourcesContent":["import { Router } from 'express';\nimport { authMiddleware } from '../middleware/auth';\nimport { z } from 'zod';\nimport { prisma } from '../prisma';\n\nconst router = Router();\n\n// Get user's collections\nrouter.get('/', authMiddleware, async (req, res) => {\n  try {\n    const { includePublic = false } = req.query;\n    \n    const where = includePublic \n      ? {\n          OR: [\n            { userId: req.user!.id },\n            { isPublic: true }\n          ]\n        }\n      : { userId: req.user!.id };\n    \n    const collections = await prisma.activityCollection.findMany({\n      where,\n      include: {\n        _count: {\n          select: { items: true }\n        },\n        user: {\n          select: {\n            id: true,\n            name: true\n          }\n        }\n      },\n      orderBy: { updatedAt: 'desc' }\n    });\n    \n    res.json({\n      success: true,\n      data: collections\n    });\n  } catch (error) {\n    console.error('Get collections error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get collections'\n    });\n  }\n});\n\n// Get collection details with activities\nrouter.get('/:collectionId', authMiddleware, async (req, res) => {\n  try {\n    const { collectionId } = req.params;\n    \n    const collection = await prisma.activityCollection.findFirst({\n      where: {\n        id: collectionId,\n        OR: [\n          { userId: req.user!.id },\n          { isPublic: true }\n        ]\n      },\n      include: {\n        items: {\n          include: {\n            activity: true\n          },\n          orderBy: { addedAt: 'desc' }\n        },\n        user: {\n          select: {\n            id: true,\n            name: true\n          }\n        }\n      }\n    });\n    \n    if (!collection) {\n      return res.status(404).json({\n        success: false,\n        error: 'Collection not found'\n      });\n    }\n    \n    res.json({\n      success: true,\n      data: collection\n    });\n  } catch (error) {\n    console.error('Get collection details error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get collection details'\n    });\n  }\n});\n\n// Create a new collection\nconst createCollectionSchema = z.object({\n  name: z.string().min(1).max(100),\n  description: z.string().optional(),\n  isPublic: z.boolean().optional().default(false)\n});\n\nrouter.post('/', authMiddleware, async (req, res) => {\n  try {\n    const data = createCollectionSchema.parse(req.body);\n    \n    const collection = await prisma.activityCollection.create({\n      data: {\n        name: data.name,\n        description: data.description,\n        isPublic: data.isPublic || false,\n        userId: req.user!.id\n      }\n    });\n    \n    res.json({\n      success: true,\n      data: collection\n    });\n  } catch (error) {\n    console.error('Create collection error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to create collection'\n    });\n  }\n});\n\n// Update collection\nconst updateCollectionSchema = z.object({\n  name: z.string().min(1).max(100).optional(),\n  description: z.string().optional(),\n  isPublic: z.boolean().optional()\n});\n\nrouter.put('/:collectionId', authMiddleware, async (req, res) => {\n  try {\n    const { collectionId } = req.params;\n    const data = updateCollectionSchema.parse(req.body);\n    \n    // Check ownership\n    const existing = await prisma.activityCollection.findFirst({\n      where: {\n        id: collectionId,\n        userId: req.user!.id\n      }\n    });\n    \n    if (!existing) {\n      return res.status(404).json({\n        success: false,\n        error: 'Collection not found or you do not have permission to edit it'\n      });\n    }\n    \n    const updated = await prisma.activityCollection.update({\n      where: { id: collectionId },\n      data\n    });\n    \n    res.json({\n      success: true,\n      data: updated\n    });\n  } catch (error) {\n    console.error('Update collection error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to update collection'\n    });\n  }\n});\n\n// Delete collection\nrouter.delete('/:collectionId', authMiddleware, async (req, res) => {\n  try {\n    const { collectionId } = req.params;\n    \n    // Check ownership\n    const existing = await prisma.activityCollection.findFirst({\n      where: {\n        id: collectionId,\n        userId: req.user!.id\n      }\n    });\n    \n    if (!existing) {\n      return res.status(404).json({\n        success: false,\n        error: 'Collection not found or you do not have permission to delete it'\n      });\n    }\n    \n    await prisma.activityCollection.delete({\n      where: { id: collectionId }\n    });\n    \n    res.json({\n      success: true,\n      message: 'Collection deleted successfully'\n    });\n  } catch (error) {\n    console.error('Delete collection error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to delete collection'\n    });\n  }\n});\n\n// Add activity to collection\nconst addActivitySchema = z.object({\n  activityId: z.string()\n});\n\nrouter.post('/:collectionId/activities', authMiddleware, async (req, res) => {\n  try {\n    const { collectionId } = req.params;\n    const { activityId } = addActivitySchema.parse(req.body);\n    \n    // Check collection ownership\n    const collection = await prisma.activityCollection.findFirst({\n      where: {\n        id: collectionId,\n        userId: req.user!.id\n      }\n    });\n    \n    if (!collection) {\n      return res.status(404).json({\n        success: false,\n        error: 'Collection not found or you do not have permission to modify it'\n      });\n    }\n    \n    // Check if activity exists\n    const activity = await prisma.externalActivity.findUnique({\n      where: { id: activityId }\n    });\n    \n    if (!activity) {\n      return res.status(404).json({\n        success: false,\n        error: 'Activity not found'\n      });\n    }\n    \n    // Add to collection (upsert to avoid duplicates)\n    const item = await prisma.activityCollectionItem.upsert({\n      where: {\n        collectionId_activityId: {\n          collectionId,\n          activityId\n        }\n      },\n      update: {\n        addedAt: new Date() // Update timestamp if re-adding\n      },\n      create: {\n        collectionId,\n        activityId\n      },\n      include: {\n        activity: true\n      }\n    });\n    \n    res.json({\n      success: true,\n      data: item\n    });\n  } catch (error) {\n    console.error('Add activity to collection error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to add activity to collection'\n    });\n  }\n});\n\n// Remove activity from collection\nrouter.delete('/:collectionId/activities/:activityId', authMiddleware, async (req, res) => {\n  try {\n    const { collectionId, activityId } = req.params;\n    \n    // Check collection ownership\n    const collection = await prisma.activityCollection.findFirst({\n      where: {\n        id: collectionId,\n        userId: req.user!.id\n      }\n    });\n    \n    if (!collection) {\n      return res.status(404).json({\n        success: false,\n        error: 'Collection not found or you do not have permission to modify it'\n      });\n    }\n    \n    await prisma.activityCollectionItem.delete({\n      where: {\n        collectionId_activityId: {\n          collectionId,\n          activityId\n        }\n      }\n    });\n    \n    res.json({\n      success: true,\n      message: 'Activity removed from collection'\n    });\n  } catch (error) {\n    console.error('Remove activity from collection error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to remove activity from collection'\n    });\n  }\n});\n\n// Get popular/trending collections\nrouter.get('/trending/public', authMiddleware, async (req, res) => {\n  try {\n    const { limit = 10 } = req.query;\n    \n    const collections = await prisma.activityCollection.findMany({\n      where: { isPublic: true },\n      include: {\n        _count: {\n          select: { items: true }\n        },\n        user: {\n          select: {\n            id: true,\n            name: true\n          }\n        }\n      },\n      orderBy: [\n        { items: { _count: 'desc' } },\n        { updatedAt: 'desc' }\n      ],\n      take: Number(limit)\n    });\n    \n    res.json({\n      success: true,\n      data: collections\n    });\n  } catch (error) {\n    console.error('Get trending collections error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get trending collections'\n    });\n  }\n});\n\nexport default router;"],"version":3}