{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/auditLog.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/auditLog.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport logger from '../logger';\n\n\ninterface AuditLogOptions {\n  action: string;\n  resourceType: 'student' | 'parent_summary' | 'lesson_plan' | 'unit_plan' | 'curriculum' | 'user';\n  sensitiveData?: boolean;\n  includeRequestBody?: boolean;\n  includeResponseStatus?: boolean;\n}\n\nexport function createAuditLog(options: AuditLogOptions) {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    const startTime = Date.now();\n    const auditEntry = {\n      action: options.action,\n      resourceType: options.resourceType,\n      resourceId: req.params.id || req.params.studentId || null,\n      userId: req.user?.id || null,\n      ipAddress: req.ip || req.connection.remoteAddress || 'unknown',\n      userAgent: req.headers['user-agent'] || 'unknown',\n      method: req.method,\n      path: req.path,\n      timestamp: new Date(),\n      requestBody: options.includeRequestBody && !options.sensitiveData ? req.body : undefined,\n      responseStatus: 0,\n      duration: 0,\n    };\n\n    // Log response when it's sent\n    const originalSend = res.send;\n    res.send = function(data) {\n      auditEntry.responseStatus = res.statusCode;\n      auditEntry.duration = Date.now() - startTime;\n\n      // Log to database asynchronously\n      if (options.sensitiveData || auditEntry.responseStatus < 400) {\n        logAuditEntry(auditEntry).catch(error => {\n          logger.error({ error, auditEntry }, 'Failed to create audit log entry');\n        });\n      }\n\n      return originalSend.call(this, data);\n    };\n\n    next();\n  };\n}\n\nasync function logAuditEntry(entry: {\n  action: string;\n  resourceType: string;\n  resourceId: string | null;\n  userId: number | null;\n  ipAddress: string;\n  userAgent: string;\n  method: string;\n  path: string;\n  timestamp: Date;\n  requestBody?: unknown;\n  responseStatus: number;\n  duration: number;\n}) {\n  try {\n    // AuditLog model archived - audit logging disabled in ETFO migration\n    console.log('Audit log entry (model archived):', {\n      action: entry.action,\n      resourceType: entry.resourceType,\n      resourceId: entry.resourceId,\n      userId: entry.userId,\n      ipAddress: entry.ipAddress,\n      userAgent: entry.userAgent,\n      method: entry.method,\n      path: entry.path,\n      requestBody: entry.requestBody ? '[LOGGED TO CONSOLE ONLY]' : null,\n      responseStatus: entry.responseStatus,\n      duration: entry.duration,\n      timestamp: entry.timestamp,\n    });\n  } catch (error) {\n    // If audit log table doesn't exist, just log to console\n    logger.warn({ entry }, 'Audit log entry (table may not exist)');\n  }\n}\n\n// Pre-configured audit loggers for different operations\nexport const auditLoggers = {\n  // Student data access\n  studentView: createAuditLog({\n    action: 'VIEW_STUDENT',\n    resourceType: 'student',\n    sensitiveData: true,\n  }),\n  \n  studentCreate: createAuditLog({\n    action: 'CREATE_STUDENT',\n    resourceType: 'student',\n    sensitiveData: true,\n    includeRequestBody: true,\n  }),\n  \n  studentUpdate: createAuditLog({\n    action: 'UPDATE_STUDENT',\n    resourceType: 'student',\n    sensitiveData: true,\n    includeRequestBody: true,\n  }),\n  \n  studentDelete: createAuditLog({\n    action: 'DELETE_STUDENT',\n    resourceType: 'student',\n    sensitiveData: true,\n  }),\n  \n  // Parent communication\n  parentSummaryView: createAuditLog({\n    action: 'VIEW_PARENT_SUMMARY',\n    resourceType: 'parent_summary',\n    sensitiveData: true,\n  }),\n  \n  parentSummaryCreate: createAuditLog({\n    action: 'CREATE_PARENT_SUMMARY',\n    resourceType: 'parent_summary',\n    sensitiveData: true,\n  }),\n};"],"version":3}