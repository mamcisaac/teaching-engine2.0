{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/test-setup-helpers.ts","mappings":"AAAA,OAAO,MAAM,MAAM,UAAU,CAAC;AAG9B;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,MAAoB;IACvD,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;IAC7D,OAAO,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QAC9B,KAAK,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE;QACpC,MAAM,EAAE,EAAE;QACV,MAAM,EAAE;YACN,KAAK,EAAE,kBAAkB;YACzB,QAAQ,EAAE,cAAc;YACxB,IAAI,EAAE,WAAW;YACjB,IAAI,EAAE,SAAS;SAChB;KACF,CAAC,CAAC;AACL,CAAC;AAED;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAC1C,MAAoB,EACpB,IAAoC;IAEpC,MAAM,cAAc,CAAC,MAAM,CAAC,CAAC;IAC7B,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;AACrB,CAAC","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/test-setup-helpers.ts"],"sourcesContent":["import bcrypt from 'bcryptjs';\nimport { PrismaClient } from '@teaching-engine/database';\n\n/**\n * Creates a test user for authentication in tests.\n * This should be called in beforeEach to ensure the user exists after database resets.\n */\nexport async function createTestUser(prisma: PrismaClient) {\n  const hashedPassword = await bcrypt.hash('testpassword', 10);\n  return await prisma.user.upsert({\n    where: { email: 'test@example.com' },\n    update: {},\n    create: {\n      email: 'test@example.com',\n      password: hashedPassword,\n      name: 'Test User',\n      role: 'teacher',\n    },\n  });\n}\n\n/**\n * Standard beforeEach setup for tests that need authentication.\n * Creates a test user and sets up auth.\n */\nexport async function setupAuthenticatedTest(\n  prisma: PrismaClient,\n  auth: { setup: () => Promise<void> },\n) {\n  await createTestUser(prisma);\n  await auth.setup();\n}\n"],"version":3}