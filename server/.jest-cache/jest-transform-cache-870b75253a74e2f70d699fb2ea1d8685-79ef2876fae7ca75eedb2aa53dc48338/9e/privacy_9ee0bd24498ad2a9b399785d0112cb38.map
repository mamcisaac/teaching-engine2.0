{"version":3,"names":["cov_22iqn5xtby","actualCoverage","maskStudentData","student","options","b","f","showFullName","showGrade","showReflections","showGoals","isOwner","s","masked","firstName","lastName","charAt","name","grade","reflections","_count","goals","createdAt","updatedAt","userId","getStudentIdentifier","firstInitial","toUpperCase","lastInitial","idSuffix","id","String","slice","canAccessStudentDetails","_permissionLevel","sanitizeStudentDataForExport","students","map","studentId","totalGoals","totalReflections","totalArtifacts","artifacts","validateStudentDataAccess","requestingUserId","targetStudentId","_operation","allowed","reason"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/utils/privacy.ts"],"sourcesContent":["/**\n * Privacy utilities for protecting student data\n */\n\nexport interface PrivacyOptions {\n  showFullName?: boolean;\n  showGrade?: boolean;\n  showReflections?: boolean;\n  showGoals?: boolean;\n  isOwner?: boolean;\n}\n\n/**\n * Masks sensitive student information based on privacy settings\n */\nexport function maskStudentData(student: Record<string, unknown>, options: PrivacyOptions = {}): Record<string, unknown> | null {\n  const {\n    showFullName = true,\n    showGrade = true,\n    showReflections = true,\n    showGoals = true,\n    isOwner = true,\n  } = options;\n\n  if (!student) return null;\n\n  const masked = { ...student };\n\n  // Mask name if needed\n  if (!showFullName && !isOwner) {\n    if (typeof student.firstName === 'string' && typeof student.lastName === 'string') {\n      masked.firstName = student.firstName.charAt(0) + '***';\n      masked.lastName = student.lastName.charAt(0) + '***';\n      masked.name = `${masked.firstName} ${masked.lastName}`;\n    }\n  }\n\n  // Remove grade if not allowed\n  if (!showGrade && !isOwner) {\n    delete masked.grade;\n  }\n\n  // Remove reflections if not allowed\n  if (!showReflections && !isOwner) {\n    delete masked.reflections;\n    if (masked._count && typeof masked._count === 'object') {\n      delete (masked._count as Record<string, unknown>).reflections;\n    }\n  }\n\n  // Remove goals if not allowed\n  if (!showGoals && !isOwner) {\n    delete masked.goals;\n    if (masked._count && typeof masked._count === 'object') {\n      delete (masked._count as Record<string, unknown>).goals;\n    }\n  }\n\n  // Always remove system fields\n  delete masked.createdAt;\n  delete masked.updatedAt;\n  delete masked.userId; // Never expose the teacher's ID\n\n  return masked;\n}\n\n/**\n * Generates a privacy-safe student identifier for logging\n */\nexport function getStudentIdentifier(student: Record<string, unknown>): string {\n  if (!student) return 'unknown';\n  \n  // Use initials + partial ID for privacy\n  const firstInitial = typeof student.firstName === 'string' ? student.firstName.charAt(0).toUpperCase() : 'X';\n  const lastInitial = typeof student.lastName === 'string' ? student.lastName.charAt(0).toUpperCase() : 'X';\n  const idSuffix = student.id ? String(student.id).slice(-4) : '0000';\n  \n  return `${firstInitial}${lastInitial}-${idSuffix}`;\n}\n\n/**\n * Checks if a user has permission to access detailed student data\n */\nexport function canAccessStudentDetails(\n  userId: number,\n  student: Record<string, unknown>,\n  _permissionLevel: 'view' | 'edit' | 'delete' = 'view'\n): boolean {\n  // Teacher can only access their own students\n  if (student.userId !== userId) {\n    return false;\n  }\n\n  // Additional permission checks can be added here\n  // For example, checking roles, time-based access, etc.\n\n  return true;\n}\n\n/**\n * Sanitizes student data for export or sharing\n */\nexport function sanitizeStudentDataForExport(students: Record<string, unknown>[]): Record<string, unknown>[] {\n  return students.map(student => ({\n    // Only include necessary fields\n    studentId: getStudentIdentifier(student),\n    grade: student.grade,\n    // Aggregate data only\n    totalGoals: (student._count && typeof student._count === 'object' && (student._count as Record<string, unknown>).goals) || 0,\n    totalReflections: (student._count && typeof student._count === 'object' && (student._count as Record<string, unknown>).reflections) || 0,\n    totalArtifacts: (student._count && typeof student._count === 'object' && (student._count as Record<string, unknown>).artifacts) || 0,\n    // No personally identifiable information\n  }));\n}\n\n/**\n * Validates student data access request\n */\nexport function validateStudentDataAccess(\n  requestingUserId: number,\n  targetStudentId: number,\n  _operation: 'read' | 'write' | 'delete'\n): { allowed: boolean; reason?: string } {\n  // Implement access control logic\n  if (!requestingUserId) {\n    return { allowed: false, reason: 'User not authenticated' };\n  }\n\n  if (!targetStudentId) {\n    return { allowed: false, reason: 'Invalid student ID' };\n  }\n\n  // Additional validation can be added here\n  // For example: checking if user is suspended, checking access logs for suspicious activity, etc.\n\n  return { allowed: true };\n}"],"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","ignoreList":[]}