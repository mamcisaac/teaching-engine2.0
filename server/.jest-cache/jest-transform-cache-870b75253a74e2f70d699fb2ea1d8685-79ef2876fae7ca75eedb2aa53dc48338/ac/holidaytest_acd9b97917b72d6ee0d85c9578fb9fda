b0f5eb35f381bd1c71a5b082fa23d581
import { app } from '../../src/index';
import { authRequest } from '../test-auth-helper';
const auth = authRequest(app);
describe('Holiday API', () => {
    beforeAll(async () => {
        await auth.setup();
    });
    it('creates and lists holidays', async () => {
        const create = await auth
            .post('/api/holidays')
            .send({ date: '2025-12-25T00:00:00.000Z', name: 'Christmas' });
        expect(create.status).toBe(201);
        const list = await auth.get('/api/holidays');
        expect(list.status).toBe(200);
        expect(list.body.length).toBeGreaterThan(0);
    });
    it('deletes holiday', async () => {
        const res = await auth
            .post('/api/holidays')
            .send({ date: '2025-01-01T00:00:00.000Z', name: 'NY' });
        const id = res.body.id;
        const del = await auth.delete(`/api/holidays/${id}`);
        expect(del.status).toBe(204);
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21pY2hhZWxtY2lzYWFjL0dpdEh1Yi90ZWFjaGluZy1lbmdpbmUyLjAvc2VydmVyL3Rlc3RzL2ludGVncmF0aW9uL2hvbGlkYXkudGVzdC50cyIsIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWxELE1BQU0sSUFBSSxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUU5QixRQUFRLENBQUMsYUFBYSxFQUFFLEdBQUcsRUFBRTtJQUMzQixTQUFTLENBQUMsS0FBSyxJQUFJLEVBQUU7UUFDbkIsTUFBTSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckIsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsNEJBQTRCLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDMUMsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJO2FBQ3RCLElBQUksQ0FBQyxlQUFlLENBQUM7YUFDckIsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLDBCQUEwQixFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFDO1FBQ2pFLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hDLE1BQU0sSUFBSSxHQUFHLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUM3QyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM5QixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDOUMsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsaUJBQWlCLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFDL0IsTUFBTSxHQUFHLEdBQUcsTUFBTSxJQUFJO2FBQ25CLElBQUksQ0FBQyxlQUFlLENBQUM7YUFDckIsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLDBCQUEwQixFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1FBQzFELE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBWSxDQUFDO1FBQ2pDLE1BQU0sR0FBRyxHQUFHLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNyRCxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMvQixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9taWNoYWVsbWNpc2FhYy9HaXRIdWIvdGVhY2hpbmctZW5naW5lMi4wL3NlcnZlci90ZXN0cy9pbnRlZ3JhdGlvbi9ob2xpZGF5LnRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXBwIH0gZnJvbSAnLi4vLi4vc3JjL2luZGV4JztcbmltcG9ydCB7IGF1dGhSZXF1ZXN0IH0gZnJvbSAnLi4vdGVzdC1hdXRoLWhlbHBlcic7XG5cbmNvbnN0IGF1dGggPSBhdXRoUmVxdWVzdChhcHApO1xuXG5kZXNjcmliZSgnSG9saWRheSBBUEknLCAoKSA9PiB7XG4gIGJlZm9yZUFsbChhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgYXV0aC5zZXR1cCgpO1xuICB9KTtcblxuICBpdCgnY3JlYXRlcyBhbmQgbGlzdHMgaG9saWRheXMnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgY3JlYXRlID0gYXdhaXQgYXV0aFxuICAgICAgLnBvc3QoJy9hcGkvaG9saWRheXMnKVxuICAgICAgLnNlbmQoeyBkYXRlOiAnMjAyNS0xMi0yNVQwMDowMDowMC4wMDBaJywgbmFtZTogJ0NocmlzdG1hcycgfSk7XG4gICAgZXhwZWN0KGNyZWF0ZS5zdGF0dXMpLnRvQmUoMjAxKTtcbiAgICBjb25zdCBsaXN0ID0gYXdhaXQgYXV0aC5nZXQoJy9hcGkvaG9saWRheXMnKTtcbiAgICBleHBlY3QobGlzdC5zdGF0dXMpLnRvQmUoMjAwKTtcbiAgICBleHBlY3QobGlzdC5ib2R5Lmxlbmd0aCkudG9CZUdyZWF0ZXJUaGFuKDApO1xuICB9KTtcblxuICBpdCgnZGVsZXRlcyBob2xpZGF5JywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGF1dGhcbiAgICAgIC5wb3N0KCcvYXBpL2hvbGlkYXlzJylcbiAgICAgIC5zZW5kKHsgZGF0ZTogJzIwMjUtMDEtMDFUMDA6MDA6MDAuMDAwWicsIG5hbWU6ICdOWScgfSk7XG4gICAgY29uc3QgaWQgPSByZXMuYm9keS5pZCBhcyBudW1iZXI7XG4gICAgY29uc3QgZGVsID0gYXdhaXQgYXV0aC5kZWxldGUoYC9hcGkvaG9saWRheXMvJHtpZH1gKTtcbiAgICBleHBlY3QoZGVsLnN0YXR1cykudG9CZSgyMDQpO1xuICB9KTtcbn0pO1xuIl0sInZlcnNpb24iOjN9