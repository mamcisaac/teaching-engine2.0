288f918ef71d440a3855d76f91dc7edf
/* istanbul ignore next */
function cov_o75b64vfv() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/inputSanitization.ts";
  var hash = "7b13d5e8d4739c351656fb66c0eff293ebf9562d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/inputSanitization.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "1": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 10,
          column: 9
        }
      },
      "2": {
        start: {
          line: 9,
          column: 12
        },
        end: {
          line: 9,
          column: 48
        }
      },
      "3": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 14,
          column: 9
        }
      },
      "4": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "6": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 52
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 15
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 58
        }
      },
      "9": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 62
        }
      },
      "10": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "12": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "13": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "14": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "15": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 53
        }
      },
      "16": {
        start: {
          line: 37,
          column: 31
        },
        end: {
          line: 37,
          column: 51
        }
      },
      "17": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "18": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 28
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "20": {
        start: {
          line: 43,
          column: 33
        },
        end: {
          line: 43,
          column: 52
        }
      },
      "21": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 60
        }
      },
      "22": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 25
        }
      },
      "23": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "24": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "25": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 19
        }
      },
      "26": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 23
        }
      },
      "27": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "28": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 45
        }
      },
      "29": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 58
        }
      },
      "30": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "31": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 50
        }
      },
      "32": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 21
        }
      },
      "33": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "34": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 18
        }
      },
      "35": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 93,
          column: 7
        }
      },
      "36": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "37": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "38": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 46
        }
      },
      "39": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 49
        }
      },
      "40": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "41": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 48
        }
      },
      "42": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 21
        }
      },
      "43": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "44": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 18
        }
      },
      "45": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 119,
          column: 30
        }
      },
      "46": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "47": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 18
        }
      },
      "48": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 49
        }
      },
      "49": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "50": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 18
        }
      },
      "51": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 21
        }
      },
      "52": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "53": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 50
        }
      },
      "54": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "55": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 57
        }
      },
      "56": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "sanitizeInput",
        decl: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 5,
            column: 29
          }
        },
        loc: {
          start: {
            line: 5,
            column: 46
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "sanitizeObject",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 23
          }
        },
        loc: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 37,
            column: 24
          }
        },
        loc: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 51
          }
        },
        line: 37
      },
      "3": {
        name: "sanitizeString",
        decl: {
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 23
          }
        },
        loc: {
          start: {
            line: 53,
            column: 29
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 53
      },
      "4": {
        name: "sanitizeHtml",
        decl: {
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 78,
            column: 28
          }
        },
        loc: {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 78
      },
      "5": {
        name: "sanitizeEmail",
        decl: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 29
          }
        },
        loc: {
          start: {
            line: 98,
            column: 37
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 98
      },
      "6": {
        name: "sanitizeUrl",
        decl: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 115,
            column: 27
          }
        },
        loc: {
          start: {
            line: 115,
            column: 33
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 115
      },
      "7": {
        name: "escapeSqlIdentifier",
        decl: {
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 135,
            column: 35
          }
        },
        loc: {
          start: {
            line: 135,
            column: 48
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 135
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 10,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 10,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 8,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 8,
            column: 20
          }
        }, {
          start: {
            line: 8,
            column: 24
          },
          end: {
            line: 8,
            column: 52
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 14,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 14,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "3": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 21
          }
        }, {
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 12,
            column: 54
          }
        }],
        line: 12
      },
      "4": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "5": {
        loc: {
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 12
          },
          end: {
            line: 16,
            column: 22
          }
        }, {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 56
          }
        }],
        line: 16
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 41
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "9": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "12": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "13": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "14": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 79,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 79,
            column: 14
          }
        }, {
          start: {
            line: 79,
            column: 18
          },
          end: {
            line: 79,
            column: 43
          }
        }],
        line: 79
      },
      "15": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "16": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 99,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 99,
            column: 14
          }
        }, {
          start: {
            line: 99,
            column: 18
          },
          end: {
            line: 99,
            column: 43
          }
        }],
        line: 99
      },
      "17": {
        loc: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "18": {
        loc: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "19": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 12
          }
        }, {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 39
          }
        }],
        line: 116
      },
      "20": {
        loc: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "21": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "22": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "23": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 136,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 136,
            column: 19
          }
        }, {
          start: {
            line: 136,
            column: 23
          },
          end: {
            line: 136,
            column: 53
          }
        }],
        line: 136
      },
      "24": {
        loc: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/inputSanitization.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/inputSanitization.ts"],
      sourcesContent: ["import { Request, Response, NextFunction } from 'express';\nimport { ParsedQs } from 'qs';\nimport { ParamsDictionary } from 'express-serve-static-core';\nimport DOMPurify from 'isomorphic-dompurify';\n\n/**\n * Input sanitization middleware to prevent XSS and injection attacks\n */\nexport function sanitizeInput(req: Request, res: Response, next: NextFunction) {\n  try {\n    // Sanitize request body\n    if (req.body && typeof req.body === 'object') {\n      req.body = sanitizeObject(req.body);\n    }\n\n    // Sanitize query parameters\n    if (req.query && typeof req.query === 'object') {\n      req.query = sanitizeObject(req.query) as ParsedQs;\n    }\n\n    // Sanitize params\n    if (req.params && typeof req.params === 'object') {\n      req.params = sanitizeObject(req.params) as ParamsDictionary;\n    }\n\n    next();\n  } catch (error) {\n    console.error('Input sanitization error:', error);\n    res.status(400).json({ error: 'Invalid input data' });\n  }\n}\n\n/**\n * Recursively sanitize an object's string values\n */\nfunction sanitizeObject(obj: unknown): unknown {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n\n  if (typeof obj === 'string') {\n    return sanitizeString(obj);\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(item => sanitizeObject(item));\n  }\n\n  if (typeof obj === 'object') {\n    const sanitized: Record<string, unknown> = {};\n    for (const [key, value] of Object.entries(obj)) {\n      // Sanitize the key as well\n      const sanitizedKey = sanitizeString(key);\n      sanitized[sanitizedKey] = sanitizeObject(value);\n    }\n    return sanitized;\n  }\n\n  return obj;\n}\n\n/**\n * Sanitize a string value\n */\nfunction sanitizeString(str: string): string {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  // Remove potential XSS vectors\n  let sanitized = str;\n\n  // Remove script tags and event handlers\n  sanitized = DOMPurify.sanitize(sanitized, {\n    ALLOWED_TAGS: [],\n    ALLOWED_ATTR: [],\n    KEEP_CONTENT: true\n  });\n\n  // Remove null bytes and control characters\n  sanitized = sanitized.replace(/\\0/g, '');\n  // eslint-disable-next-line no-control-regex\n  sanitized = sanitized.replace(/[\\x00-\\x1F\\x7F]/g, '');\n\n  // Limit string length to prevent DoS\n  if (sanitized.length > 10000) {\n    sanitized = sanitized.substring(0, 10000);\n  }\n\n  return sanitized;\n}\n\n/**\n * Strict HTML sanitization for rich text content\n */\nexport function sanitizeHtml(dirty: string): string {\n  if (!dirty || typeof dirty !== 'string') {\n    return '';\n  }\n\n  return DOMPurify.sanitize(dirty, {\n    ALLOWED_TAGS: [\n      'p', 'br', 'strong', 'em', 'u', 'ol', 'ul', 'li',\n      'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote'\n    ],\n    ALLOWED_ATTR: ['class'],\n    FORBID_TAGS: ['script', 'object', 'embed', 'form', 'input', 'iframe'],\n    FORBID_ATTR: ['onerror', 'onload', 'onclick', 'onmouseover', 'onfocus', 'onblur'],\n    ALLOW_DATA_ATTR: false,\n    SANITIZE_DOM: true,\n    KEEP_CONTENT: true\n  });\n}\n\n/**\n * Validate and sanitize email addresses\n */\nexport function sanitizeEmail(email: string): string {\n  if (!email || typeof email !== 'string') {\n    return '';\n  }\n\n  // Basic email sanitization\n  let sanitized = email.trim().toLowerCase();\n  \n  // Remove dangerous characters\n  sanitized = sanitized.replace(/[<>'\"]/g, '');\n  \n  // Limit length\n  if (sanitized.length > 255) {\n    sanitized = sanitized.substring(0, 255);\n  }\n\n  return sanitized;\n}\n\n/**\n * Validate and sanitize URLs\n */\nexport function sanitizeUrl(url: string): string {\n  if (!url || typeof url !== 'string') {\n    return '';\n  }\n\n  let sanitized = url.trim();\n\n  // Only allow http/https protocols\n  if (!sanitized.match(/^https?:\\/\\//)) {\n    return '';\n  }\n\n  // Remove dangerous characters\n  sanitized = sanitized.replace(/[<>'\"]/g, '');\n\n  // Limit length\n  if (sanitized.length > 2000) {\n    return '';\n  }\n\n  return sanitized;\n}\n\n/**\n * SQL injection prevention for dynamic queries\n */\nexport function escapeSqlIdentifier(identifier: string): string {\n  if (!identifier || typeof identifier !== 'string') {\n    throw new Error('Invalid SQL identifier');\n  }\n\n  // Allow only alphanumeric and underscore\n  if (!/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(identifier)) {\n    throw new Error('Invalid SQL identifier format');\n  }\n\n  return identifier;\n}\n\nexport default {\n  sanitizeInput,\n  sanitizeHtml,\n  sanitizeEmail,\n  sanitizeUrl,\n  escapeSqlIdentifier\n};"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7b13d5e8d4739c351656fb66c0eff293ebf9562d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_o75b64vfv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_o75b64vfv();
import DOMPurify from 'isomorphic-dompurify';
/**
 * Input sanitization middleware to prevent XSS and injection attacks
 */
export function sanitizeInput(req, res, next) {
  /* istanbul ignore next */
  cov_o75b64vfv().f[0]++;
  cov_o75b64vfv().s[0]++;
  try {
    /* istanbul ignore next */
    cov_o75b64vfv().s[1]++;
    // Sanitize request body
    if (
    /* istanbul ignore next */
    (cov_o75b64vfv().b[1][0]++, req.body) &&
    /* istanbul ignore next */
    (cov_o75b64vfv().b[1][1]++, typeof req.body === 'object')) {
      /* istanbul ignore next */
      cov_o75b64vfv().b[0][0]++;
      cov_o75b64vfv().s[2]++;
      req.body = sanitizeObject(req.body);
    } else
    /* istanbul ignore next */
    {
      cov_o75b64vfv().b[0][1]++;
    }
    // Sanitize query parameters
    cov_o75b64vfv().s[3]++;
    if (
    /* istanbul ignore next */
    (cov_o75b64vfv().b[3][0]++, req.query) &&
    /* istanbul ignore next */
    (cov_o75b64vfv().b[3][1]++, typeof req.query === 'object')) {
      /* istanbul ignore next */
      cov_o75b64vfv().b[2][0]++;
      cov_o75b64vfv().s[4]++;
      req.query = sanitizeObject(req.query);
    } else
    /* istanbul ignore next */
    {
      cov_o75b64vfv().b[2][1]++;
    }
    // Sanitize params
    cov_o75b64vfv().s[5]++;
    if (
    /* istanbul ignore next */
    (cov_o75b64vfv().b[5][0]++, req.params) &&
    /* istanbul ignore next */
    (cov_o75b64vfv().b[5][1]++, typeof req.params === 'object')) {
      /* istanbul ignore next */
      cov_o75b64vfv().b[4][0]++;
      cov_o75b64vfv().s[6]++;
      req.params = sanitizeObject(req.params);
    } else
    /* istanbul ignore next */
    {
      cov_o75b64vfv().b[4][1]++;
    }
    cov_o75b64vfv().s[7]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_o75b64vfv().s[8]++;
    console.error('Input sanitization error:', error);
    /* istanbul ignore next */
    cov_o75b64vfv().s[9]++;
    res.status(400).json({
      error: 'Invalid input data'
    });
  }
}
/**
 * Recursively sanitize an object's string values
 */
function sanitizeObject(obj) {
  /* istanbul ignore next */
  cov_o75b64vfv().f[1]++;
  cov_o75b64vfv().s[10]++;
  if (
  /* istanbul ignore next */
  (cov_o75b64vfv().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_o75b64vfv().b[7][1]++, obj === undefined)) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[6][0]++;
    cov_o75b64vfv().s[11]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[6][1]++;
  }
  cov_o75b64vfv().s[12]++;
  if (typeof obj === 'string') {
    /* istanbul ignore next */
    cov_o75b64vfv().b[8][0]++;
    cov_o75b64vfv().s[13]++;
    return sanitizeString(obj);
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[8][1]++;
  }
  cov_o75b64vfv().s[14]++;
  if (Array.isArray(obj)) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[9][0]++;
    cov_o75b64vfv().s[15]++;
    return obj.map(item => {
      /* istanbul ignore next */
      cov_o75b64vfv().f[2]++;
      cov_o75b64vfv().s[16]++;
      return sanitizeObject(item);
    });
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[9][1]++;
  }
  cov_o75b64vfv().s[17]++;
  if (typeof obj === 'object') {
    /* istanbul ignore next */
    cov_o75b64vfv().b[10][0]++;
    const sanitized =
    /* istanbul ignore next */
    (cov_o75b64vfv().s[18]++, {});
    /* istanbul ignore next */
    cov_o75b64vfv().s[19]++;
    for (const [key, value] of Object.entries(obj)) {
      // Sanitize the key as well
      const sanitizedKey =
      /* istanbul ignore next */
      (cov_o75b64vfv().s[20]++, sanitizeString(key));
      /* istanbul ignore next */
      cov_o75b64vfv().s[21]++;
      sanitized[sanitizedKey] = sanitizeObject(value);
    }
    /* istanbul ignore next */
    cov_o75b64vfv().s[22]++;
    return sanitized;
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[10][1]++;
  }
  cov_o75b64vfv().s[23]++;
  return obj;
}
/**
 * Sanitize a string value
 */
function sanitizeString(str) {
  /* istanbul ignore next */
  cov_o75b64vfv().f[3]++;
  cov_o75b64vfv().s[24]++;
  if (typeof str !== 'string') {
    /* istanbul ignore next */
    cov_o75b64vfv().b[11][0]++;
    cov_o75b64vfv().s[25]++;
    return str;
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[11][1]++;
  }
  // Remove potential XSS vectors
  let sanitized =
  /* istanbul ignore next */
  (cov_o75b64vfv().s[26]++, str);
  // Remove script tags and event handlers
  /* istanbul ignore next */
  cov_o75b64vfv().s[27]++;
  sanitized = DOMPurify.sanitize(sanitized, {
    ALLOWED_TAGS: [],
    ALLOWED_ATTR: [],
    KEEP_CONTENT: true
  });
  // Remove null bytes and control characters
  /* istanbul ignore next */
  cov_o75b64vfv().s[28]++;
  sanitized = sanitized.replace(/\0/g, '');
  // eslint-disable-next-line no-control-regex
  /* istanbul ignore next */
  cov_o75b64vfv().s[29]++;
  sanitized = sanitized.replace(/[\x00-\x1F\x7F]/g, '');
  // Limit string length to prevent DoS
  /* istanbul ignore next */
  cov_o75b64vfv().s[30]++;
  if (sanitized.length > 10000) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[12][0]++;
    cov_o75b64vfv().s[31]++;
    sanitized = sanitized.substring(0, 10000);
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[12][1]++;
  }
  cov_o75b64vfv().s[32]++;
  return sanitized;
}
/**
 * Strict HTML sanitization for rich text content
 */
export function sanitizeHtml(dirty) {
  /* istanbul ignore next */
  cov_o75b64vfv().f[4]++;
  cov_o75b64vfv().s[33]++;
  if (
  /* istanbul ignore next */
  (cov_o75b64vfv().b[14][0]++, !dirty) ||
  /* istanbul ignore next */
  (cov_o75b64vfv().b[14][1]++, typeof dirty !== 'string')) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[13][0]++;
    cov_o75b64vfv().s[34]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[13][1]++;
  }
  cov_o75b64vfv().s[35]++;
  return DOMPurify.sanitize(dirty, {
    ALLOWED_TAGS: ['p', 'br', 'strong', 'em', 'u', 'ol', 'ul', 'li', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote'],
    ALLOWED_ATTR: ['class'],
    FORBID_TAGS: ['script', 'object', 'embed', 'form', 'input', 'iframe'],
    FORBID_ATTR: ['onerror', 'onload', 'onclick', 'onmouseover', 'onfocus', 'onblur'],
    ALLOW_DATA_ATTR: false,
    SANITIZE_DOM: true,
    KEEP_CONTENT: true
  });
}
/**
 * Validate and sanitize email addresses
 */
export function sanitizeEmail(email) {
  /* istanbul ignore next */
  cov_o75b64vfv().f[5]++;
  cov_o75b64vfv().s[36]++;
  if (
  /* istanbul ignore next */
  (cov_o75b64vfv().b[16][0]++, !email) ||
  /* istanbul ignore next */
  (cov_o75b64vfv().b[16][1]++, typeof email !== 'string')) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[15][0]++;
    cov_o75b64vfv().s[37]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[15][1]++;
  }
  // Basic email sanitization
  let sanitized =
  /* istanbul ignore next */
  (cov_o75b64vfv().s[38]++, email.trim().toLowerCase());
  // Remove dangerous characters
  /* istanbul ignore next */
  cov_o75b64vfv().s[39]++;
  sanitized = sanitized.replace(/[<>'"]/g, '');
  // Limit length
  /* istanbul ignore next */
  cov_o75b64vfv().s[40]++;
  if (sanitized.length > 255) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[17][0]++;
    cov_o75b64vfv().s[41]++;
    sanitized = sanitized.substring(0, 255);
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[17][1]++;
  }
  cov_o75b64vfv().s[42]++;
  return sanitized;
}
/**
 * Validate and sanitize URLs
 */
export function sanitizeUrl(url) {
  /* istanbul ignore next */
  cov_o75b64vfv().f[6]++;
  cov_o75b64vfv().s[43]++;
  if (
  /* istanbul ignore next */
  (cov_o75b64vfv().b[19][0]++, !url) ||
  /* istanbul ignore next */
  (cov_o75b64vfv().b[19][1]++, typeof url !== 'string')) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[18][0]++;
    cov_o75b64vfv().s[44]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[18][1]++;
  }
  let sanitized =
  /* istanbul ignore next */
  (cov_o75b64vfv().s[45]++, url.trim());
  // Only allow http/https protocols
  /* istanbul ignore next */
  cov_o75b64vfv().s[46]++;
  if (!sanitized.match(/^https?:\/\//)) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[20][0]++;
    cov_o75b64vfv().s[47]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[20][1]++;
  }
  // Remove dangerous characters
  cov_o75b64vfv().s[48]++;
  sanitized = sanitized.replace(/[<>'"]/g, '');
  // Limit length
  /* istanbul ignore next */
  cov_o75b64vfv().s[49]++;
  if (sanitized.length > 2000) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[21][0]++;
    cov_o75b64vfv().s[50]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[21][1]++;
  }
  cov_o75b64vfv().s[51]++;
  return sanitized;
}
/**
 * SQL injection prevention for dynamic queries
 */
export function escapeSqlIdentifier(identifier) {
  /* istanbul ignore next */
  cov_o75b64vfv().f[7]++;
  cov_o75b64vfv().s[52]++;
  if (
  /* istanbul ignore next */
  (cov_o75b64vfv().b[23][0]++, !identifier) ||
  /* istanbul ignore next */
  (cov_o75b64vfv().b[23][1]++, typeof identifier !== 'string')) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[22][0]++;
    cov_o75b64vfv().s[53]++;
    throw new Error('Invalid SQL identifier');
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[22][1]++;
  }
  // Allow only alphanumeric and underscore
  cov_o75b64vfv().s[54]++;
  if (!/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(identifier)) {
    /* istanbul ignore next */
    cov_o75b64vfv().b[24][0]++;
    cov_o75b64vfv().s[55]++;
    throw new Error('Invalid SQL identifier format');
  } else
  /* istanbul ignore next */
  {
    cov_o75b64vfv().b[24][1]++;
  }
  cov_o75b64vfv().s[56]++;
  return identifier;
}
export default {
  sanitizeInput,
  sanitizeHtml,
  sanitizeEmail,
  sanitizeUrl,
  escapeSqlIdentifier
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,