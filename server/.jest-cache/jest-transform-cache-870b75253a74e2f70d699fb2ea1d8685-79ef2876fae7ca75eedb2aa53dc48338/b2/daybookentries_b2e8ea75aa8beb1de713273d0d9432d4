cd7a4d1e4c665f0a62f14db3db540a8d
/* istanbul ignore next */
function cov_x20e4qplz() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/daybook-entries.ts";
  var hash = "1a0a827cadcb36be557db253a956be591f95ca1e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/daybook-entries.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 23
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 10,
          column: 5
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 90
        }
      },
      "3": {
        start: {
          line: 12,
          column: 26
        },
        end: {
          line: 12,
          column: 105
        }
      },
      "4": {
        start: {
          line: 12,
          column: 49
        },
        end: {
          line: 12,
          column: 104
        }
      },
      "5": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 76
        }
      },
      "6": {
        start: {
          line: 14,
          column: 58
        },
        end: {
          line: 14,
          column: 75
        }
      },
      "7": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "8": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "9": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 93
        }
      },
      "10": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 18,
          column: 92
        }
      },
      "11": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 19,
          column: 117
        }
      },
      "12": {
        start: {
          line: 19,
          column: 54
        },
        end: {
          line: 19,
          column: 94
        }
      },
      "13": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 21,
          column: 29
        }
      },
      "14": {
        start: {
          line: 20,
          column: 56
        },
        end: {
          line: 20,
          column: 96
        }
      },
      "15": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "16": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "17": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 38
        }
      },
      "18": {
        start: {
          line: 25,
          column: 13
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "19": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "20": {
        start: {
          line: 29,
          column: 30
        },
        end: {
          line: 29,
          column: 78
        }
      },
      "21": {
        start: {
          line: 29,
          column: 58
        },
        end: {
          line: 29,
          column: 77
        }
      },
      "22": {
        start: {
          line: 30,
          column: 26
        },
        end: {
          line: 30,
          column: 34
        }
      },
      "23": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "24": {
        start: {
          line: 32,
          column: 30
        },
        end: {
          line: 32,
          column: 57
        }
      },
      "25": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 33,
          column: 103
        }
      },
      "26": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 34,
          column: 92
        }
      },
      "27": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 29
        }
      },
      "28": {
        start: {
          line: 36,
          column: 28
        },
        end: {
          line: 36,
          column: 29
        }
      },
      "29": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "30": {
        start: {
          line: 38,
          column: 25
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "31": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 42,
          column: 15
        }
      },
      "32": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 41,
          column: 36
        }
      },
      "33": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 36
        }
      },
      "34": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "35": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 45,
          column: 36
        }
      },
      "36": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 36
        }
      },
      "37": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 51,
          column: 42
        }
      },
      "38": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 42
        }
      },
      "39": {
        start: {
          line: 50,
          column: 13
        },
        end: {
          line: 51,
          column: 42
        }
      },
      "40": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 42
        }
      },
      "41": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 44
        }
      },
      "42": {
        start: {
          line: 56,
          column: 25
        },
        end: {
          line: 56,
          column: 34
        }
      },
      "43": {
        start: {
          line: 57,
          column: 27
        },
        end: {
          line: 57,
          column: 36
        }
      },
      "44": {
        start: {
          line: 58,
          column: 29
        },
        end: {
          line: 58,
          column: 38
        }
      },
      "45": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 82,
          column: 7
        }
      },
      "46": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "47": {
        start: {
          line: 62,
          column: 26
        },
        end: {
          line: 62,
          column: 59
        }
      },
      "48": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "49": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 74
        }
      },
      "50": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "51": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 69,
          column: 88
        }
      },
      "52": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 70,
          column: 47
        }
      },
      "53": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 73,
          column: 15
        }
      },
      "54": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 78
        }
      },
      "55": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "56": {
        start: {
          line: 77,
          column: 26
        },
        end: {
          line: 77,
          column: 58
        }
      },
      "57": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 80,
          column: 15
        }
      },
      "58": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 82
        }
      },
      "59": {
        start: {
          line: 84,
          column: 25
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "60": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 89,
          column: 67
        }
      },
      "61": {
        start: {
          line: 86,
          column: 36
        },
        end: {
          line: 86,
          column: 46
        }
      },
      "62": {
        start: {
          line: 87,
          column: 39
        },
        end: {
          line: 87,
          column: 44
        }
      },
      "63": {
        start: {
          line: 89,
          column: 36
        },
        end: {
          line: 89,
          column: 65
        }
      },
      "64": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "65": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 137,
          column: 6
        }
      },
      "66": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 143,
          column: 22
        }
      },
      "67": {
        start: {
          line: 142,
          column: 26
        },
        end: {
          line: 142,
          column: 67
        }
      },
      "68": {
        start: {
          line: 146,
          column: 28
        },
        end: {
          line: 146,
          column: 30
        }
      },
      "69": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 149,
          column: 5
        }
      },
      "70": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 98
        }
      },
      "71": {
        start: {
          line: 151,
          column: 25
        },
        end: {
          line: 151,
          column: 65
        }
      },
      "72": {
        start: {
          line: 151,
          column: 47
        },
        end: {
          line: 151,
          column: 64
        }
      },
      "73": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "74": {
        start: {
          line: 153,
          column: 26
        },
        end: {
          line: 153,
          column: 98
        }
      },
      "75": {
        start: {
          line: 153,
          column: 58
        },
        end: {
          line: 153,
          column: 72
        }
      },
      "76": {
        start: {
          line: 154,
          column: 32
        },
        end: {
          line: 154,
          column: 72
        }
      },
      "77": {
        start: {
          line: 154,
          column: 59
        },
        end: {
          line: 154,
          column: 71
        }
      },
      "78": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "79": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 116
        }
      },
      "80": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "81": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 115
        }
      },
      "82": {
        start: {
          line: 163,
          column: 30
        },
        end: {
          line: 163,
          column: 145
        }
      },
      "83": {
        start: {
          line: 163,
          column: 52
        },
        end: {
          line: 163,
          column: 144
        }
      },
      "84": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "85": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 116
        }
      },
      "86": {
        start: {
          line: 168,
          column: 26
        },
        end: {
          line: 168,
          column: 76
        }
      },
      "87": {
        start: {
          line: 168,
          column: 48
        },
        end: {
          line: 168,
          column: 75
        }
      },
      "88": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 171,
          column: 5
        }
      },
      "89": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 118
        }
      },
      "90": {
        start: {
          line: 173,
          column: 26
        },
        end: {
          line: 178,
          column: 6
        }
      },
      "91": {
        start: {
          line: 174,
          column: 26
        },
        end: {
          line: 174,
          column: 42
        }
      },
      "92": {
        start: {
          line: 175,
          column: 27
        },
        end: {
          line: 175,
          column: 37
        }
      },
      "93": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 53
        }
      },
      "94": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 39
        }
      },
      "95": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 181,
          column: 5
        }
      },
      "96": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 109
        }
      },
      "97": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 187,
          column: 10
        }
      },
      "98": {
        start: {
          line: 190,
          column: 33
        },
        end: {
          line: 213,
          column: 2
        }
      },
      "99": {
        start: {
          line: 214,
          column: 33
        },
        end: {
          line: 214,
          column: 67
        }
      },
      "100": {
        start: {
          line: 216,
          column: 0
        },
        end: {
          line: 269,
          column: 3
        }
      },
      "101": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 268,
          column: 5
        }
      },
      "102": {
        start: {
          line: 218,
          column: 23
        },
        end: {
          line: 218,
          column: 40
        }
      },
      "103": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "104": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 67
        }
      },
      "105": {
        start: {
          line: 222,
          column: 62
        },
        end: {
          line: 222,
          column: 71
        }
      },
      "106": {
        start: {
          line: 223,
          column: 22
        },
        end: {
          line: 223,
          column: 32
        }
      },
      "107": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "108": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 28
        }
      },
      "109": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 227,
          column: 61
        }
      },
      "110": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 61
        }
      },
      "111": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 229,
          column: 59
        }
      },
      "112": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 59
        }
      },
      "113": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "114": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 81
        }
      },
      "115": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "116": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 49
        }
      },
      "117": {
        start: {
          line: 237,
          column: 24
        },
        end: {
          line: 263,
          column: 10
        }
      },
      "118": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 26
        }
      },
      "119": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 19
        }
      },
      "120": {
        start: {
          line: 271,
          column: 0
        },
        end: {
          line: 311,
          column: 3
        }
      },
      "121": {
        start: {
          line: 272,
          column: 4
        },
        end: {
          line: 310,
          column: 5
        }
      },
      "122": {
        start: {
          line: 273,
          column: 23
        },
        end: {
          line: 273,
          column: 40
        }
      },
      "123": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "124": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 67
        }
      },
      "125": {
        start: {
          line: 277,
          column: 22
        },
        end: {
          line: 302,
          column: 10
        }
      },
      "126": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "127": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 78
        }
      },
      "128": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 306,
          column: 24
        }
      },
      "129": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 19
        }
      },
      "130": {
        start: {
          line: 313,
          column: 0
        },
        end: {
          line: 413,
          column: 3
        }
      },
      "131": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 412,
          column: 5
        }
      },
      "132": {
        start: {
          line: 315,
          column: 23
        },
        end: {
          line: 315,
          column: 40
        }
      },
      "133": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "134": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 67
        }
      },
      "135": {
        start: {
          line: 319,
          column: 54
        },
        end: {
          line: 319,
          column: 62
        }
      },
      "136": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "137": {
        start: {
          line: 322,
          column: 31
        },
        end: {
          line: 330,
          column: 14
        }
      },
      "138": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 333,
          column: 13
        }
      },
      "139": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 80
        }
      },
      "140": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 338,
          column: 13
        }
      },
      "141": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 337,
          column: 19
        }
      },
      "142": {
        start: {
          line: 340,
          column: 22
        },
        end: {
          line: 369,
          column: 10
        }
      },
      "143": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 407,
          column: 9
        }
      },
      "144": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 378,
          column: 15
        }
      },
      "145": {
        start: {
          line: 373,
          column: 55
        },
        end: {
          line: 377,
          column: 17
        }
      },
      "146": {
        start: {
          line: 380,
          column: 33
        },
        end: {
          line: 405,
          column: 14
        }
      },
      "147": {
        start: {
          line: 406,
          column: 12
        },
        end: {
          line: 406,
          column: 54
        }
      },
      "148": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 36
        }
      },
      "149": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 411,
          column: 19
        }
      },
      "150": {
        start: {
          line: 415,
          column: 0
        },
        end: {
          line: 478,
          column: 3
        }
      },
      "151": {
        start: {
          line: 416,
          column: 4
        },
        end: {
          line: 477,
          column: 5
        }
      },
      "152": {
        start: {
          line: 417,
          column: 23
        },
        end: {
          line: 417,
          column: 40
        }
      },
      "153": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 420,
          column: 9
        }
      },
      "154": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 67
        }
      },
      "155": {
        start: {
          line: 421,
          column: 55
        },
        end: {
          line: 421,
          column: 63
        }
      },
      "156": {
        start: {
          line: 423,
          column: 25
        },
        end: {
          line: 425,
          column: 10
        }
      },
      "157": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 428,
          column: 9
        }
      },
      "158": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 427,
          column: 78
        }
      },
      "159": {
        start: {
          line: 430,
          column: 21
        },
        end: {
          line: 430,
          column: 38
        }
      },
      "160": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 432,
          column: 50
        }
      },
      "161": {
        start: {
          line: 432,
          column: 12
        },
        end: {
          line: 432,
          column: 50
        }
      },
      "162": {
        start: {
          line: 434,
          column: 22
        },
        end: {
          line: 437,
          column: 10
        }
      },
      "163": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 454,
          column: 9
        }
      },
      "164": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 443,
          column: 15
        }
      },
      "165": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 453,
          column: 13
        }
      },
      "166": {
        start: {
          line: 446,
          column: 16
        },
        end: {
          line: 452,
          column: 19
        }
      },
      "167": {
        start: {
          line: 447,
          column: 59
        },
        end: {
          line: 451,
          column: 21
        }
      },
      "168": {
        start: {
          line: 456,
          column: 29
        },
        end: {
          line: 472,
          column: 10
        }
      },
      "169": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 31
        }
      },
      "170": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 19
        }
      },
      "171": {
        start: {
          line: 480,
          column: 0
        },
        end: {
          line: 501,
          column: 3
        }
      },
      "172": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 500,
          column: 5
        }
      },
      "173": {
        start: {
          line: 482,
          column: 23
        },
        end: {
          line: 482,
          column: 40
        }
      },
      "174": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 485,
          column: 9
        }
      },
      "175": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 484,
          column: 67
        }
      },
      "176": {
        start: {
          line: 487,
          column: 22
        },
        end: {
          line: 489,
          column: 10
        }
      },
      "177": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 492,
          column: 9
        }
      },
      "178": {
        start: {
          line: 491,
          column: 12
        },
        end: {
          line: 491,
          column: 78
        }
      },
      "179": {
        start: {
          line: 493,
          column: 8
        },
        end: {
          line: 495,
          column: 11
        }
      },
      "180": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 496,
          column: 30
        }
      },
      "181": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 19
        }
      },
      "182": {
        start: {
          line: 503,
          column: 0
        },
        end: {
          line: 584,
          column: 3
        }
      },
      "183": {
        start: {
          line: 504,
          column: 4
        },
        end: {
          line: 583,
          column: 5
        }
      },
      "184": {
        start: {
          line: 505,
          column: 23
        },
        end: {
          line: 505,
          column: 40
        }
      },
      "185": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 508,
          column: 9
        }
      },
      "186": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 507,
          column: 67
        }
      },
      "187": {
        start: {
          line: 509,
          column: 48
        },
        end: {
          line: 509,
          column: 57
        }
      },
      "188": {
        start: {
          line: 510,
          column: 22
        },
        end: {
          line: 510,
          column: 32
        }
      },
      "189": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 517,
          column: 9
        }
      },
      "190": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 512,
          column: 28
        }
      },
      "191": {
        start: {
          line: 513,
          column: 12
        },
        end: {
          line: 514,
          column: 61
        }
      },
      "192": {
        start: {
          line: 514,
          column: 16
        },
        end: {
          line: 514,
          column: 61
        }
      },
      "193": {
        start: {
          line: 515,
          column: 12
        },
        end: {
          line: 516,
          column: 59
        }
      },
      "194": {
        start: {
          line: 516,
          column: 16
        },
        end: {
          line: 516,
          column: 59
        }
      },
      "195": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 526,
          column: 9
        }
      },
      "196": {
        start: {
          line: 519,
          column: 12
        },
        end: {
          line: 525,
          column: 14
        }
      },
      "197": {
        start: {
          line: 528,
          column: 24
        },
        end: {
          line: 551,
          column: 10
        }
      },
      "198": {
        start: {
          line: 553,
          column: 29
        },
        end: {
          line: 553,
          column: 43
        }
      },
      "199": {
        start: {
          line: 554,
          column: 34
        },
        end: {
          line: 554,
          column: 81
        }
      },
      "200": {
        start: {
          line: 554,
          column: 56
        },
        end: {
          line: 554,
          column: 80
        }
      },
      "201": {
        start: {
          line: 555,
          column: 26
        },
        end: {
          line: 558,
          column: 18
        }
      },
      "202": {
        start: {
          line: 556,
          column: 51
        },
        end: {
          line: 556,
          column: 79
        }
      },
      "203": {
        start: {
          line: 559,
          column: 27
        },
        end: {
          line: 559,
          column: 77
        }
      },
      "204": {
        start: {
          line: 559,
          column: 49
        },
        end: {
          line: 559,
          column: 76
        }
      },
      "205": {
        start: {
          line: 560,
          column: 32
        },
        end: {
          line: 562,
          column: 18
        }
      },
      "206": {
        start: {
          line: 561,
          column: 51
        },
        end: {
          line: 561,
          column: 69
        }
      },
      "207": {
        start: {
          line: 564,
          column: 25
        },
        end: {
          line: 578,
          column: 9
        }
      },
      "208": {
        start: {
          line: 573,
          column: 62
        },
        end: {
          line: 573,
          column: 139
        }
      },
      "209": {
        start: {
          line: 579,
          column: 8
        },
        end: {
          line: 579,
          column: 27
        }
      },
      "210": {
        start: {
          line: 582,
          column: 8
        },
        end: {
          line: 582,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "calculateTrends",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 24
          }
        },
        loc: {
          start: {
            line: 7,
            column: 34
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 39
          },
          end: {
            line: 12,
            column: 40
          }
        },
        loc: {
          start: {
            line: 12,
            column: 49
          },
          end: {
            line: 12,
            column: 104
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 51
          },
          end: {
            line: 14,
            column: 52
          }
        },
        loc: {
          start: {
            line: 14,
            column: 58
          },
          end: {
            line: 14,
            column: 75
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 42
          },
          end: {
            line: 19,
            column: 43
          }
        },
        loc: {
          start: {
            line: 19,
            column: 54
          },
          end: {
            line: 19,
            column: 94
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 20,
            column: 44
          },
          end: {
            line: 20,
            column: 45
          }
        },
        loc: {
          start: {
            line: 20,
            column: 56
          },
          end: {
            line: 20,
            column: 96
          }
        },
        line: 20
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 29,
            column: 52
          }
        },
        loc: {
          start: {
            line: 29,
            column: 58
          },
          end: {
            line: 29,
            column: 77
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 37,
            column: 30
          },
          end: {
            line: 37,
            column: 31
          }
        },
        loc: {
          start: {
            line: 37,
            column: 41
          },
          end: {
            line: 47,
            column: 9
          }
        },
        line: 37
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 39,
            column: 34
          },
          end: {
            line: 39,
            column: 35
          }
        },
        loc: {
          start: {
            line: 39,
            column: 44
          },
          end: {
            line: 42,
            column: 13
          }
        },
        line: 39
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 43,
            column: 34
          },
          end: {
            line: 43,
            column: 35
          }
        },
        loc: {
          start: {
            line: 43,
            column: 44
          },
          end: {
            line: 46,
            column: 13
          }
        },
        line: 43
      },
      "9": {
        name: "extractCommonThemes",
        decl: {
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 55,
            column: 28
          }
        },
        loc: {
          start: {
            line: 55,
            column: 38
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 55
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        },
        loc: {
          start: {
            line: 59,
            column: 31
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 59
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 63,
            column: 26
          },
          end: {
            line: 63,
            column: 27
          }
        },
        loc: {
          start: {
            line: 63,
            column: 36
          },
          end: {
            line: 65,
            column: 13
          }
        },
        line: 63
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 27
          }
        },
        loc: {
          start: {
            line: 71,
            column: 36
          },
          end: {
            line: 73,
            column: 13
          }
        },
        line: 71
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 27
          }
        },
        loc: {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 80,
            column: 13
          }
        },
        line: 78
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 84,
            column: 25
          },
          end: {
            line: 84,
            column: 26
          }
        },
        loc: {
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 84
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 86,
            column: 20
          },
          end: {
            line: 86,
            column: 21
          }
        },
        loc: {
          start: {
            line: 86,
            column: 36
          },
          end: {
            line: 86,
            column: 46
          }
        },
        line: 86
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 87,
            column: 18
          },
          end: {
            line: 87,
            column: 19
          }
        },
        loc: {
          start: {
            line: 87,
            column: 39
          },
          end: {
            line: 87,
            column: 44
          }
        },
        line: 87
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 89,
            column: 17
          },
          end: {
            line: 89,
            column: 18
          }
        },
        loc: {
          start: {
            line: 89,
            column: 36
          },
          end: {
            line: 89,
            column: 65
          }
        },
        line: 89
      },
      "18": {
        name: "extractKeywords",
        decl: {
          start: {
            line: 97,
            column: 9
          },
          end: {
            line: 97,
            column: 24
          }
        },
        loc: {
          start: {
            line: 97,
            column: 31
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 97
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 142,
            column: 16
          },
          end: {
            line: 142,
            column: 17
          }
        },
        loc: {
          start: {
            line: 142,
            column: 26
          },
          end: {
            line: 142,
            column: 67
          }
        },
        line: 142
      },
      "20": {
        name: "generateRecommendations",
        decl: {
          start: {
            line: 145,
            column: 9
          },
          end: {
            line: 145,
            column: 32
          }
        },
        loc: {
          start: {
            line: 145,
            column: 42
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 145
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 151,
            column: 40
          },
          end: {
            line: 151,
            column: 41
          }
        },
        loc: {
          start: {
            line: 151,
            column: 47
          },
          end: {
            line: 151,
            column: 64
          }
        },
        line: 151
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 153,
            column: 46
          },
          end: {
            line: 153,
            column: 47
          }
        },
        loc: {
          start: {
            line: 153,
            column: 58
          },
          end: {
            line: 153,
            column: 72
          }
        },
        line: 153
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 154,
            column: 52
          },
          end: {
            line: 154,
            column: 53
          }
        },
        loc: {
          start: {
            line: 154,
            column: 59
          },
          end: {
            line: 154,
            column: 71
          }
        },
        line: 154
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 163,
            column: 45
          },
          end: {
            line: 163,
            column: 46
          }
        },
        loc: {
          start: {
            line: 163,
            column: 52
          },
          end: {
            line: 163,
            column: 144
          }
        },
        line: 163
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 168,
            column: 41
          },
          end: {
            line: 168,
            column: 42
          }
        },
        loc: {
          start: {
            line: 168,
            column: 48
          },
          end: {
            line: 168,
            column: 75
          }
        },
        line: 168
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 173,
            column: 41
          },
          end: {
            line: 173,
            column: 42
          }
        },
        loc: {
          start: {
            line: 173,
            column: 48
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 173
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 216,
            column: 16
          },
          end: {
            line: 216,
            column: 17
          }
        },
        loc: {
          start: {
            line: 216,
            column: 43
          },
          end: {
            line: 269,
            column: 1
          }
        },
        line: 216
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 271,
            column: 19
          },
          end: {
            line: 271,
            column: 20
          }
        },
        loc: {
          start: {
            line: 271,
            column: 46
          },
          end: {
            line: 311,
            column: 1
          }
        },
        line: 271
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 313,
            column: 53
          },
          end: {
            line: 313,
            column: 54
          }
        },
        loc: {
          start: {
            line: 313,
            column: 80
          },
          end: {
            line: 413,
            column: 1
          }
        },
        line: 313
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 373,
            column: 46
          },
          end: {
            line: 373,
            column: 47
          }
        },
        loc: {
          start: {
            line: 373,
            column: 55
          },
          end: {
            line: 377,
            column: 17
          }
        },
        line: 373
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 415,
            column: 55
          },
          end: {
            line: 415,
            column: 56
          }
        },
        loc: {
          start: {
            line: 415,
            column: 82
          },
          end: {
            line: 478,
            column: 1
          }
        },
        line: 415
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 447,
            column: 50
          },
          end: {
            line: 447,
            column: 51
          }
        },
        loc: {
          start: {
            line: 447,
            column: 59
          },
          end: {
            line: 451,
            column: 21
          }
        },
        line: 447
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 480,
            column: 22
          },
          end: {
            line: 480,
            column: 23
          }
        },
        loc: {
          start: {
            line: 480,
            column: 49
          },
          end: {
            line: 501,
            column: 1
          }
        },
        line: 480
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 503,
            column: 32
          },
          end: {
            line: 503,
            column: 33
          }
        },
        loc: {
          start: {
            line: 503,
            column: 59
          },
          end: {
            line: 584,
            column: 1
          }
        },
        line: 503
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 554,
            column: 49
          },
          end: {
            line: 554,
            column: 50
          }
        },
        loc: {
          start: {
            line: 554,
            column: 56
          },
          end: {
            line: 554,
            column: 80
          }
        },
        line: 554
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 556,
            column: 39
          },
          end: {
            line: 556,
            column: 40
          }
        },
        loc: {
          start: {
            line: 556,
            column: 51
          },
          end: {
            line: 556,
            column: 79
          }
        },
        line: 556
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 559,
            column: 42
          },
          end: {
            line: 559,
            column: 43
          }
        },
        loc: {
          start: {
            line: 559,
            column: 49
          },
          end: {
            line: 559,
            column: 76
          }
        },
        line: 559
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 561,
            column: 44
          },
          end: {
            line: 561,
            column: 45
          }
        },
        loc: {
          start: {
            line: 561,
            column: 51
          },
          end: {
            line: 561,
            column: 69
          }
        },
        line: 561
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 573,
            column: 55
          },
          end: {
            line: 573,
            column: 56
          }
        },
        loc: {
          start: {
            line: 573,
            column: 62
          },
          end: {
            line: 573,
            column: 139
          }
        },
        line: 573
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 19,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 19,
            column: 69
          }
        }, {
          start: {
            line: 19,
            column: 73
          },
          end: {
            line: 19,
            column: 88
          }
        }, {
          start: {
            line: 19,
            column: 92
          },
          end: {
            line: 19,
            column: 93
          }
        }],
        line: 19
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 63
          },
          end: {
            line: 20,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 63
          },
          end: {
            line: 20,
            column: 71
          }
        }, {
          start: {
            line: 20,
            column: 75
          },
          end: {
            line: 20,
            column: 90
          }
        }, {
          start: {
            line: 20,
            column: 94
          },
          end: {
            line: 20,
            column: 95
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 26,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 26,
            column: 38
          }
        }, {
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 26,
            column: 38
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 26,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 26,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 41,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 41,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 45,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 45,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 51,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 51,
            column: 42
          }
        }, {
          start: {
            line: 50,
            column: 13
          },
          end: {
            line: 51,
            column: 42
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 13
          },
          end: {
            line: 51,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 13
          },
          end: {
            line: 51,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "12": {
        loc: {
          start: {
            line: 64,
            column: 40
          },
          end: {
            line: 64,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 40
          },
          end: {
            line: 64,
            column: 62
          }
        }, {
          start: {
            line: 64,
            column: 66
          },
          end: {
            line: 64,
            column: 67
          }
        }],
        line: 64
      },
      "13": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "14": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 31
          }
        }, {
          start: {
            line: 68,
            column: 35
          },
          end: {
            line: 68,
            column: 58
          }
        }],
        line: 68
      },
      "15": {
        loc: {
          start: {
            line: 69,
            column: 28
          },
          end: {
            line: 69,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 28
          },
          end: {
            line: 69,
            column: 47
          }
        }, {
          start: {
            line: 69,
            column: 51
          },
          end: {
            line: 69,
            column: 53
          }
        }],
        line: 69
      },
      "16": {
        loc: {
          start: {
            line: 69,
            column: 57
          },
          end: {
            line: 69,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 57
          },
          end: {
            line: 69,
            column: 80
          }
        }, {
          start: {
            line: 69,
            column: 84
          },
          end: {
            line: 69,
            column: 86
          }
        }],
        line: 69
      },
      "17": {
        loc: {
          start: {
            line: 72,
            column: 42
          },
          end: {
            line: 72,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 42
          },
          end: {
            line: 72,
            column: 66
          }
        }, {
          start: {
            line: 72,
            column: 70
          },
          end: {
            line: 72,
            column: 71
          }
        }],
        line: 72
      },
      "18": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "19": {
        loc: {
          start: {
            line: 79,
            column: 44
          },
          end: {
            line: 79,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 44
          },
          end: {
            line: 79,
            column: 70
          }
        }, {
          start: {
            line: 79,
            column: 74
          },
          end: {
            line: 79,
            column: 75
          }
        }],
        line: 79
      },
      "20": {
        loc: {
          start: {
            line: 142,
            column: 26
          },
          end: {
            line: 142,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 26
          },
          end: {
            line: 142,
            column: 41
          }
        }, {
          start: {
            line: 142,
            column: 45
          },
          end: {
            line: 142,
            column: 67
          }
        }],
        line: 142
      },
      "21": {
        loc: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "22": {
        loc: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "23": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "24": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "25": {
        loc: {
          start: {
            line: 163,
            column: 52
          },
          end: {
            line: 163,
            column: 144
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 52
          },
          end: {
            line: 163,
            column: 64
          }
        }, {
          start: {
            line: 163,
            column: 68
          },
          end: {
            line: 163,
            column: 83
          }
        }, {
          start: {
            line: 163,
            column: 87
          },
          end: {
            line: 163,
            column: 106
          }
        }, {
          start: {
            line: 163,
            column: 110
          },
          end: {
            line: 163,
            column: 129
          }
        }, {
          start: {
            line: 163,
            column: 133
          },
          end: {
            line: 163,
            column: 144
          }
        }],
        line: 163
      },
      "26": {
        loc: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "27": {
        loc: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "28": {
        loc: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "29": {
        loc: {
          start: {
            line: 182,
            column: 11
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 10
          },
          end: {
            line: 183,
            column: 25
          }
        }, {
          start: {
            line: 184,
            column: 10
          },
          end: {
            line: 187,
            column: 9
          }
        }],
        line: 182
      },
      "30": {
        loc: {
          start: {
            line: 218,
            column: 23
          },
          end: {
            line: 218,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 23
          },
          end: {
            line: 218,
            column: 35
          }
        }, {
          start: {
            line: 218,
            column: 39
          },
          end: {
            line: 218,
            column: 40
          }
        }],
        line: 218
      },
      "31": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "32": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "33": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 21
          }
        }, {
          start: {
            line: 224,
            column: 25
          },
          end: {
            line: 224,
            column: 32
          }
        }],
        line: 224
      },
      "34": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 227,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 227,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "35": {
        loc: {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 229,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 229,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "36": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "37": {
        loc: {
          start: {
            line: 232,
            column: 33
          },
          end: {
            line: 232,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 232,
            column: 60
          },
          end: {
            line: 232,
            column: 73
          }
        }, {
          start: {
            line: 232,
            column: 76
          },
          end: {
            line: 232,
            column: 80
          }
        }],
        line: 232
      },
      "38": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 236,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "39": {
        loc: {
          start: {
            line: 273,
            column: 23
          },
          end: {
            line: 273,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 23
          },
          end: {
            line: 273,
            column: 35
          }
        }, {
          start: {
            line: 273,
            column: 39
          },
          end: {
            line: 273,
            column: 40
          }
        }],
        line: 273
      },
      "40": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "41": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "42": {
        loc: {
          start: {
            line: 315,
            column: 23
          },
          end: {
            line: 315,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 315,
            column: 23
          },
          end: {
            line: 315,
            column: 35
          }
        }, {
          start: {
            line: 315,
            column: 39
          },
          end: {
            line: 315,
            column: 40
          }
        }],
        line: 315
      },
      "43": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "44": {
        loc: {
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 321
      },
      "45": {
        loc: {
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 333,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 333,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "46": {
        loc: {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 338,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 338,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "47": {
        loc: {
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 407,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 407,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      },
      "48": {
        loc: {
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 371,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 371,
            column: 12
          },
          end: {
            line: 371,
            column: 31
          }
        }, {
          start: {
            line: 371,
            column: 35
          },
          end: {
            line: 371,
            column: 65
          }
        }],
        line: 371
      },
      "49": {
        loc: {
          start: {
            line: 417,
            column: 23
          },
          end: {
            line: 417,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 417,
            column: 23
          },
          end: {
            line: 417,
            column: 35
          }
        }, {
          start: {
            line: 417,
            column: 39
          },
          end: {
            line: 417,
            column: 40
          }
        }],
        line: 417
      },
      "50": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 420,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 420,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "51": {
        loc: {
          start: {
            line: 426,
            column: 8
          },
          end: {
            line: 428,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 426,
            column: 8
          },
          end: {
            line: 428,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 426
      },
      "52": {
        loc: {
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 432,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 431,
            column: 8
          },
          end: {
            line: 432,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 431
      },
      "53": {
        loc: {
          start: {
            line: 439,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 8
          },
          end: {
            line: 454,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "54": {
        loc: {
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 453,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 12
          },
          end: {
            line: 453,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "55": {
        loc: {
          start: {
            line: 482,
            column: 23
          },
          end: {
            line: 482,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 482,
            column: 23
          },
          end: {
            line: 482,
            column: 35
          }
        }, {
          start: {
            line: 482,
            column: 39
          },
          end: {
            line: 482,
            column: 40
          }
        }],
        line: 482
      },
      "56": {
        loc: {
          start: {
            line: 483,
            column: 8
          },
          end: {
            line: 485,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 483,
            column: 8
          },
          end: {
            line: 485,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 483
      },
      "57": {
        loc: {
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 8
          },
          end: {
            line: 492,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "58": {
        loc: {
          start: {
            line: 505,
            column: 23
          },
          end: {
            line: 505,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 505,
            column: 23
          },
          end: {
            line: 505,
            column: 35
          }
        }, {
          start: {
            line: 505,
            column: 39
          },
          end: {
            line: 505,
            column: 40
          }
        }],
        line: 505
      },
      "59": {
        loc: {
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 8
          },
          end: {
            line: 508,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "60": {
        loc: {
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 517,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 517,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "61": {
        loc: {
          start: {
            line: 511,
            column: 12
          },
          end: {
            line: 511,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 511,
            column: 12
          },
          end: {
            line: 511,
            column: 21
          }
        }, {
          start: {
            line: 511,
            column: 25
          },
          end: {
            line: 511,
            column: 32
          }
        }],
        line: 511
      },
      "62": {
        loc: {
          start: {
            line: 513,
            column: 12
          },
          end: {
            line: 514,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 12
          },
          end: {
            line: 514,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 513
      },
      "63": {
        loc: {
          start: {
            line: 515,
            column: 12
          },
          end: {
            line: 516,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 515,
            column: 12
          },
          end: {
            line: 516,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 515
      },
      "64": {
        loc: {
          start: {
            line: 518,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 518,
            column: 8
          },
          end: {
            line: 526,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 518
      },
      "65": {
        loc: {
          start: {
            line: 555,
            column: 26
          },
          end: {
            line: 558,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 556,
            column: 14
          },
          end: {
            line: 557,
            column: 40
          }
        }, {
          start: {
            line: 558,
            column: 14
          },
          end: {
            line: 558,
            column: 18
          }
        }],
        line: 555
      },
      "66": {
        loc: {
          start: {
            line: 556,
            column: 58
          },
          end: {
            line: 556,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 556,
            column: 58
          },
          end: {
            line: 556,
            column: 73
          }
        }, {
          start: {
            line: 556,
            column: 77
          },
          end: {
            line: 556,
            column: 78
          }
        }],
        line: 556
      },
      "67": {
        loc: {
          start: {
            line: 560,
            column: 32
          },
          end: {
            line: 562,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 561,
            column: 14
          },
          end: {
            line: 561,
            column: 105
          }
        }, {
          start: {
            line: 562,
            column: 14
          },
          end: {
            line: 562,
            column: 18
          }
        }],
        line: 560
      },
      "68": {
        loc: {
          start: {
            line: 566,
            column: 23
          },
          end: {
            line: 566,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 566,
            column: 23
          },
          end: {
            line: 566,
            column: 32
          }
        }, {
          start: {
            line: 566,
            column: 36
          },
          end: {
            line: 566,
            column: 46
          }
        }],
        line: 566
      },
      "69": {
        loc: {
          start: {
            line: 567,
            column: 21
          },
          end: {
            line: 567,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 567,
            column: 21
          },
          end: {
            line: 567,
            column: 28
          }
        }, {
          start: {
            line: 567,
            column: 32
          },
          end: {
            line: 567,
            column: 41
          }
        }],
        line: 567
      },
      "70": {
        loc: {
          start: {
            line: 571,
            column: 31
          },
          end: {
            line: 571,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 571,
            column: 43
          },
          end: {
            line: 571,
            column: 71
          }
        }, {
          start: {
            line: 571,
            column: 74
          },
          end: {
            line: 571,
            column: 78
          }
        }],
        line: 571
      },
      "71": {
        loc: {
          start: {
            line: 573,
            column: 62
          },
          end: {
            line: 573,
            column: 139
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 573,
            column: 62
          },
          end: {
            line: 573,
            column: 74
          }
        }, {
          start: {
            line: 573,
            column: 78
          },
          end: {
            line: 573,
            column: 93
          }
        }, {
          start: {
            line: 573,
            column: 97
          },
          end: {
            line: 573,
            column: 116
          }
        }, {
          start: {
            line: 573,
            column: 120
          },
          end: {
            line: 573,
            column: 139
          }
        }],
        line: 573
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/daybook-entries.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/daybook-entries.ts"],
      sourcesContent: ["import { Router, Request } from 'express';\nimport { Prisma } from '../prisma';\nimport { prisma } from '../prisma';\nimport { validate } from '../validation';\nimport { z } from 'zod';\n\nconst router = Router();\n\ninterface DaybookEntryForAnalytics {\n  date: Date | string;\n  rating?: number | null;\n  overallRating?: number | null;\n  studentEngagement?: string | null;\n  whatWorked?: string | null;\n  whatDidntWork?: string | null;\n  studentChallenges?: string | null;\n  nextSteps?: string | null;\n  wouldReuseLesson?: boolean | null;\n  lessonPlan?: {\n    unitPlan?: {\n      longRangePlan?: {\n        subject?: string;\n      } | null;\n    } | null;\n  } | null;\n}\n\n// Analytics helper functions\nfunction calculateTrends(entries: DaybookEntryForAnalytics[]): {\n  ratingTrend: string;\n  engagementTrend: string;\n} {\n  if (entries.length < 2) {\n    return { ratingTrend: 'insufficient_data', engagementTrend: 'insufficient_data' };\n  }\n\n  // Sort entries by date to analyze trends over time\n  const sortedEntries = entries.sort(\n    (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime(),\n  );\n\n  // Calculate rating trend\n  const ratingsWithValues = sortedEntries.filter((e) => e.rating !== null);\n  let ratingTrend = 'stable';\n\n  if (ratingsWithValues.length >= 3) {\n    const firstHalf = ratingsWithValues.slice(0, Math.ceil(ratingsWithValues.length / 2));\n    const secondHalf = ratingsWithValues.slice(Math.floor(ratingsWithValues.length / 2));\n\n    const firstAvg =\n      firstHalf.reduce((sum, e) => sum + (e.rating ?? e.overallRating ?? 0), 0) / firstHalf.length;\n    const secondAvg =\n      secondHalf.reduce((sum, e) => sum + (e.rating ?? e.overallRating ?? 0), 0) /\n      secondHalf.length;\n\n    const diff = secondAvg - firstAvg;\n    if (diff > 0.3) ratingTrend = 'improving';\n    else if (diff < -0.3) ratingTrend = 'declining';\n  }\n\n  // Calculate engagement trend by analyzing studentEngagement text\n  const engagementEntries = sortedEntries.filter((e) => e.studentEngagement);\n  let engagementTrend = 'stable';\n\n  if (engagementEntries.length >= 2) {\n    const recentEntries = engagementEntries.slice(-3); // Last 3 entries\n    const positiveWords = ['engaged', 'active', 'interested', 'excited', 'participated', 'focused'];\n    const negativeWords = ['disengaged', 'distracted', 'bored', 'struggled', 'off-task'];\n\n    let positiveCount = 0;\n    let negativeCount = 0;\n\n    recentEntries.forEach((entry) => {\n      const text = entry.studentEngagement.toLowerCase();\n      positiveWords.forEach((word) => {\n        if (text.includes(word)) positiveCount++;\n      });\n      negativeWords.forEach((word) => {\n        if (text.includes(word)) negativeCount++;\n      });\n    });\n\n    if (positiveCount > negativeCount) engagementTrend = 'improving';\n    else if (negativeCount > positiveCount) engagementTrend = 'declining';\n  }\n\n  return { ratingTrend, engagementTrend };\n}\n\nfunction extractCommonThemes(entries: DaybookEntryForAnalytics[]): {\n  successes: string[];\n  challenges: string[];\n  improvements: string[];\n} {\n  const successWords = new Map<string, number>();\n  const challengeWords = new Map<string, number>();\n  const improvementWords = new Map<string, number>();\n\n  entries.forEach((entry) => {\n    // Extract themes from whatWorked\n    if (entry.whatWorked) {\n      const words = extractKeywords(entry.whatWorked);\n      words.forEach((word) => {\n        successWords.set(word, (successWords.get(word) || 0) + 1);\n      });\n    }\n\n    // Extract themes from whatDidntWork and studentChallenges\n    if (entry.whatDidntWork || entry.studentChallenges) {\n      const text = `${entry.whatDidntWork || ''} ${entry.studentChallenges || ''}`;\n      const words = extractKeywords(text);\n      words.forEach((word) => {\n        challengeWords.set(word, (challengeWords.get(word) || 0) + 1);\n      });\n    }\n\n    // Extract themes from nextSteps\n    if (entry.nextSteps) {\n      const words = extractKeywords(entry.nextSteps);\n      words.forEach((word) => {\n        improvementWords.set(word, (improvementWords.get(word) || 0) + 1);\n      });\n    }\n  });\n\n  // Get top themes (minimum 2 occurrences)\n  const getTopThemes = (wordMap: Map<string, number>) => {\n    return Array.from(wordMap.entries())\n      .filter(([_, count]) => count >= 2)\n      .sort(([_, a], [__, b]) => b - a)\n      .slice(0, 5)\n      .map(([word, count]) => `${word} (${count} mentions)`);\n  };\n\n  return {\n    successes: getTopThemes(successWords),\n    challenges: getTopThemes(challengeWords),\n    improvements: getTopThemes(improvementWords),\n  };\n}\n\nfunction extractKeywords(text: string): string[] {\n  // Simple keyword extraction - remove common words and extract meaningful terms\n  const commonWords = new Set([\n    'the',\n    'a',\n    'an',\n    'and',\n    'or',\n    'but',\n    'in',\n    'on',\n    'at',\n    'to',\n    'for',\n    'of',\n    'with',\n    'by',\n    'was',\n    'were',\n    'is',\n    'are',\n    'be',\n    'been',\n    'have',\n    'has',\n    'had',\n    'do',\n    'does',\n    'did',\n    'will',\n    'would',\n    'could',\n    'should',\n    'may',\n    'might',\n    'can',\n    'this',\n    'that',\n    'these',\n    'those',\n  ]);\n\n  return text\n    .toLowerCase()\n    .replace(/[^\\w\\s]/g, ' ')\n    .split(/\\s+/)\n    .filter((word) => word.length > 3 && !commonWords.has(word))\n    .slice(0, 10); // Limit to prevent noise\n}\n\nfunction generateRecommendations(entries: DaybookEntryForAnalytics[]): string[] {\n  const recommendations: string[] = [];\n\n  if (entries.length === 0) {\n    return ['Start documenting your daily teaching experiences to build insights over time.'];\n  }\n\n  // Analyze rating patterns\n  const ratedEntries = entries.filter((e) => e.rating !== null);\n  if (ratedEntries.length > 0) {\n    const avgRating = ratedEntries.reduce((sum, e) => sum + e.rating, 0) / ratedEntries.length;\n    const lowRatedEntries = ratedEntries.filter((e) => e.rating < 3);\n\n    if (avgRating < 3.5) {\n      recommendations.push(\n        'Consider reviewing lessons with lower ratings to identify improvement patterns.',\n      );\n    }\n\n    if (lowRatedEntries.length > ratedEntries.length * 0.3) {\n      recommendations.push(\n        'Focus on documenting what worked well in higher-rated lessons for replication.',\n      );\n    }\n  }\n\n  // Check reflection completeness\n  const reflectiveEntries = entries.filter(\n    (e) =>\n      e.whatWorked || e.whatDidntWork || e.studentEngagement || e.studentChallenges || e.nextSteps,\n  );\n\n  if (reflectiveEntries.length < entries.length * 0.5) {\n    recommendations.push(\n      'Increase reflection depth by completing more reflection fields for better insights.',\n    );\n  }\n\n  // Analyze reuse patterns\n  const reusedEntries = entries.filter((e) => e.wouldReuseLesson === true);\n  if (reusedEntries.length > 0) {\n    recommendations.push(\n      'Document successful strategies from reusable lessons for your teaching resource bank.',\n    );\n  }\n\n  // Time-based recommendations\n  const recentEntries = entries.filter((e) => {\n    const entryDate = new Date(e.date);\n    const oneWeekAgo = new Date();\n    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n    return entryDate >= oneWeekAgo;\n  });\n\n  if (recentEntries.length === 0) {\n    recommendations.push(\n      'Regular reflection helps identify patterns - try to document lessons weekly.',\n    );\n  }\n\n  return recommendations.length > 0\n    ? recommendations\n    : [\n        'Continue documenting your teaching experiences to build a comprehensive reflection database.',\n        'Focus on noting both successes and challenges to maximize learning opportunities.',\n      ];\n}\n\n// Validation schemas\nconst daybookEntryCreateSchema = z.object({\n  date: z.string().datetime(),\n  lessonPlanId: z.string().optional(),\n  whatWorked: z.string().optional(),\n  whatWorkedFr: z.string().optional(),\n  whatDidntWork: z.string().optional(),\n  whatDidntWorkFr: z.string().optional(),\n  nextSteps: z.string().optional(),\n  nextStepsFr: z.string().optional(),\n  studentEngagement: z.string().optional(),\n  studentChallenges: z.string().optional(),\n  studentSuccesses: z.string().optional(),\n  notes: z.string().optional(),\n  notesFr: z.string().optional(),\n  privateNotes: z.string().optional(),\n  overallRating: z.number().int().min(1).max(5).optional(),\n  wouldReuseLesson: z.boolean().optional(),\n  expectationCoverage: z\n    .array(\n      z.object({\n        expectationId: z.string(),\n        coverage: z.enum(['introduced', 'developing', 'consolidated']),\n      }),\n    )\n    .optional(),\n});\n\nconst daybookEntryUpdateSchema = daybookEntryCreateSchema.partial();\n\n// Get all daybook entries for the authenticated user\nrouter.get('/', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { startDate, endDate, hasLessonPlan, rating } = req.query;\n\n    const where: Prisma.DaybookEntryWhereInput = { userId };\n\n    if (startDate || endDate) {\n      where.date = {};\n      if (startDate) where.date.gte = new Date(String(startDate));\n      if (endDate) where.date.lte = new Date(String(endDate));\n    }\n\n    if (hasLessonPlan !== undefined) {\n      where.lessonPlanId = hasLessonPlan === 'true' ? { not: null } : null;\n    }\n\n    if (rating) {\n      where.overallRating = Number(rating);\n    }\n\n    const entries = await prisma.daybookEntry.findMany({\n      where,\n      orderBy: { date: 'desc' },\n      include: {\n        lessonPlan: {\n          select: {\n            id: true,\n            title: true,\n            unitPlan: {\n              select: {\n                id: true,\n                title: true,\n                longRangePlan: {\n                  select: {\n                    subject: true,\n                    grade: true,\n                  },\n                },\n              },\n            },\n          },\n        },\n        _count: {\n          select: { expectations: true },\n        },\n      },\n    });\n\n    res.json(entries);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Get a single daybook entry\nrouter.get('/:id', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const entry = await prisma.daybookEntry.findFirst({\n      where: {\n        id: req.params.id,\n        userId,\n      },\n      include: {\n        lessonPlan: {\n          include: {\n            unitPlan: {\n              include: {\n                longRangePlan: true,\n              },\n            },\n            expectations: {\n              include: { expectation: true },\n            },\n            resources: true,\n          },\n        },\n        expectations: {\n          include: {\n            expectation: true,\n          },\n        },\n      },\n    });\n\n    if (!entry) {\n      return res.status(404).json({ error: 'Daybook entry not found' });\n    }\n\n    res.json(entry);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Create a new daybook entry\nrouter.post('/', validate(daybookEntryCreateSchema), async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { expectationCoverage, ...entryData } = req.body;\n\n    // If linking to a lesson plan, verify ownership and no existing entry\n    if (entryData.lessonPlanId) {\n      const lessonPlan = await prisma.eTFOLessonPlan.findFirst({\n        where: {\n          id: entryData.lessonPlanId,\n          userId,\n        },\n        include: {\n          daybookEntry: true,\n        },\n      });\n\n      if (!lessonPlan) {\n        return res.status(404).json({ error: 'Lesson plan not found' });\n      }\n\n      if (lessonPlan.daybookEntry) {\n        return res.status(400).json({\n          error: 'Lesson plan already has a daybook entry',\n        });\n      }\n    }\n\n    const entry = await prisma.daybookEntry.create({\n      data: {\n        ...entryData,\n        userId,\n        date: new Date(entryData.date),\n      },\n      include: {\n        lessonPlan: {\n          select: {\n            id: true,\n            title: true,\n            unitPlan: {\n              select: {\n                id: true,\n                title: true,\n                longRangePlan: {\n                  select: {\n                    subject: true,\n                    grade: true,\n                  },\n                },\n              },\n            },\n          },\n        },\n        _count: {\n          select: { expectations: true },\n        },\n      },\n    });\n\n    // Add expectation coverage if provided\n    if (expectationCoverage && expectationCoverage.length > 0) {\n      await prisma.daybookEntryExpectation.createMany({\n        data: expectationCoverage.map((ec: { expectationId: string; coverage: string }) => ({\n          daybookEntryId: entry.id,\n          expectationId: ec.expectationId,\n          coverage: ec.coverage,\n        })),\n      });\n\n      // Refetch with expectations\n      const updatedEntry = await prisma.daybookEntry.findUnique({\n        where: { id: entry.id },\n        include: {\n          lessonPlan: {\n            select: {\n              id: true,\n              title: true,\n              unitPlan: {\n                select: {\n                  id: true,\n                  title: true,\n                  longRangePlan: {\n                    select: {\n                      subject: true,\n                      grade: true,\n                    },\n                  },\n                },\n              },\n            },\n          },\n          expectations: {\n            include: { expectation: true },\n          },\n        },\n      });\n\n      return res.status(201).json(updatedEntry);\n    }\n\n    res.status(201).json(entry);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Update a daybook entry\nrouter.put('/:id', validate(daybookEntryUpdateSchema), async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { expectationCoverage, ...updateData } = req.body;\n\n    // Verify ownership\n    const existing = await prisma.daybookEntry.findFirst({\n      where: { id: req.params.id, userId },\n    });\n\n    if (!existing) {\n      return res.status(404).json({ error: 'Daybook entry not found' });\n    }\n\n    // Prepare update data\n    const data: Prisma.DaybookEntryUpdateInput = { ...updateData };\n    if (updateData.date) data.date = new Date(updateData.date);\n\n    // Update the entry\n    const entry = await prisma.daybookEntry.update({\n      where: { id: req.params.id },\n      data,\n    });\n\n    // Update expectation coverage if provided\n    if (expectationCoverage !== undefined) {\n      // Remove existing coverage\n      await prisma.daybookEntryExpectation.deleteMany({\n        where: { daybookEntryId: entry.id },\n      });\n\n      // Add new coverage\n      if (expectationCoverage.length > 0) {\n        await prisma.daybookEntryExpectation.createMany({\n          data: expectationCoverage.map((ec: { expectationId: string; coverage: string }) => ({\n            daybookEntryId: entry.id,\n            expectationId: ec.expectationId,\n            coverage: ec.coverage,\n          })),\n        });\n      }\n    }\n\n    // Refetch with updated relationships\n    const updatedEntry = await prisma.daybookEntry.findUnique({\n      where: { id: entry.id },\n      include: {\n        lessonPlan: {\n          include: {\n            unitPlan: {\n              include: {\n                longRangePlan: true,\n              },\n            },\n          },\n        },\n        expectations: {\n          include: { expectation: true },\n        },\n      },\n    });\n\n    res.json(updatedEntry);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Delete a daybook entry\nrouter.delete('/:id', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    // Verify ownership\n    const entry = await prisma.daybookEntry.findFirst({\n      where: { id: req.params.id, userId },\n    });\n\n    if (!entry) {\n      return res.status(404).json({ error: 'Daybook entry not found' });\n    }\n\n    await prisma.daybookEntry.delete({\n      where: { id: req.params.id },\n    });\n\n    res.status(204).end();\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Get daybook insights and patterns\nrouter.get('/insights/summary', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { startDate, endDate, subject } = req.query;\n\n    const where: Prisma.DaybookEntryWhereInput = { userId };\n\n    if (startDate || endDate) {\n      where.date = {};\n      if (startDate) where.date.gte = new Date(String(startDate));\n      if (endDate) where.date.lte = new Date(String(endDate));\n    }\n\n    if (subject) {\n      where.lessonPlan = {\n        unitPlan: {\n          longRangePlan: {\n            subject: String(subject),\n          },\n        },\n      };\n    }\n\n    // Get all entries for the period\n    const entries = await prisma.daybookEntry.findMany({\n      where,\n      select: {\n        id: true,\n        date: true,\n        overallRating: true,\n        wouldReuseLesson: true,\n        whatWorked: true,\n        whatDidntWork: true,\n        studentEngagement: true,\n        studentChallenges: true,\n        lessonPlan: {\n          select: {\n            unitPlan: {\n              select: {\n                longRangePlan: {\n                  select: { subject: true },\n                },\n              },\n            },\n          },\n        },\n      },\n    });\n\n    // Calculate insights\n    const totalEntries = entries.length;\n    const entriesWithRating = entries.filter((e) => e.overallRating !== null);\n    const avgRating =\n      entriesWithRating.length > 0\n        ? entriesWithRating.reduce((sum, e) => sum + (e.overallRating ?? 0), 0) /\n          entriesWithRating.length\n        : null;\n\n    const reuseStats = entries.filter((e) => e.wouldReuseLesson !== null);\n    const reusePercentage =\n      reuseStats.length > 0\n        ? Math.round(\n            (reuseStats.filter((e) => e.wouldReuseLesson).length / reuseStats.length) * 100,\n          )\n        : null;\n\n    // Common themes (would need NLP for real implementation)\n    const insights = {\n      period: {\n        start: startDate || 'all time',\n        end: endDate || 'present',\n      },\n      summary: {\n        totalEntries,\n        averageRating: avgRating ? Number(avgRating.toFixed(2)) : null,\n        reusePercentage,\n        entriesWithReflections: entries.filter(\n          (e) => e.whatWorked || e.whatDidntWork || e.studentEngagement || e.studentChallenges,\n        ).length,\n      },\n      trends: calculateTrends(entries),\n      commonThemes: extractCommonThemes(entries),\n      recommendations: generateRecommendations(entries),\n    };\n\n    res.json(insights);\n  } catch (err) {\n    _next(err);\n  }\n});\n\nexport default router;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1a0a827cadcb36be557db253a956be591f95ca1e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_x20e4qplz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_x20e4qplz();
import { Router } from 'express';
import { prisma } from '../prisma';
import { validate } from '../validation';
import { z } from 'zod';
const router =
/* istanbul ignore next */
(cov_x20e4qplz().s[0]++, Router());
// Analytics helper functions
function calculateTrends(entries) {
  /* istanbul ignore next */
  cov_x20e4qplz().f[0]++;
  cov_x20e4qplz().s[1]++;
  if (entries.length < 2) {
    /* istanbul ignore next */
    cov_x20e4qplz().b[0][0]++;
    cov_x20e4qplz().s[2]++;
    return {
      ratingTrend: 'insufficient_data',
      engagementTrend: 'insufficient_data'
    };
  } else
  /* istanbul ignore next */
  {
    cov_x20e4qplz().b[0][1]++;
  }
  // Sort entries by date to analyze trends over time
  const sortedEntries =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[3]++, entries.sort((a, b) => {
    /* istanbul ignore next */
    cov_x20e4qplz().f[1]++;
    cov_x20e4qplz().s[4]++;
    return new Date(a.date).getTime() - new Date(b.date).getTime();
  }));
  // Calculate rating trend
  const ratingsWithValues =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[5]++, sortedEntries.filter(e => {
    /* istanbul ignore next */
    cov_x20e4qplz().f[2]++;
    cov_x20e4qplz().s[6]++;
    return e.rating !== null;
  }));
  let ratingTrend =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[7]++, 'stable');
  /* istanbul ignore next */
  cov_x20e4qplz().s[8]++;
  if (ratingsWithValues.length >= 3) {
    /* istanbul ignore next */
    cov_x20e4qplz().b[1][0]++;
    const firstHalf =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[9]++, ratingsWithValues.slice(0, Math.ceil(ratingsWithValues.length / 2)));
    const secondHalf =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[10]++, ratingsWithValues.slice(Math.floor(ratingsWithValues.length / 2)));
    const firstAvg =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[11]++, firstHalf.reduce((sum, e) => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[3]++;
      cov_x20e4qplz().s[12]++;
      return sum + (
      /* istanbul ignore next */
      (cov_x20e4qplz().b[2][0]++, e.rating) ??
      /* istanbul ignore next */
      (cov_x20e4qplz().b[2][1]++, e.overallRating) ??
      /* istanbul ignore next */
      (cov_x20e4qplz().b[2][2]++, 0));
    }, 0) / firstHalf.length);
    const secondAvg =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[13]++, secondHalf.reduce((sum, e) => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[4]++;
      cov_x20e4qplz().s[14]++;
      return sum + (
      /* istanbul ignore next */
      (cov_x20e4qplz().b[3][0]++, e.rating) ??
      /* istanbul ignore next */
      (cov_x20e4qplz().b[3][1]++, e.overallRating) ??
      /* istanbul ignore next */
      (cov_x20e4qplz().b[3][2]++, 0));
    }, 0) / secondHalf.length);
    const diff =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[15]++, secondAvg - firstAvg);
    /* istanbul ignore next */
    cov_x20e4qplz().s[16]++;
    if (diff > 0.3) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[4][0]++;
      cov_x20e4qplz().s[17]++;
      ratingTrend = 'improving';
    } else {
      /* istanbul ignore next */
      cov_x20e4qplz().b[4][1]++;
      cov_x20e4qplz().s[18]++;
      if (diff < -0.3) {
        /* istanbul ignore next */
        cov_x20e4qplz().b[5][0]++;
        cov_x20e4qplz().s[19]++;
        ratingTrend = 'declining';
      } else
      /* istanbul ignore next */
      {
        cov_x20e4qplz().b[5][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_x20e4qplz().b[1][1]++;
  }
  // Calculate engagement trend by analyzing studentEngagement text
  const engagementEntries =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[20]++, sortedEntries.filter(e => {
    /* istanbul ignore next */
    cov_x20e4qplz().f[5]++;
    cov_x20e4qplz().s[21]++;
    return e.studentEngagement;
  }));
  let engagementTrend =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[22]++, 'stable');
  /* istanbul ignore next */
  cov_x20e4qplz().s[23]++;
  if (engagementEntries.length >= 2) {
    /* istanbul ignore next */
    cov_x20e4qplz().b[6][0]++;
    const recentEntries =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[24]++, engagementEntries.slice(-3)); // Last 3 entries
    const positiveWords =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[25]++, ['engaged', 'active', 'interested', 'excited', 'participated', 'focused']);
    const negativeWords =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[26]++, ['disengaged', 'distracted', 'bored', 'struggled', 'off-task']);
    let positiveCount =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[27]++, 0);
    let negativeCount =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[28]++, 0);
    /* istanbul ignore next */
    cov_x20e4qplz().s[29]++;
    recentEntries.forEach(entry => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[6]++;
      const text =
      /* istanbul ignore next */
      (cov_x20e4qplz().s[30]++, entry.studentEngagement.toLowerCase());
      /* istanbul ignore next */
      cov_x20e4qplz().s[31]++;
      positiveWords.forEach(word => {
        /* istanbul ignore next */
        cov_x20e4qplz().f[7]++;
        cov_x20e4qplz().s[32]++;
        if (text.includes(word)) {
          /* istanbul ignore next */
          cov_x20e4qplz().b[7][0]++;
          cov_x20e4qplz().s[33]++;
          positiveCount++;
        } else
        /* istanbul ignore next */
        {
          cov_x20e4qplz().b[7][1]++;
        }
      });
      /* istanbul ignore next */
      cov_x20e4qplz().s[34]++;
      negativeWords.forEach(word => {
        /* istanbul ignore next */
        cov_x20e4qplz().f[8]++;
        cov_x20e4qplz().s[35]++;
        if (text.includes(word)) {
          /* istanbul ignore next */
          cov_x20e4qplz().b[8][0]++;
          cov_x20e4qplz().s[36]++;
          negativeCount++;
        } else
        /* istanbul ignore next */
        {
          cov_x20e4qplz().b[8][1]++;
        }
      });
    });
    /* istanbul ignore next */
    cov_x20e4qplz().s[37]++;
    if (positiveCount > negativeCount) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[9][0]++;
      cov_x20e4qplz().s[38]++;
      engagementTrend = 'improving';
    } else {
      /* istanbul ignore next */
      cov_x20e4qplz().b[9][1]++;
      cov_x20e4qplz().s[39]++;
      if (negativeCount > positiveCount) {
        /* istanbul ignore next */
        cov_x20e4qplz().b[10][0]++;
        cov_x20e4qplz().s[40]++;
        engagementTrend = 'declining';
      } else
      /* istanbul ignore next */
      {
        cov_x20e4qplz().b[10][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_x20e4qplz().b[6][1]++;
  }
  cov_x20e4qplz().s[41]++;
  return {
    ratingTrend,
    engagementTrend
  };
}
function extractCommonThemes(entries) {
  /* istanbul ignore next */
  cov_x20e4qplz().f[9]++;
  const successWords =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[42]++, new Map());
  const challengeWords =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[43]++, new Map());
  const improvementWords =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[44]++, new Map());
  /* istanbul ignore next */
  cov_x20e4qplz().s[45]++;
  entries.forEach(entry => {
    /* istanbul ignore next */
    cov_x20e4qplz().f[10]++;
    cov_x20e4qplz().s[46]++;
    // Extract themes from whatWorked
    if (entry.whatWorked) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[11][0]++;
      const words =
      /* istanbul ignore next */
      (cov_x20e4qplz().s[47]++, extractKeywords(entry.whatWorked));
      /* istanbul ignore next */
      cov_x20e4qplz().s[48]++;
      words.forEach(word => {
        /* istanbul ignore next */
        cov_x20e4qplz().f[11]++;
        cov_x20e4qplz().s[49]++;
        successWords.set(word, (
        /* istanbul ignore next */
        (cov_x20e4qplz().b[12][0]++, successWords.get(word)) ||
        /* istanbul ignore next */
        (cov_x20e4qplz().b[12][1]++, 0)) + 1);
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[11][1]++;
    }
    // Extract themes from whatDidntWork and studentChallenges
    cov_x20e4qplz().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_x20e4qplz().b[14][0]++, entry.whatDidntWork) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[14][1]++, entry.studentChallenges)) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[13][0]++;
      const text =
      /* istanbul ignore next */
      (cov_x20e4qplz().s[51]++, `${
      /* istanbul ignore next */
      (cov_x20e4qplz().b[15][0]++, entry.whatDidntWork) ||
      /* istanbul ignore next */
      (cov_x20e4qplz().b[15][1]++, '')} ${
      /* istanbul ignore next */
      (cov_x20e4qplz().b[16][0]++, entry.studentChallenges) ||
      /* istanbul ignore next */
      (cov_x20e4qplz().b[16][1]++, '')}`);
      const words =
      /* istanbul ignore next */
      (cov_x20e4qplz().s[52]++, extractKeywords(text));
      /* istanbul ignore next */
      cov_x20e4qplz().s[53]++;
      words.forEach(word => {
        /* istanbul ignore next */
        cov_x20e4qplz().f[12]++;
        cov_x20e4qplz().s[54]++;
        challengeWords.set(word, (
        /* istanbul ignore next */
        (cov_x20e4qplz().b[17][0]++, challengeWords.get(word)) ||
        /* istanbul ignore next */
        (cov_x20e4qplz().b[17][1]++, 0)) + 1);
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[13][1]++;
    }
    // Extract themes from nextSteps
    cov_x20e4qplz().s[55]++;
    if (entry.nextSteps) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[18][0]++;
      const words =
      /* istanbul ignore next */
      (cov_x20e4qplz().s[56]++, extractKeywords(entry.nextSteps));
      /* istanbul ignore next */
      cov_x20e4qplz().s[57]++;
      words.forEach(word => {
        /* istanbul ignore next */
        cov_x20e4qplz().f[13]++;
        cov_x20e4qplz().s[58]++;
        improvementWords.set(word, (
        /* istanbul ignore next */
        (cov_x20e4qplz().b[19][0]++, improvementWords.get(word)) ||
        /* istanbul ignore next */
        (cov_x20e4qplz().b[19][1]++, 0)) + 1);
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[18][1]++;
    }
  });
  // Get top themes (minimum 2 occurrences)
  /* istanbul ignore next */
  cov_x20e4qplz().s[59]++;
  const getTopThemes = wordMap => {
    /* istanbul ignore next */
    cov_x20e4qplz().f[14]++;
    cov_x20e4qplz().s[60]++;
    return Array.from(wordMap.entries()).filter(([_, count]) => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[15]++;
      cov_x20e4qplz().s[61]++;
      return count >= 2;
    }).sort(([_, a], [__, b]) => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[16]++;
      cov_x20e4qplz().s[62]++;
      return b - a;
    }).slice(0, 5).map(([word, count]) => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[17]++;
      cov_x20e4qplz().s[63]++;
      return `${word} (${count} mentions)`;
    });
  };
  /* istanbul ignore next */
  cov_x20e4qplz().s[64]++;
  return {
    successes: getTopThemes(successWords),
    challenges: getTopThemes(challengeWords),
    improvements: getTopThemes(improvementWords)
  };
}
function extractKeywords(text) {
  /* istanbul ignore next */
  cov_x20e4qplz().f[18]++;
  // Simple keyword extraction - remove common words and extract meaningful terms
  const commonWords =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[65]++, new Set(['the', 'a', 'an', 'and', 'or', 'but', 'in', 'on', 'at', 'to', 'for', 'of', 'with', 'by', 'was', 'were', 'is', 'are', 'be', 'been', 'have', 'has', 'had', 'do', 'does', 'did', 'will', 'would', 'could', 'should', 'may', 'might', 'can', 'this', 'that', 'these', 'those']));
  /* istanbul ignore next */
  cov_x20e4qplz().s[66]++;
  return text.toLowerCase().replace(/[^\w\s]/g, ' ').split(/\s+/).filter(word => {
    /* istanbul ignore next */
    cov_x20e4qplz().f[19]++;
    cov_x20e4qplz().s[67]++;
    return /* istanbul ignore next */(cov_x20e4qplz().b[20][0]++, word.length > 3) &&
    /* istanbul ignore next */
    (cov_x20e4qplz().b[20][1]++, !commonWords.has(word));
  }).slice(0, 10); // Limit to prevent noise
}
function generateRecommendations(entries) {
  /* istanbul ignore next */
  cov_x20e4qplz().f[20]++;
  const recommendations =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[68]++, []);
  /* istanbul ignore next */
  cov_x20e4qplz().s[69]++;
  if (entries.length === 0) {
    /* istanbul ignore next */
    cov_x20e4qplz().b[21][0]++;
    cov_x20e4qplz().s[70]++;
    return ['Start documenting your daily teaching experiences to build insights over time.'];
  } else
  /* istanbul ignore next */
  {
    cov_x20e4qplz().b[21][1]++;
  }
  // Analyze rating patterns
  const ratedEntries =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[71]++, entries.filter(e => {
    /* istanbul ignore next */
    cov_x20e4qplz().f[21]++;
    cov_x20e4qplz().s[72]++;
    return e.rating !== null;
  }));
  /* istanbul ignore next */
  cov_x20e4qplz().s[73]++;
  if (ratedEntries.length > 0) {
    /* istanbul ignore next */
    cov_x20e4qplz().b[22][0]++;
    const avgRating =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[74]++, ratedEntries.reduce((sum, e) => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[22]++;
      cov_x20e4qplz().s[75]++;
      return sum + e.rating;
    }, 0) / ratedEntries.length);
    const lowRatedEntries =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[76]++, ratedEntries.filter(e => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[23]++;
      cov_x20e4qplz().s[77]++;
      return e.rating < 3;
    }));
    /* istanbul ignore next */
    cov_x20e4qplz().s[78]++;
    if (avgRating < 3.5) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[23][0]++;
      cov_x20e4qplz().s[79]++;
      recommendations.push('Consider reviewing lessons with lower ratings to identify improvement patterns.');
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[23][1]++;
    }
    cov_x20e4qplz().s[80]++;
    if (lowRatedEntries.length > ratedEntries.length * 0.3) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[24][0]++;
      cov_x20e4qplz().s[81]++;
      recommendations.push('Focus on documenting what worked well in higher-rated lessons for replication.');
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[24][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_x20e4qplz().b[22][1]++;
  }
  // Check reflection completeness
  const reflectiveEntries =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[82]++, entries.filter(e => {
    /* istanbul ignore next */
    cov_x20e4qplz().f[24]++;
    cov_x20e4qplz().s[83]++;
    return /* istanbul ignore next */(cov_x20e4qplz().b[25][0]++, e.whatWorked) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[25][1]++, e.whatDidntWork) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[25][2]++, e.studentEngagement) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[25][3]++, e.studentChallenges) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[25][4]++, e.nextSteps);
  }));
  /* istanbul ignore next */
  cov_x20e4qplz().s[84]++;
  if (reflectiveEntries.length < entries.length * 0.5) {
    /* istanbul ignore next */
    cov_x20e4qplz().b[26][0]++;
    cov_x20e4qplz().s[85]++;
    recommendations.push('Increase reflection depth by completing more reflection fields for better insights.');
  } else
  /* istanbul ignore next */
  {
    cov_x20e4qplz().b[26][1]++;
  }
  // Analyze reuse patterns
  const reusedEntries =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[86]++, entries.filter(e => {
    /* istanbul ignore next */
    cov_x20e4qplz().f[25]++;
    cov_x20e4qplz().s[87]++;
    return e.wouldReuseLesson === true;
  }));
  /* istanbul ignore next */
  cov_x20e4qplz().s[88]++;
  if (reusedEntries.length > 0) {
    /* istanbul ignore next */
    cov_x20e4qplz().b[27][0]++;
    cov_x20e4qplz().s[89]++;
    recommendations.push('Document successful strategies from reusable lessons for your teaching resource bank.');
  } else
  /* istanbul ignore next */
  {
    cov_x20e4qplz().b[27][1]++;
  }
  // Time-based recommendations
  const recentEntries =
  /* istanbul ignore next */
  (cov_x20e4qplz().s[90]++, entries.filter(e => {
    /* istanbul ignore next */
    cov_x20e4qplz().f[26]++;
    const entryDate =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[91]++, new Date(e.date));
    const oneWeekAgo =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[92]++, new Date());
    /* istanbul ignore next */
    cov_x20e4qplz().s[93]++;
    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
    /* istanbul ignore next */
    cov_x20e4qplz().s[94]++;
    return entryDate >= oneWeekAgo;
  }));
  /* istanbul ignore next */
  cov_x20e4qplz().s[95]++;
  if (recentEntries.length === 0) {
    /* istanbul ignore next */
    cov_x20e4qplz().b[28][0]++;
    cov_x20e4qplz().s[96]++;
    recommendations.push('Regular reflection helps identify patterns - try to document lessons weekly.');
  } else
  /* istanbul ignore next */
  {
    cov_x20e4qplz().b[28][1]++;
  }
  cov_x20e4qplz().s[97]++;
  return recommendations.length > 0 ?
  /* istanbul ignore next */
  (cov_x20e4qplz().b[29][0]++, recommendations) :
  /* istanbul ignore next */
  (cov_x20e4qplz().b[29][1]++, ['Continue documenting your teaching experiences to build a comprehensive reflection database.', 'Focus on noting both successes and challenges to maximize learning opportunities.']);
}
// Validation schemas
const daybookEntryCreateSchema =
/* istanbul ignore next */
(cov_x20e4qplz().s[98]++, z.object({
  date: z.string().datetime(),
  lessonPlanId: z.string().optional(),
  whatWorked: z.string().optional(),
  whatWorkedFr: z.string().optional(),
  whatDidntWork: z.string().optional(),
  whatDidntWorkFr: z.string().optional(),
  nextSteps: z.string().optional(),
  nextStepsFr: z.string().optional(),
  studentEngagement: z.string().optional(),
  studentChallenges: z.string().optional(),
  studentSuccesses: z.string().optional(),
  notes: z.string().optional(),
  notesFr: z.string().optional(),
  privateNotes: z.string().optional(),
  overallRating: z.number().int().min(1).max(5).optional(),
  wouldReuseLesson: z.boolean().optional(),
  expectationCoverage: z.array(z.object({
    expectationId: z.string(),
    coverage: z.enum(['introduced', 'developing', 'consolidated'])
  })).optional()
}));
const daybookEntryUpdateSchema =
/* istanbul ignore next */
(cov_x20e4qplz().s[99]++, daybookEntryCreateSchema.partial());
// Get all daybook entries for the authenticated user
/* istanbul ignore next */
cov_x20e4qplz().s[100]++;
router.get('/', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_x20e4qplz().f[27]++;
  cov_x20e4qplz().s[101]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[102]++,
    /* istanbul ignore next */
    (cov_x20e4qplz().b[30][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[30][1]++, 0));
    /* istanbul ignore next */
    cov_x20e4qplz().s[103]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[31][0]++;
      cov_x20e4qplz().s[104]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[31][1]++;
    }
    const {
      startDate,
      endDate,
      hasLessonPlan,
      rating
    } =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[105]++, req.query);
    const where =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[106]++, {
      userId
    });
    /* istanbul ignore next */
    cov_x20e4qplz().s[107]++;
    if (
    /* istanbul ignore next */
    (cov_x20e4qplz().b[33][0]++, startDate) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[33][1]++, endDate)) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[32][0]++;
      cov_x20e4qplz().s[108]++;
      where.date = {};
      /* istanbul ignore next */
      cov_x20e4qplz().s[109]++;
      if (startDate) {
        /* istanbul ignore next */
        cov_x20e4qplz().b[34][0]++;
        cov_x20e4qplz().s[110]++;
        where.date.gte = new Date(String(startDate));
      } else
      /* istanbul ignore next */
      {
        cov_x20e4qplz().b[34][1]++;
      }
      cov_x20e4qplz().s[111]++;
      if (endDate) {
        /* istanbul ignore next */
        cov_x20e4qplz().b[35][0]++;
        cov_x20e4qplz().s[112]++;
        where.date.lte = new Date(String(endDate));
      } else
      /* istanbul ignore next */
      {
        cov_x20e4qplz().b[35][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[32][1]++;
    }
    cov_x20e4qplz().s[113]++;
    if (hasLessonPlan !== undefined) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[36][0]++;
      cov_x20e4qplz().s[114]++;
      where.lessonPlanId = hasLessonPlan === 'true' ?
      /* istanbul ignore next */
      (cov_x20e4qplz().b[37][0]++, {
        not: null
      }) :
      /* istanbul ignore next */
      (cov_x20e4qplz().b[37][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[36][1]++;
    }
    cov_x20e4qplz().s[115]++;
    if (rating) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[38][0]++;
      cov_x20e4qplz().s[116]++;
      where.overallRating = Number(rating);
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[38][1]++;
    }
    const entries =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[117]++, await prisma.daybookEntry.findMany({
      where,
      orderBy: {
        date: 'desc'
      },
      include: {
        lessonPlan: {
          select: {
            id: true,
            title: true,
            unitPlan: {
              select: {
                id: true,
                title: true,
                longRangePlan: {
                  select: {
                    subject: true,
                    grade: true
                  }
                }
              }
            }
          }
        },
        _count: {
          select: {
            expectations: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_x20e4qplz().s[118]++;
    res.json(entries);
  } catch (err) {
    /* istanbul ignore next */
    cov_x20e4qplz().s[119]++;
    _next(err);
  }
});
// Get a single daybook entry
/* istanbul ignore next */
cov_x20e4qplz().s[120]++;
router.get('/:id', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_x20e4qplz().f[28]++;
  cov_x20e4qplz().s[121]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[122]++,
    /* istanbul ignore next */
    (cov_x20e4qplz().b[39][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[39][1]++, 0));
    /* istanbul ignore next */
    cov_x20e4qplz().s[123]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[40][0]++;
      cov_x20e4qplz().s[124]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[40][1]++;
    }
    const entry =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[125]++, await prisma.daybookEntry.findFirst({
      where: {
        id: req.params.id,
        userId
      },
      include: {
        lessonPlan: {
          include: {
            unitPlan: {
              include: {
                longRangePlan: true
              }
            },
            expectations: {
              include: {
                expectation: true
              }
            },
            resources: true
          }
        },
        expectations: {
          include: {
            expectation: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_x20e4qplz().s[126]++;
    if (!entry) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[41][0]++;
      cov_x20e4qplz().s[127]++;
      return res.status(404).json({
        error: 'Daybook entry not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[41][1]++;
    }
    cov_x20e4qplz().s[128]++;
    res.json(entry);
  } catch (err) {
    /* istanbul ignore next */
    cov_x20e4qplz().s[129]++;
    _next(err);
  }
});
// Create a new daybook entry
/* istanbul ignore next */
cov_x20e4qplz().s[130]++;
router.post('/', validate(daybookEntryCreateSchema), async (req, res, _next) => {
  /* istanbul ignore next */
  cov_x20e4qplz().f[29]++;
  cov_x20e4qplz().s[131]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[132]++,
    /* istanbul ignore next */
    (cov_x20e4qplz().b[42][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[42][1]++, 0));
    /* istanbul ignore next */
    cov_x20e4qplz().s[133]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[43][0]++;
      cov_x20e4qplz().s[134]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[43][1]++;
    }
    const {
      expectationCoverage,
      ...entryData
    } =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[135]++, req.body);
    // If linking to a lesson plan, verify ownership and no existing entry
    /* istanbul ignore next */
    cov_x20e4qplz().s[136]++;
    if (entryData.lessonPlanId) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[44][0]++;
      const lessonPlan =
      /* istanbul ignore next */
      (cov_x20e4qplz().s[137]++, await prisma.eTFOLessonPlan.findFirst({
        where: {
          id: entryData.lessonPlanId,
          userId
        },
        include: {
          daybookEntry: true
        }
      }));
      /* istanbul ignore next */
      cov_x20e4qplz().s[138]++;
      if (!lessonPlan) {
        /* istanbul ignore next */
        cov_x20e4qplz().b[45][0]++;
        cov_x20e4qplz().s[139]++;
        return res.status(404).json({
          error: 'Lesson plan not found'
        });
      } else
      /* istanbul ignore next */
      {
        cov_x20e4qplz().b[45][1]++;
      }
      cov_x20e4qplz().s[140]++;
      if (lessonPlan.daybookEntry) {
        /* istanbul ignore next */
        cov_x20e4qplz().b[46][0]++;
        cov_x20e4qplz().s[141]++;
        return res.status(400).json({
          error: 'Lesson plan already has a daybook entry'
        });
      } else
      /* istanbul ignore next */
      {
        cov_x20e4qplz().b[46][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[44][1]++;
    }
    const entry =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[142]++, await prisma.daybookEntry.create({
      data: {
        ...entryData,
        userId,
        date: new Date(entryData.date)
      },
      include: {
        lessonPlan: {
          select: {
            id: true,
            title: true,
            unitPlan: {
              select: {
                id: true,
                title: true,
                longRangePlan: {
                  select: {
                    subject: true,
                    grade: true
                  }
                }
              }
            }
          }
        },
        _count: {
          select: {
            expectations: true
          }
        }
      }
    }));
    // Add expectation coverage if provided
    /* istanbul ignore next */
    cov_x20e4qplz().s[143]++;
    if (
    /* istanbul ignore next */
    (cov_x20e4qplz().b[48][0]++, expectationCoverage) &&
    /* istanbul ignore next */
    (cov_x20e4qplz().b[48][1]++, expectationCoverage.length > 0)) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[47][0]++;
      cov_x20e4qplz().s[144]++;
      await prisma.daybookEntryExpectation.createMany({
        data: expectationCoverage.map(ec => {
          /* istanbul ignore next */
          cov_x20e4qplz().f[30]++;
          cov_x20e4qplz().s[145]++;
          return {
            daybookEntryId: entry.id,
            expectationId: ec.expectationId,
            coverage: ec.coverage
          };
        })
      });
      // Refetch with expectations
      const updatedEntry =
      /* istanbul ignore next */
      (cov_x20e4qplz().s[146]++, await prisma.daybookEntry.findUnique({
        where: {
          id: entry.id
        },
        include: {
          lessonPlan: {
            select: {
              id: true,
              title: true,
              unitPlan: {
                select: {
                  id: true,
                  title: true,
                  longRangePlan: {
                    select: {
                      subject: true,
                      grade: true
                    }
                  }
                }
              }
            }
          },
          expectations: {
            include: {
              expectation: true
            }
          }
        }
      }));
      /* istanbul ignore next */
      cov_x20e4qplz().s[147]++;
      return res.status(201).json(updatedEntry);
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[47][1]++;
    }
    cov_x20e4qplz().s[148]++;
    res.status(201).json(entry);
  } catch (err) {
    /* istanbul ignore next */
    cov_x20e4qplz().s[149]++;
    _next(err);
  }
});
// Update a daybook entry
/* istanbul ignore next */
cov_x20e4qplz().s[150]++;
router.put('/:id', validate(daybookEntryUpdateSchema), async (req, res, _next) => {
  /* istanbul ignore next */
  cov_x20e4qplz().f[31]++;
  cov_x20e4qplz().s[151]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[152]++,
    /* istanbul ignore next */
    (cov_x20e4qplz().b[49][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[49][1]++, 0));
    /* istanbul ignore next */
    cov_x20e4qplz().s[153]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[50][0]++;
      cov_x20e4qplz().s[154]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[50][1]++;
    }
    const {
      expectationCoverage,
      ...updateData
    } =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[155]++, req.body);
    // Verify ownership
    const existing =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[156]++, await prisma.daybookEntry.findFirst({
      where: {
        id: req.params.id,
        userId
      }
    }));
    /* istanbul ignore next */
    cov_x20e4qplz().s[157]++;
    if (!existing) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[51][0]++;
      cov_x20e4qplz().s[158]++;
      return res.status(404).json({
        error: 'Daybook entry not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[51][1]++;
    }
    // Prepare update data
    const data =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[159]++, {
      ...updateData
    });
    /* istanbul ignore next */
    cov_x20e4qplz().s[160]++;
    if (updateData.date) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[52][0]++;
      cov_x20e4qplz().s[161]++;
      data.date = new Date(updateData.date);
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[52][1]++;
    }
    // Update the entry
    const entry =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[162]++, await prisma.daybookEntry.update({
      where: {
        id: req.params.id
      },
      data
    }));
    // Update expectation coverage if provided
    /* istanbul ignore next */
    cov_x20e4qplz().s[163]++;
    if (expectationCoverage !== undefined) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[53][0]++;
      cov_x20e4qplz().s[164]++;
      // Remove existing coverage
      await prisma.daybookEntryExpectation.deleteMany({
        where: {
          daybookEntryId: entry.id
        }
      });
      // Add new coverage
      /* istanbul ignore next */
      cov_x20e4qplz().s[165]++;
      if (expectationCoverage.length > 0) {
        /* istanbul ignore next */
        cov_x20e4qplz().b[54][0]++;
        cov_x20e4qplz().s[166]++;
        await prisma.daybookEntryExpectation.createMany({
          data: expectationCoverage.map(ec => {
            /* istanbul ignore next */
            cov_x20e4qplz().f[32]++;
            cov_x20e4qplz().s[167]++;
            return {
              daybookEntryId: entry.id,
              expectationId: ec.expectationId,
              coverage: ec.coverage
            };
          })
        });
      } else
      /* istanbul ignore next */
      {
        cov_x20e4qplz().b[54][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[53][1]++;
    }
    // Refetch with updated relationships
    const updatedEntry =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[168]++, await prisma.daybookEntry.findUnique({
      where: {
        id: entry.id
      },
      include: {
        lessonPlan: {
          include: {
            unitPlan: {
              include: {
                longRangePlan: true
              }
            }
          }
        },
        expectations: {
          include: {
            expectation: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_x20e4qplz().s[169]++;
    res.json(updatedEntry);
  } catch (err) {
    /* istanbul ignore next */
    cov_x20e4qplz().s[170]++;
    _next(err);
  }
});
// Delete a daybook entry
/* istanbul ignore next */
cov_x20e4qplz().s[171]++;
router.delete('/:id', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_x20e4qplz().f[33]++;
  cov_x20e4qplz().s[172]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[173]++,
    /* istanbul ignore next */
    (cov_x20e4qplz().b[55][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[55][1]++, 0));
    /* istanbul ignore next */
    cov_x20e4qplz().s[174]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[56][0]++;
      cov_x20e4qplz().s[175]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[56][1]++;
    }
    // Verify ownership
    const entry =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[176]++, await prisma.daybookEntry.findFirst({
      where: {
        id: req.params.id,
        userId
      }
    }));
    /* istanbul ignore next */
    cov_x20e4qplz().s[177]++;
    if (!entry) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[57][0]++;
      cov_x20e4qplz().s[178]++;
      return res.status(404).json({
        error: 'Daybook entry not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[57][1]++;
    }
    cov_x20e4qplz().s[179]++;
    await prisma.daybookEntry.delete({
      where: {
        id: req.params.id
      }
    });
    /* istanbul ignore next */
    cov_x20e4qplz().s[180]++;
    res.status(204).end();
  } catch (err) {
    /* istanbul ignore next */
    cov_x20e4qplz().s[181]++;
    _next(err);
  }
});
// Get daybook insights and patterns
/* istanbul ignore next */
cov_x20e4qplz().s[182]++;
router.get('/insights/summary', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_x20e4qplz().f[34]++;
  cov_x20e4qplz().s[183]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[184]++,
    /* istanbul ignore next */
    (cov_x20e4qplz().b[58][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[58][1]++, 0));
    /* istanbul ignore next */
    cov_x20e4qplz().s[185]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[59][0]++;
      cov_x20e4qplz().s[186]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[59][1]++;
    }
    const {
      startDate,
      endDate,
      subject
    } =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[187]++, req.query);
    const where =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[188]++, {
      userId
    });
    /* istanbul ignore next */
    cov_x20e4qplz().s[189]++;
    if (
    /* istanbul ignore next */
    (cov_x20e4qplz().b[61][0]++, startDate) ||
    /* istanbul ignore next */
    (cov_x20e4qplz().b[61][1]++, endDate)) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[60][0]++;
      cov_x20e4qplz().s[190]++;
      where.date = {};
      /* istanbul ignore next */
      cov_x20e4qplz().s[191]++;
      if (startDate) {
        /* istanbul ignore next */
        cov_x20e4qplz().b[62][0]++;
        cov_x20e4qplz().s[192]++;
        where.date.gte = new Date(String(startDate));
      } else
      /* istanbul ignore next */
      {
        cov_x20e4qplz().b[62][1]++;
      }
      cov_x20e4qplz().s[193]++;
      if (endDate) {
        /* istanbul ignore next */
        cov_x20e4qplz().b[63][0]++;
        cov_x20e4qplz().s[194]++;
        where.date.lte = new Date(String(endDate));
      } else
      /* istanbul ignore next */
      {
        cov_x20e4qplz().b[63][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[60][1]++;
    }
    cov_x20e4qplz().s[195]++;
    if (subject) {
      /* istanbul ignore next */
      cov_x20e4qplz().b[64][0]++;
      cov_x20e4qplz().s[196]++;
      where.lessonPlan = {
        unitPlan: {
          longRangePlan: {
            subject: String(subject)
          }
        }
      };
    } else
    /* istanbul ignore next */
    {
      cov_x20e4qplz().b[64][1]++;
    }
    // Get all entries for the period
    const entries =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[197]++, await prisma.daybookEntry.findMany({
      where,
      select: {
        id: true,
        date: true,
        overallRating: true,
        wouldReuseLesson: true,
        whatWorked: true,
        whatDidntWork: true,
        studentEngagement: true,
        studentChallenges: true,
        lessonPlan: {
          select: {
            unitPlan: {
              select: {
                longRangePlan: {
                  select: {
                    subject: true
                  }
                }
              }
            }
          }
        }
      }
    }));
    // Calculate insights
    const totalEntries =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[198]++, entries.length);
    const entriesWithRating =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[199]++, entries.filter(e => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[35]++;
      cov_x20e4qplz().s[200]++;
      return e.overallRating !== null;
    }));
    const avgRating =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[201]++, entriesWithRating.length > 0 ?
    /* istanbul ignore next */
    (cov_x20e4qplz().b[65][0]++, entriesWithRating.reduce((sum, e) => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[36]++;
      cov_x20e4qplz().s[202]++;
      return sum + (
      /* istanbul ignore next */
      (cov_x20e4qplz().b[66][0]++, e.overallRating) ??
      /* istanbul ignore next */
      (cov_x20e4qplz().b[66][1]++, 0));
    }, 0) / entriesWithRating.length) :
    /* istanbul ignore next */
    (cov_x20e4qplz().b[65][1]++, null));
    const reuseStats =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[203]++, entries.filter(e => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[37]++;
      cov_x20e4qplz().s[204]++;
      return e.wouldReuseLesson !== null;
    }));
    const reusePercentage =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[205]++, reuseStats.length > 0 ?
    /* istanbul ignore next */
    (cov_x20e4qplz().b[67][0]++, Math.round(reuseStats.filter(e => {
      /* istanbul ignore next */
      cov_x20e4qplz().f[38]++;
      cov_x20e4qplz().s[206]++;
      return e.wouldReuseLesson;
    }).length / reuseStats.length * 100)) :
    /* istanbul ignore next */
    (cov_x20e4qplz().b[67][1]++, null));
    // Common themes (would need NLP for real implementation)
    const insights =
    /* istanbul ignore next */
    (cov_x20e4qplz().s[207]++, {
      period: {
        start:
        /* istanbul ignore next */
        (cov_x20e4qplz().b[68][0]++, startDate) ||
        /* istanbul ignore next */
        (cov_x20e4qplz().b[68][1]++, 'all time'),
        end:
        /* istanbul ignore next */
        (cov_x20e4qplz().b[69][0]++, endDate) ||
        /* istanbul ignore next */
        (cov_x20e4qplz().b[69][1]++, 'present')
      },
      summary: {
        totalEntries,
        averageRating: avgRating ?
        /* istanbul ignore next */
        (cov_x20e4qplz().b[70][0]++, Number(avgRating.toFixed(2))) :
        /* istanbul ignore next */
        (cov_x20e4qplz().b[70][1]++, null),
        reusePercentage,
        entriesWithReflections: entries.filter(e => {
          /* istanbul ignore next */
          cov_x20e4qplz().f[39]++;
          cov_x20e4qplz().s[208]++;
          return /* istanbul ignore next */(cov_x20e4qplz().b[71][0]++, e.whatWorked) ||
          /* istanbul ignore next */
          (cov_x20e4qplz().b[71][1]++, e.whatDidntWork) ||
          /* istanbul ignore next */
          (cov_x20e4qplz().b[71][2]++, e.studentEngagement) ||
          /* istanbul ignore next */
          (cov_x20e4qplz().b[71][3]++, e.studentChallenges);
        }).length
      },
      trends: calculateTrends(entries),
      commonThemes: extractCommonThemes(entries),
      recommendations: generateRecommendations(entries)
    });
    /* istanbul ignore next */
    cov_x20e4qplz().s[209]++;
    res.json(insights);
  } catch (err) {
    /* istanbul ignore next */
    cov_x20e4qplz().s[210]++;
    _next(err);
  }
});
export default router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,