{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/student.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/student.ts"],"sourcesContent":["import { Router, Request } from 'express';\nimport { Prisma } from '../prisma';\nimport { prisma } from '../prisma';\nimport { validate } from '../validation';\nimport { z } from 'zod';\nimport { auditLoggers } from '../middleware/auditLog';\n\nconst router = Router();\n\n// Validation schemas\nconst studentCreateSchema = z\n  .object({\n    firstName: z.string().min(1).max(100).optional(),\n    lastName: z.string().min(1).max(100).optional(),\n    grade: z.number().int().min(1).max(12).optional(),\n    // Legacy field for backward compatibility\n    name: z.string().min(1).max(200).optional(),\n  })\n  .refine(\n    (data) => {\n      // Either use new fields (firstName, lastName, grade) or legacy name field\n      return (data.firstName && data.lastName && typeof data.grade === 'number') || data.name;\n    },\n    {\n      message: 'Either provide firstName, lastName, and grade, or provide name',\n    },\n  );\n\nconst studentUpdateSchema = z.object({\n  firstName: z.string().min(1).max(100).optional(),\n  lastName: z.string().min(1).max(100).optional(),\n  grade: z.number().int().min(1).max(12).optional(),\n  name: z.string().min(1).max(200).optional(),\n});\n\nconst studentGoalCreateSchema = z.object({\n  text: z.string().min(1).max(500),\n  // themeId removed - ThematicUnit model archived\n  unitPlanId: z.number().int().optional(),\n  status: z.enum(['active', 'completed', 'abandoned']).default('active'),\n});\n\nconst studentGoalUpdateSchema = z.object({\n  text: z.string().min(1).max(500).optional(),\n  // themeId removed - ThematicUnit model archived\n  unitPlanId: z.number().int().optional(),\n  status: z.enum(['active', 'completed', 'abandoned']).optional(),\n});\n\nconst studentReflectionCreateSchema = z.object({\n  date: z.string().datetime().optional(),\n  text: z.string().max(1000).optional(),\n  content: z.string().max(1000).optional(),\n  emoji: z.string().max(10).optional(),\n  voicePath: z.string().max(500).optional(),\n  // themeId removed - ThematicUnit model archived\n  unitPlanId: z.number().int().optional(),\n});\n\n// Get all students for the authenticated teacher\nrouter.get('/', auditLoggers.studentView, async (req: Request, res, next) => {\n  try {\n    const userId = req.user?.id;\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const students = await prisma.student.findMany({\n      where: { userId: userId },\n      include: {\n        goals: true,\n        reflections: true,\n        _count: {\n          select: {\n            artifacts: true,\n            reflections: true,\n            parentSummaries: true,\n          },\n        },\n      },\n      orderBy: [{ grade: 'asc' }, { lastName: 'asc' }, { firstName: 'asc' }],\n    });\n\n    // Add backward compatibility for name field and mask sensitive data\n    const studentsWithLegacy = students.map((student) => ({\n      ...student,\n      name:\n        student.firstName && student.lastName\n          ? `${student.firstName} ${student.lastName}`\n          : 'Unnamed Student',\n      // Remove any accidentally included sensitive fields\n      createdAt: undefined,\n      updatedAt: undefined,\n    }));\n\n    res.json(studentsWithLegacy);\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Get a specific student\nrouter.get('/:id', auditLoggers.studentView, async (req: Request, res, next) => {\n  try {\n    const userId = req.user?.id;\n    const studentId = parseInt(req.params.id);\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n      include: {\n        goals: true,\n        reflections: true,\n        artifacts: {\n          orderBy: { createdAt: 'desc' },\n          take: 10,\n        },\n        parentSummaries: {\n          orderBy: { createdAt: 'desc' },\n          take: 5,\n        },\n      },\n    });\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    // Add backward compatibility for name field and mask sensitive data\n    const studentWithLegacy = {\n      ...student,\n      name:\n        student.firstName && student.lastName\n          ? `${student.firstName} ${student.lastName}`\n          : 'Unnamed Student',\n      // Remove any accidentally included sensitive fields\n      createdAt: undefined,\n      updatedAt: undefined,\n    };\n\n    res.json(studentWithLegacy);\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Create a new student\nrouter.post(\n  '/',\n  validate(studentCreateSchema),\n  auditLoggers.studentCreate,\n  async (req: Request, res, next) => {\n    try {\n      const userId = req.user?.id;\n\n      if (!userId) {\n        return res.status(401).json({ error: 'Unauthorized' });\n      }\n\n      const { firstName, lastName, grade, name } = req.body;\n\n      // Handle both new and legacy formats\n      let studentData;\n      if (firstName && lastName && grade !== undefined) {\n        // New parent communication format\n        studentData = {\n          firstName,\n          lastName,\n          grade,\n          userId: userId,\n        };\n      } else if (name) {\n        // Legacy format - extract first and last name from full name\n        const nameParts = name.trim().split(' ');\n        const firstNamePart = nameParts[0] || 'Unknown';\n        const lastNamePart = nameParts.slice(1).join(' ') || 'Student';\n\n        studentData = {\n          firstName: firstNamePart,\n          lastName: lastNamePart,\n          grade: 1, // Default grade for legacy students\n          userId: userId,\n        };\n      } else {\n        return res.status(400).json({ error: 'Invalid student data' });\n      }\n\n      const student = await prisma.student.create({\n        data: studentData,\n        include: {\n          goals: true,\n          reflections: true,\n        },\n      });\n\n      // Add backward compatibility for name field\n      const studentWithLegacy = {\n        ...student,\n        name: `${student.firstName} ${student.lastName}`,\n      };\n\n      res.status(201).json(studentWithLegacy);\n    } catch (err) {\n      next(err);\n    }\n  },\n);\n\n// Update a student\nrouter.put(\n  '/:id',\n  validate(studentUpdateSchema),\n  auditLoggers.studentUpdate,\n  async (req: Request, res, next) => {\n    try {\n      const userId = req.user?.id;\n      const studentId = parseInt(req.params.id);\n\n      if (!userId) {\n        return res.status(401).json({ error: 'Unauthorized' });\n      }\n\n      // Verify the student belongs to this teacher\n      const existingStudent = await prisma.student.findFirst({\n        where: {\n          id: studentId,\n          userId: userId,\n        },\n      });\n\n      if (!existingStudent) {\n        return res.status(404).json({ error: 'Student not found' });\n      }\n\n      const { firstName, lastName, grade, name } = req.body;\n\n      const updateData: Record<string, unknown> = {};\n      if (firstName !== undefined) updateData.firstName = firstName;\n      if (lastName !== undefined) updateData.lastName = lastName;\n      if (grade !== undefined) updateData.grade = grade;\n\n      // Handle legacy name field\n      if (name !== undefined) {\n        const nameParts = name.trim().split(' ');\n        updateData.firstName = nameParts[0] || 'Unknown';\n        updateData.lastName = nameParts.slice(1).join(' ') || 'Student';\n      }\n\n      const student = await prisma.student.update({\n        where: { id: studentId },\n        data: updateData,\n        include: {\n          goals: true,\n          reflections: true,\n        },\n      });\n\n      // Add backward compatibility for name field\n      const studentWithLegacy = {\n        ...student,\n        name: `${student.firstName} ${student.lastName}`,\n      };\n\n      res.json(studentWithLegacy);\n    } catch (err) {\n      next(err);\n    }\n  },\n);\n\n// Delete a student\nrouter.delete('/:id', auditLoggers.studentDelete, async (req: Request, res, next) => {\n  try {\n    const userId = req.user?.id;\n    const studentId = parseInt(req.params.id);\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    // Verify the student belongs to this teacher\n    const existingStudent = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n    });\n\n    if (!existingStudent) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    // Delete related data in a transaction for data integrity\n    await prisma.$transaction(\n      async (tx) => {\n        // Delete in dependency order\n        await tx.studentArtifact.deleteMany({ where: { studentId } });\n        await tx.studentReflection.deleteMany({ where: { studentId } });\n        await tx.studentGoal.deleteMany({ where: { studentId } });\n        await tx.parentSummary.deleteMany({ where: { studentId } });\n\n        // Finally delete the student\n        await tx.student.delete({ where: { id: studentId } });\n      },\n      {\n        // Set a timeout for the transaction\n        timeout: 10000, // 10 seconds\n      },\n    );\n\n    res.status(204).send();\n  } catch (err) {\n    next(err);\n  }\n});\n\n// Student goals routes\nrouter.get('/:id/goals', async (req: Request, res, next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n    const student = await prisma.student.findFirst({\n      where: {\n        id: Number(req.params.id),\n        userId,\n      },\n    });\n    if (!student) return res.status(404).json({ error: 'Student not found' });\n\n    const goals = await prisma.studentGoal.findMany({\n      where: { studentId: Number(req.params.id) },\n      // theme removed - ThematicUnit model archived\n      orderBy: { createdAt: 'desc' },\n    });\n    res.json(goals);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post('/:id/goals', validate(studentGoalCreateSchema), async (req: Request, res, next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n    const student = await prisma.student.findFirst({\n      where: {\n        id: Number(req.params.id),\n        userId,\n      },\n    });\n    if (!student) return res.status(404).json({ error: 'Student not found' });\n\n    const goal = await prisma.studentGoal.create({\n      data: {\n        studentId: Number(req.params.id),\n        text: req.body.text,\n        unitPlanId: req.body.unitPlanId || null,\n        status: req.body.status || 'active',\n      },\n      // theme removed - ThematicUnit model archived\n    });\n    res.status(201).json(goal);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.patch(\n  '/:id/goals/:goalId',\n  validate(studentGoalUpdateSchema),\n  async (req: Request, res, next) => {\n    try {\n      const userId = req.user?.id || 0;\n      if (!userId) {\n        return res.status(401).json({ error: 'Unauthorized' });\n      }\n      const student = await prisma.student.findFirst({\n        where: {\n          id: Number(req.params.id),\n          userId,\n        },\n      });\n      if (!student) return res.status(404).json({ error: 'Student not found' });\n\n      const goal = await prisma.studentGoal.update({\n        where: {\n          id: Number(req.params.goalId),\n          studentId: Number(req.params.id),\n        },\n        data: {\n          text: req.body.text,\n          status: req.body.status,\n          unitPlanId: req.body.unitPlanId,\n        },\n        // theme removed - ThematicUnit model archived\n      });\n      res.json(goal);\n    } catch (err) {\n      if (err instanceof Prisma.PrismaClientKnownRequestError && err.code === 'P2025') {\n        return res.status(404).json({ error: 'Goal not found' });\n      }\n      next(err);\n    }\n  },\n);\n\nrouter.delete('/:id/goals/:goalId', async (req: Request, res, next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n    const student = await prisma.student.findFirst({\n      where: {\n        id: Number(req.params.id),\n        userId,\n      },\n    });\n    if (!student) return res.status(404).json({ error: 'Student not found' });\n\n    await prisma.studentGoal.delete({\n      where: {\n        id: Number(req.params.goalId),\n        studentId: Number(req.params.id),\n      },\n    });\n    res.status(204).end();\n  } catch (err) {\n    if (err instanceof Prisma.PrismaClientKnownRequestError && err.code === 'P2025') {\n      return res.status(404).json({ error: 'Goal not found' });\n    }\n    next(err);\n  }\n});\n\n// Student reflections routes\nrouter.get('/:id/reflections', async (req: Request, res, next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n    const student = await prisma.student.findFirst({\n      where: {\n        id: Number(req.params.id),\n        userId,\n      },\n    });\n    if (!student) return res.status(404).json({ error: 'Student not found' });\n\n    const reflections = await prisma.studentReflection.findMany({\n      where: { studentId: Number(req.params.id) },\n      // theme removed - ThematicUnit model archived\n      orderBy: { createdAt: 'desc' },\n    });\n    res.json(reflections);\n  } catch (err) {\n    next(err);\n  }\n});\n\nrouter.post(\n  '/:id/reflections',\n  validate(studentReflectionCreateSchema),\n  async (req: Request, res, next) => {\n    try {\n      const userId = req.user?.id || 0;\n      if (!userId) {\n        return res.status(401).json({ error: 'Unauthorized' });\n      }\n      const student = await prisma.student.findFirst({\n        where: {\n          id: Number(req.params.id),\n          userId,\n        },\n      });\n      if (!student) return res.status(404).json({ error: 'Student not found' });\n\n      const reflection = await prisma.studentReflection.create({\n        data: {\n          studentId: Number(req.params.id),\n          content: req.body.content || req.body.text || null,\n          date: req.body.date ? new Date(req.body.date) : new Date(),\n          unitPlanId: req.body.unitPlanId || null,\n        },\n        // theme removed - ThematicUnit model archived\n      });\n      res.status(201).json(reflection);\n    } catch (err) {\n      next(err);\n    }\n  },\n);\n\nrouter.delete('/:id/reflections/:reflectionId', async (req: Request, res, next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n    const student = await prisma.student.findFirst({\n      where: {\n        id: Number(req.params.id),\n        userId,\n      },\n    });\n    if (!student) return res.status(404).json({ error: 'Student not found' });\n\n    await prisma.studentReflection.delete({\n      where: {\n        id: Number(req.params.reflectionId),\n        studentId: Number(req.params.id),\n      },\n    });\n    res.status(204).end();\n  } catch (err) {\n    if (err instanceof Prisma.PrismaClientKnownRequestError && err.code === 'P2025') {\n      return res.status(404).json({ error: 'Reflection not found' });\n    }\n    next(err);\n  }\n});\n\n// Get student progress summary\nrouter.get('/:id/progress', auditLoggers.studentView, async (req: Request, res, next) => {\n  try {\n    const userId = req.user?.id;\n    const studentId = parseInt(req.params.id);\n\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n    });\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    // Assessment functionality removed\n\n    res.json({\n      student,\n      progress: {\n        totalAssessments: 0,\n        averageScore: null,\n        assessmentsByType: {},\n        artifactCount: await prisma.studentArtifact.count({ where: { studentId } }),\n        reflectionCount: await prisma.studentReflection.count({ where: { studentId } }),\n      },\n    });\n  } catch (err) {\n    next(err);\n  }\n});\n\nexport default router;\n"],"version":3}