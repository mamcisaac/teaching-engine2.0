{"version":3,"names":["cov_2lnm8t6zot","actualCoverage","customEmailHandler","s","setEmailHandler","handler","f","clearEmailHandler","sendEmail","to","subject","text","html","attachment","b","console","log","EmailService","constructor","_subject","_body","sendBulkEmails","recipients","length","emailService"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/emailService.ts"],"sourcesContent":["// Stub for EmailService to fix missing import\nexport interface EmailAttachment {\n  filename: string;\n  content: Buffer;\n}\n\nlet customEmailHandler:\n  | ((\n      to: string,\n      subject: string,\n      text: string,\n      html?: string,\n      attachment?: EmailAttachment,\n    ) => Promise<void>)\n  | null = null;\n\nexport function setEmailHandler(\n  handler: (\n    to: string,\n    subject: string,\n    text: string,\n    html?: string,\n    attachment?: EmailAttachment,\n  ) => Promise<void>,\n) {\n  customEmailHandler = handler;\n}\n\nexport function clearEmailHandler() {\n  customEmailHandler = null;\n}\n\nexport async function sendEmail(\n  to: string,\n  subject: string,\n  text: string,\n  html?: string,\n  attachment?: EmailAttachment,\n): Promise<void> {\n  if (customEmailHandler) {\n    return customEmailHandler(to, subject, text, html, attachment);\n  }\n\n  // Stub implementation\n  console.log(`Email stub: Would send email to ${to} with subject: ${subject}`);\n}\n\nexport class EmailService {\n  constructor() {}\n\n  async sendEmail(to: string, _subject: string, _body: string): Promise<void> {\n    // Stub implementation\n    console.log(`Email stub: Would send email to ${to} with subject: ${_subject}`);\n  }\n\n  async sendBulkEmails(recipients: string[], _subject: string, _body: string): Promise<void> {\n    // Stub implementation\n    console.log(`Email stub: Would send bulk emails to ${recipients.length} recipients`);\n  }\n}\n\n// Export singleton instance\nexport const emailService = new EmailService();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAgDE;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AA1CF,IAAIE,kBAAkB;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,OAQX,IAAI;AAEf,OAAM,SAAUC,eAAeA,CAC7BC,OAMkB;EAAA;EAAAL,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAG,CAAA;EAElBD,kBAAkB,GAAGG,OAAO;AAC9B;AAEA,OAAM,SAAUE,iBAAiBA,CAAA;EAAA;EAAAP,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAG,CAAA;EAC/BD,kBAAkB,GAAG,IAAI;AAC3B;AAEA,OAAO,eAAeM,SAASA,CAC7BC,EAAU,EACVC,OAAe,EACfC,IAAY,EACZC,IAAa,EACbC,UAA4B;EAAA;EAAAb,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAG,CAAA;EAE5B,IAAID,kBAAkB,EAAE;IAAA;IAAAF,cAAA,GAAAc,CAAA;IAAAd,cAAA,GAAAG,CAAA;IACtB,OAAOD,kBAAkB,CAACO,EAAE,EAAEC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAEC,UAAU,CAAC;EAChE,CAAC;EAAA;EAAA;IAAAb,cAAA,GAAAc,CAAA;EAAA;EAED;EAAAd,cAAA,GAAAG,CAAA;EACAY,OAAO,CAACC,GAAG,CAAC,mCAAmCP,EAAE,kBAAkBC,OAAO,EAAE,CAAC;AAC/E;AAEA,OAAM,MAAOO,YAAY;EACvBC,YAAA;IAAA;IAAAlB,cAAA,GAAAM,CAAA;EAAe;EAEf,MAAME,SAASA,CAACC,EAAU,EAAEU,QAAgB,EAAEC,KAAa;IAAA;IAAApB,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAG,CAAA;IACzD;IACAY,OAAO,CAACC,GAAG,CAAC,mCAAmCP,EAAE,kBAAkBU,QAAQ,EAAE,CAAC;EAChF;EAEA,MAAME,cAAcA,CAACC,UAAoB,EAAEH,QAAgB,EAAEC,KAAa;IAAA;IAAApB,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAG,CAAA;IACxE;IACAY,OAAO,CAACC,GAAG,CAAC,yCAAyCM,UAAU,CAACC,MAAM,aAAa,CAAC;EACtF;;AAGF;AACA,OAAO,MAAMC,YAAY;AAAA;AAAA,CAAAxB,cAAA,GAAAG,CAAA,OAAG,IAAIc,YAAY,EAAE","ignoreList":[]}