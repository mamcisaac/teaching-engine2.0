{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/authenticate.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/authenticate.ts"],"sourcesContent":["/**\n * Authentication Middleware\n * Extracts and validates JWT tokens from requests\n */\n\nimport { Request, Response, NextFunction } from 'express';\nimport jwt, { JwtPayload } from 'jsonwebtoken';\nimport logger from '@/logger';\n\n// Express Request type is extended in types/express.d.ts\n\nexport function authenticate(req: Request, res: Response, next: NextFunction): void {\n  try {\n    // First try to get token from httpOnly cookie\n    let token = req.cookies?.authToken;\n\n    // Debug logging (temporary)\n    if (process.env.NODE_ENV === 'development') {\n      logger.debug('Auth Debug:', {\n        hasCookies: !!req.cookies,\n        hasAuthToken: !!req.cookies?.authToken,\n        authHeader: req.headers['authorization'] ? 'present' : 'missing',\n        url: req.url,\n      });\n    }\n\n    // Fallback to Authorization header for backward compatibility\n    if (!token) {\n      const authHeader = req.headers['authorization'];\n      if (authHeader && authHeader.startsWith('Bearer ')) {\n        token = authHeader.split(' ')[1];\n      }\n    }\n\n    if (!token) {\n      res.status(401).json({ error: 'Authentication required' });\n      return;\n    }\n\n    if (token.length > 1000) {\n      // Prevent extremely long tokens\n      res.status(401).json({ error: 'Invalid token format' });\n      return;\n    }\n\n    const secret = process.env.JWT_SECRET;\n    if (!secret) {\n      logger.error('CRITICAL: JWT_SECRET environment variable not configured');\n      res.status(500).json({ error: 'Server configuration error' });\n      return;\n    }\n\n    const decoded = jwt.verify(token, secret, {\n      algorithms: ['HS256'], // Explicitly specify allowed algorithms\n      maxAge: '7d', // Maximum token age\n    }) as JwtPayload;\n\n    if (!decoded?.userId || !decoded?.email || !decoded?.iat) {\n      res.status(403).json({ error: 'Invalid token payload' });\n      return;\n    }\n\n    // Check token age (extra protection)\n    const now = Math.floor(Date.now() / 1000);\n    const maxAge = 7 * 24 * 60 * 60; // 7 days in seconds\n    if (now - decoded.iat > maxAge) {\n      res.status(403).json({ error: 'Token expired' });\n      return;\n    }\n\n    // Attach user information to request\n    req.user = {\n      id: Number(decoded.userId),\n      userId: decoded.userId,\n      email: decoded.email,\n    };\n\n    next();\n  } catch (err) {\n    if (err instanceof jwt.TokenExpiredError) {\n      res.status(403).json({ error: 'Token expired' });\n    } else if (err instanceof jwt.JsonWebTokenError) {\n      res.status(403).json({ error: 'Invalid token' });\n    } else {\n      logger.error('JWT verification error:', err);\n      res.status(403).json({ error: 'Token verification failed' });\n    }\n  }\n}\n"],"version":3}