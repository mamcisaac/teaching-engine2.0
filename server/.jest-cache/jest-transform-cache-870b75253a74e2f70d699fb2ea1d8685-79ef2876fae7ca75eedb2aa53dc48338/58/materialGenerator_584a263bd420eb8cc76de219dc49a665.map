{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/materialGenerator.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/materialGenerator.ts"],"sourcesContent":["// import { prisma } from '../prisma'; // Unused import\n\nexport function extractMaterials(note: string): string[] {\n  const items = new Set<string>();\n  const lines = note.split(/\\r?\\n/);\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    const header = line.match(\n      /^(?:additional\\s+|extra\\s+)?(?:materials?|supplies)(?:\\s+needed)?:?\\s*(.*)/i,\n    );\n    if (header) {\n      const rest = header[1];\n      if (rest) {\n        rest\n          .split(/[;,]/)\n          .map((s) => s.trim())\n          .filter(Boolean)\n          .forEach((m) => items.add(m));\n      }\n      // Look for list items after the header\n      for (let j = i + 1; j < lines.length; j++) {\n        const next = lines[j].trim();\n        if (/^[-*]\\s+/.test(next)) {\n          next\n            .replace(/^[-*]\\s+/, '')\n            .split(/[;,]/)\n            .map((s) => s.trim())\n            .filter(Boolean)\n            .forEach((m) => items.add(m));\n        } else if (!next) {\n          continue;\n        } else {\n          break;\n        }\n      }\n      // Don't break - continue looking for more material sections\n    }\n  }\n  return Array.from(items);\n}\n\n/**\n * Generate a list of materials needed for the given week by scanning\n * activity notes for lines beginning with \"Materials:\".\n */\nexport async function generateMaterialList(_weekStart: string): Promise<string[]> {\n  // DISABLED: Legacy function that used lessonPlan/Activity models\n  // TODO: Reimplement using ETFO lesson plans and daybook entries\n  console.warn('generateMaterialList is disabled - legacy models removed');\n  return [];\n}\n\n/**\n * Update or create the material list record for the given week.\n */\nexport async function updateMaterialList(weekStart: string): Promise<void> {\n  const items = await generateMaterialList(weekStart);\n  \n  // DISABLED: MaterialList model has been archived\n  // TODO: Implement using ETFO UnitPlanResource and ETFOLessonPlanResource models\n  console.warn(`updateMaterialList is disabled - MaterialList model archived. Items for ${weekStart}:`, items);\n}\n\nexport interface ActivityMaterials {\n  day: number;\n  activityId: number;\n  title: string;\n  materials: string[];\n}\n\nexport async function generateMaterialDetails(_weekStart: string): Promise<ActivityMaterials[]> {\n  // DISABLED: Legacy function that used lessonPlan/Activity models\n  // TODO: Reimplement using ETFO lesson plans and daybook entries\n  console.warn('generateMaterialDetails is disabled - legacy models removed');\n  return [];\n}\n\nexport async function zipWeeklyPrintables(_weekStart: string): Promise<Buffer> {\n  // DISABLED: Legacy function that used lessonPlan/Activity models\n  // TODO: Reimplement using ETFO lesson plans and resources\n  console.warn('zipWeeklyPrintables is disabled - legacy models removed');\n  return Buffer.alloc(0);\n}\n"],"version":3}