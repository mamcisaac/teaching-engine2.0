{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/aiDraftService.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/aiDraftService.ts"],"sourcesContent":["import OpenAI from 'openai';\nimport { z } from 'zod';\nimport { config } from 'dotenv';\nimport { aiPromptTemplateService, PromptContext, CurriculumExpectation } from './aiPromptTemplateService';\n\n// Load environment variables\nconfig();\n\n// Lazy initialization of OpenAI client\nlet openai: OpenAI | null = null;\n\nfunction getOpenAIClient(): OpenAI | null {\n  if (!openai && process.env.OPENAI_API_KEY) {\n    openai = new OpenAI({\n      apiKey: process.env.OPENAI_API_KEY,\n    });\n  }\n  return openai;\n}\n\n// Response schemas for validation\nconst LongRangePlanDraftSchema = z.object({\n  units: z.array(z.object({\n    title: z.string(),\n    term: z.string(),\n    expectedDurationWeeks: z.number(),\n    bigIdeas: z.array(z.string()),\n    linkedExpectations: z.array(z.object({\n      code: z.string(),\n      type: z.enum(['overall', 'specific']),\n    })),\n  })),\n});\n\nconst UnitPlanDraftSchema = z.object({\n  title: z.string(),\n  bigIdeas: z.array(z.string()),\n  essentialQuestions: z.array(z.string()),\n  learningGoals: z.array(z.string()),\n  successCriteria: z.array(z.string()),\n  assessmentFor: z.array(z.string()),\n  assessmentAs: z.array(z.string()),\n  assessmentOf: z.array(z.string()),\n  crossCurricularLinks: z.array(z.string()),\n  timelineEstimateWeeks: z.number(),\n});\n\nconst LessonPlanDraftSchema = z.object({\n  title: z.string(),\n  learningGoals: z.array(z.string()),\n  successCriteria: z.array(z.string()),\n  mindsOnDescription: z.string(),\n  mindsOnDuration: z.number(),\n  actionDescription: z.string(),\n  actionDuration: z.number(),\n  consolidationDescription: z.string(),\n  consolidationDuration: z.number(),\n  resources: z.array(z.string()),\n  accommodations: z.string(),\n  assessmentStrategy: z.string(),\n});\n\nconst DaybookDraftSchema = z.object({\n  weeklyBigIdeas: z.array(z.string()),\n  dailyReflectionPrompts: z.array(z.string()),\n  substituteNotes: z.string(),\n  weeklyInsights: z.string(),\n});\n\n// Re-export types from prompt template service for compatibility\nexport type { CurriculumExpectation, PromptContext } from './aiPromptTemplateService';\n\nexport interface LongRangePlanDraftInput {\n  expectations: CurriculumExpectation[];\n  subject: string;\n  grade: number;\n  academicYear: string;\n  termStructure: 'semester' | 'trimester' | 'quarterly';\n}\n\nexport interface UnitPlanDraftInput {\n  unitTitle: string;\n  subject: string;\n  grade: number;\n  expectations: CurriculumExpectation[];\n  longRangePlanContext?: string;\n}\n\nexport interface LessonPlanDraftInput {\n  unitTitle: string;\n  subject: string;\n  grade: number;\n  expectations: CurriculumExpectation[];\n  unitContext?: string;\n  duration: number;\n  lessonNumber?: number;\n}\n\nexport interface DaybookDraftInput {\n  lessons: Array<{\n    title: string;\n    subject: string;\n    duration: number;\n    learningGoals: string[];\n  }>;\n  weekStartDate: string;\n  specialEvents?: string[];\n}\n\n// AI Draft Generation Functions\n\nexport async function generateLongRangePlanDraft(input: LongRangePlanDraftInput) {\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      units: []\n    };\n  }\n\n  try {\n    // Use the new prompt template service\n    const promptContext: PromptContext = {\n      grade: input.grade,\n      subject: input.subject,\n      academicYear: input.academicYear,\n      term: input.termStructure\n    };\n\n    const { prompt, systemPrompt, temperature } = aiPromptTemplateService.generateLongRangePlanPrompt(\n      promptContext,\n      input.expectations\n    );\n\n    const response = await client.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: prompt }\n      ],\n      temperature,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    const result = LongRangePlanDraftSchema.parse(parsed);\n    \n    // Record successful usage\n    aiPromptTemplateService.recordPromptUsage('lrp-v2.0', true);\n    \n    return result;\n  } catch (error) {\n    console.error('Error generating long-range plan draft:', error);\n    aiPromptTemplateService.recordPromptUsage('lrp-v2.0', false, error instanceof Error ? error.message : 'Unknown error');\n    throw new Error('Failed to generate long-range plan draft');\n  }\n}\n\nexport async function generateUnitPlanDraft(input: UnitPlanDraftInput) {\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      title: input.unitTitle || 'Generated Unit Plan',\n      bigIdeas: [],\n      essentialQuestions: [],\n      learningGoals: [],\n      successCriteria: [],\n      assessmentFor: [],\n      assessmentAs: [],\n      assessmentOf: [],\n      crossCurricularLinks: [],\n      timelineEstimateWeeks: 0\n    };\n  }\n\n  try {\n    // Use the new prompt template service\n    const promptContext: PromptContext = {\n      grade: input.grade,\n      subject: input.subject\n    };\n\n    const { prompt, systemPrompt, temperature } = aiPromptTemplateService.generateUnitPlanPrompt(\n      promptContext,\n      input.unitTitle,\n      input.expectations,\n      3, // default 3 weeks\n      input.longRangePlanContext\n    );\n\n    const response = await client.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: prompt }\n      ],\n      temperature,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    const result = UnitPlanDraftSchema.parse(parsed);\n    \n    // Record successful usage\n    aiPromptTemplateService.recordPromptUsage('up-v2.0', true);\n    \n    return result;\n  } catch (error) {\n    console.error('Error generating unit plan draft:', error);\n    aiPromptTemplateService.recordPromptUsage('up-v2.0', false, error instanceof Error ? error.message : 'Unknown error');\n    throw new Error('Failed to generate unit plan draft');\n  }\n}\n\nexport async function generateLessonPlanDraft(input: LessonPlanDraftInput) {\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      title: input.unitTitle || 'Generated Lesson Plan',\n      learningGoals: [],\n      successCriteria: [],\n      mindsOnDescription: '',\n      mindsOnDuration: 0,\n      actionDescription: '',\n      actionDuration: 0,\n      consolidationDescription: '',\n      consolidationDuration: 0,\n      resources: [],\n      accommodations: '',\n      assessmentStrategy: ''\n    };\n  }\n\n  try {\n    // Use the new prompt template service\n    const promptContext: PromptContext = {\n      grade: input.grade,\n      subject: input.subject\n    };\n\n    const { prompt, systemPrompt, temperature } = aiPromptTemplateService.generateLessonPlanPrompt(\n      promptContext,\n      input.unitTitle,\n      input.expectations,\n      input.duration,\n      input.unitContext,\n      input.lessonNumber\n    );\n\n    const response = await client.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: prompt }\n      ],\n      temperature,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    const result = LessonPlanDraftSchema.parse(parsed);\n    \n    // Record successful usage\n    aiPromptTemplateService.recordPromptUsage('lp-v2.0', true);\n    \n    return result;\n  } catch (error) {\n    console.error('Error generating lesson plan draft:', error);\n    aiPromptTemplateService.recordPromptUsage('lp-v2.0', false, error instanceof Error ? error.message : 'Unknown error');\n    throw new Error('Failed to generate lesson plan draft');\n  }\n}\n\nexport async function generateDaybookDraft(input: DaybookDraftInput) {\n  const prompt = `\nCreate a weekly daybook summary and substitute plan for the week starting ${input.weekStartDate}.\n\nScheduled lessons:\n${input.lessons.map(lesson => \n  `- ${lesson.title} (${lesson.subject}, ${lesson.duration} min): ${lesson.learningGoals.join(', ')}`\n).join('\\n')}\n\n${input.specialEvents ? `Special events this week: ${input.specialEvents.join(', ')}` : ''}\n\nGenerate:\n- Weekly big ideas that connect the lessons\n- Daily reflection prompts for the teacher\n- Clear substitute teacher notes\n- Weekly insights for planning ahead\n\nReturn a JSON object with this structure:\n{\n  \"weeklyBigIdeas\": [\"Big idea connecting the week's learning\"],\n  \"dailyReflectionPrompts\": [\"What went well?\", \"What challenges arose?\"],\n  \"substituteNotes\": \"Clear, step-by-step instructions for a substitute teacher\",\n  \"weeklyInsights\": \"Observations and suggestions for next week\"\n}\n\nFocus on practical, actionable content that supports both teaching and reflection.\n  `;\n\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty draft');\n    return {\n      weeklyBigIdeas: [],\n      dailyReflectionPrompts: [],\n      substituteNotes: '',\n      weeklyInsights: ''\n    };\n  }\n\n  try {\n    const response = await openai.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: 'You are a supportive mentor teacher helping with weekly planning and reflection.' },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.3,\n    });\n\n    const content = response.choices[0]?.message?.content;\n    if (!content) throw new Error('No response from OpenAI');\n\n    const parsed = JSON.parse(content);\n    return DaybookDraftSchema.parse(parsed);\n  } catch (error) {\n    console.error('Error generating daybook draft:', error);\n    throw new Error('Failed to generate daybook draft');\n  }\n}\n\n// Helper function to generate suggestions for existing content\nexport async function generatePlanSuggestions(\n  type: 'long-range' | 'unit' | 'lesson' | 'daybook',\n  existingContent: string,\n  context?: string\n) {\n  const prompt = `\nAs an expert educator, provide 3-5 specific suggestions to improve this ${type} plan:\n\nCurrent content:\n${existingContent}\n\n${context ? `Additional context: ${context}` : ''}\n\nFocus on:\n- Alignment with curriculum expectations\n- Age-appropriate activities and language\n- Assessment strategies\n- Engagement and differentiation\n- ETFO best practices\n\nProvide practical, actionable suggestions.\n  `;\n\n  const client = getOpenAIClient();\n  if (!client) {\n    console.warn('OpenAI API key not configured - returning empty suggestions');\n    return [];\n  }\n\n  try {\n    const response = await openai.chat.completions.create({\n      model: 'gpt-4',\n      messages: [\n        { role: 'system', content: 'You are an experienced teacher mentor providing constructive feedback on lesson plans.' },\n        { role: 'user', content: prompt }\n      ],\n      temperature: 0.4,\n    });\n\n    return response.choices[0]?.message?.content || '';\n  } catch (error) {\n    console.error('Error generating plan suggestions:', error);\n    throw new Error('Failed to generate suggestions');\n  }\n}"],"version":3}