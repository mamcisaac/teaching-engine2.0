6976a69b61dfae4f8fb7cba67d2ea2f1
/* istanbul ignore next */
function cov_1gcg8x6e85() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/authenticate.ts";
  var hash = "add9be9dfec604dcf86b4783f9c081244bd81583";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/authenticate.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "1": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 42
        }
      },
      "2": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "3": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 19,
          column: 15
        }
      },
      "4": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "5": {
        start: {
          line: 23,
          column: 31
        },
        end: {
          line: 23,
          column: 59
        }
      },
      "6": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 26,
          column: 13
        }
      },
      "7": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 49
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "9": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 71
        }
      },
      "10": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 19
        }
      },
      "11": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "12": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 68
        }
      },
      "13": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "14": {
        start: {
          line: 37,
          column: 23
        },
        end: {
          line: 37,
          column: 45
        }
      },
      "15": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "16": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 85
        }
      },
      "17": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 74
        }
      },
      "18": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 19
        }
      },
      "19": {
        start: {
          line: 43,
          column: 24
        },
        end: {
          line: 46,
          column: 10
        }
      },
      "20": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "21": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 69
        }
      },
      "22": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "23": {
        start: {
          line: 52,
          column: 20
        },
        end: {
          line: 52,
          column: 49
        }
      },
      "24": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "25": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "26": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 61
        }
      },
      "27": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 19
        }
      },
      "28": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "29": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "30": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "31": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 61
        }
      },
      "32": {
        start: {
          line: 70,
          column: 13
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "33": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 61
        }
      },
      "34": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 57
        }
      },
      "35": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 73
        }
      }
    },
    fnMap: {
      "0": {
        name: "authenticate",
        decl: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 28
          }
        },
        loc: {
          start: {
            line: 8,
            column: 45
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 8
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 17,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 59
          },
          end: {
            line: 17,
            column: 68
          }
        }, {
          start: {
            line: 17,
            column: 71
          },
          end: {
            line: 17,
            column: 80
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 26,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 26,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 24,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 24,
            column: 26
          }
        }, {
          start: {
            line: 24,
            column: 30
          },
          end: {
            line: 24,
            column: 62
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 28
          }
        }, {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 47
          }
        }, {
          start: {
            line: 47,
            column: 51
          },
          end: {
            line: 47,
            column: 64
          }
        }],
        line: 47
      },
      "10": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "11": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 76,
            column: 9
          }
        }],
        line: 67
      },
      "12": {
        loc: {
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: 73,
            column: 13
          },
          end: {
            line: 76,
            column: 9
          }
        }],
        line: 70
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/authenticate.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/authenticate.ts"],
      sourcesContent: ["/**\n * Authentication Middleware\n * Extracts and validates JWT tokens from requests\n */\n\nimport { Request, Response, NextFunction } from 'express';\nimport jwt, { JwtPayload } from 'jsonwebtoken';\nimport logger from '@/logger';\n\n// Express Request type is extended in types/express.d.ts\n\nexport function authenticate(req: Request, res: Response, next: NextFunction): void {\n  try {\n    // First try to get token from httpOnly cookie\n    let token = req.cookies?.authToken;\n\n    // Debug logging (temporary)\n    if (process.env.NODE_ENV === 'development') {\n      logger.debug('Auth Debug:', {\n        hasCookies: !!req.cookies,\n        hasAuthToken: !!req.cookies?.authToken,\n        authHeader: req.headers['authorization'] ? 'present' : 'missing',\n        url: req.url,\n      });\n    }\n\n    // Fallback to Authorization header for backward compatibility\n    if (!token) {\n      const authHeader = req.headers['authorization'];\n      if (authHeader && authHeader.startsWith('Bearer ')) {\n        token = authHeader.split(' ')[1];\n      }\n    }\n\n    if (!token) {\n      res.status(401).json({ error: 'Authentication required' });\n      return;\n    }\n\n    if (token.length > 1000) {\n      // Prevent extremely long tokens\n      res.status(401).json({ error: 'Invalid token format' });\n      return;\n    }\n\n    const secret = process.env.JWT_SECRET;\n    if (!secret) {\n      logger.error('CRITICAL: JWT_SECRET environment variable not configured');\n      res.status(500).json({ error: 'Server configuration error' });\n      return;\n    }\n\n    const decoded = jwt.verify(token, secret, {\n      algorithms: ['HS256'], // Explicitly specify allowed algorithms\n      maxAge: '7d', // Maximum token age\n    }) as JwtPayload;\n\n    if (!decoded?.userId || !decoded?.email || !decoded?.iat) {\n      res.status(403).json({ error: 'Invalid token payload' });\n      return;\n    }\n\n    // Check token age (extra protection)\n    const now = Math.floor(Date.now() / 1000);\n    const maxAge = 7 * 24 * 60 * 60; // 7 days in seconds\n    if (now - decoded.iat > maxAge) {\n      res.status(403).json({ error: 'Token expired' });\n      return;\n    }\n\n    // Attach user information to request\n    req.user = {\n      id: Number(decoded.userId),\n      userId: decoded.userId,\n      email: decoded.email,\n    };\n\n    next();\n  } catch (err) {\n    if (err instanceof jwt.TokenExpiredError) {\n      res.status(403).json({ error: 'Token expired' });\n    } else if (err instanceof jwt.JsonWebTokenError) {\n      res.status(403).json({ error: 'Invalid token' });\n    } else {\n      logger.error('JWT verification error:', err);\n      res.status(403).json({ error: 'Token verification failed' });\n    }\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "add9be9dfec604dcf86b4783f9c081244bd81583"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1gcg8x6e85 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1gcg8x6e85();
/**
 * Authentication Middleware
 * Extracts and validates JWT tokens from requests
 */
import jwt from 'jsonwebtoken';
import logger from '@/logger';
// Express Request type is extended in types/express.d.ts
export function authenticate(req, res, next) {
  /* istanbul ignore next */
  cov_1gcg8x6e85().f[0]++;
  cov_1gcg8x6e85().s[0]++;
  try {
    // First try to get token from httpOnly cookie
    let token =
    /* istanbul ignore next */
    (cov_1gcg8x6e85().s[1]++, req.cookies?.authToken);
    // Debug logging (temporary)
    /* istanbul ignore next */
    cov_1gcg8x6e85().s[2]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1gcg8x6e85().b[0][0]++;
      cov_1gcg8x6e85().s[3]++;
      logger.debug('Auth Debug:', {
        hasCookies: !!req.cookies,
        hasAuthToken: !!req.cookies?.authToken,
        authHeader: req.headers['authorization'] ?
        /* istanbul ignore next */
        (cov_1gcg8x6e85().b[1][0]++, 'present') :
        /* istanbul ignore next */
        (cov_1gcg8x6e85().b[1][1]++, 'missing'),
        url: req.url
      });
    } else
    /* istanbul ignore next */
    {
      cov_1gcg8x6e85().b[0][1]++;
    }
    // Fallback to Authorization header for backward compatibility
    cov_1gcg8x6e85().s[4]++;
    if (!token) {
      /* istanbul ignore next */
      cov_1gcg8x6e85().b[2][0]++;
      const authHeader =
      /* istanbul ignore next */
      (cov_1gcg8x6e85().s[5]++, req.headers['authorization']);
      /* istanbul ignore next */
      cov_1gcg8x6e85().s[6]++;
      if (
      /* istanbul ignore next */
      (cov_1gcg8x6e85().b[4][0]++, authHeader) &&
      /* istanbul ignore next */
      (cov_1gcg8x6e85().b[4][1]++, authHeader.startsWith('Bearer '))) {
        /* istanbul ignore next */
        cov_1gcg8x6e85().b[3][0]++;
        cov_1gcg8x6e85().s[7]++;
        token = authHeader.split(' ')[1];
      } else
      /* istanbul ignore next */
      {
        cov_1gcg8x6e85().b[3][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1gcg8x6e85().b[2][1]++;
    }
    cov_1gcg8x6e85().s[8]++;
    if (!token) {
      /* istanbul ignore next */
      cov_1gcg8x6e85().b[5][0]++;
      cov_1gcg8x6e85().s[9]++;
      res.status(401).json({
        error: 'Authentication required'
      });
      /* istanbul ignore next */
      cov_1gcg8x6e85().s[10]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1gcg8x6e85().b[5][1]++;
    }
    cov_1gcg8x6e85().s[11]++;
    if (token.length > 1000) {
      /* istanbul ignore next */
      cov_1gcg8x6e85().b[6][0]++;
      cov_1gcg8x6e85().s[12]++;
      // Prevent extremely long tokens
      res.status(401).json({
        error: 'Invalid token format'
      });
      /* istanbul ignore next */
      cov_1gcg8x6e85().s[13]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1gcg8x6e85().b[6][1]++;
    }
    const secret =
    /* istanbul ignore next */
    (cov_1gcg8x6e85().s[14]++, process.env.JWT_SECRET);
    /* istanbul ignore next */
    cov_1gcg8x6e85().s[15]++;
    if (!secret) {
      /* istanbul ignore next */
      cov_1gcg8x6e85().b[7][0]++;
      cov_1gcg8x6e85().s[16]++;
      logger.error('CRITICAL: JWT_SECRET environment variable not configured');
      /* istanbul ignore next */
      cov_1gcg8x6e85().s[17]++;
      res.status(500).json({
        error: 'Server configuration error'
      });
      /* istanbul ignore next */
      cov_1gcg8x6e85().s[18]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1gcg8x6e85().b[7][1]++;
    }
    const decoded =
    /* istanbul ignore next */
    (cov_1gcg8x6e85().s[19]++, jwt.verify(token, secret, {
      algorithms: ['HS256'],
      // Explicitly specify allowed algorithms
      maxAge: '7d' // Maximum token age
    }));
    /* istanbul ignore next */
    cov_1gcg8x6e85().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_1gcg8x6e85().b[9][0]++, !decoded?.userId) ||
    /* istanbul ignore next */
    (cov_1gcg8x6e85().b[9][1]++, !decoded?.email) ||
    /* istanbul ignore next */
    (cov_1gcg8x6e85().b[9][2]++, !decoded?.iat)) {
      /* istanbul ignore next */
      cov_1gcg8x6e85().b[8][0]++;
      cov_1gcg8x6e85().s[21]++;
      res.status(403).json({
        error: 'Invalid token payload'
      });
      /* istanbul ignore next */
      cov_1gcg8x6e85().s[22]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1gcg8x6e85().b[8][1]++;
    }
    // Check token age (extra protection)
    const now =
    /* istanbul ignore next */
    (cov_1gcg8x6e85().s[23]++, Math.floor(Date.now() / 1000));
    const maxAge =
    /* istanbul ignore next */
    (cov_1gcg8x6e85().s[24]++, 7 * 24 * 60 * 60); // 7 days in seconds
    /* istanbul ignore next */
    cov_1gcg8x6e85().s[25]++;
    if (now - decoded.iat > maxAge) {
      /* istanbul ignore next */
      cov_1gcg8x6e85().b[10][0]++;
      cov_1gcg8x6e85().s[26]++;
      res.status(403).json({
        error: 'Token expired'
      });
      /* istanbul ignore next */
      cov_1gcg8x6e85().s[27]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1gcg8x6e85().b[10][1]++;
    }
    // Attach user information to request
    cov_1gcg8x6e85().s[28]++;
    req.user = {
      id: Number(decoded.userId),
      userId: decoded.userId,
      email: decoded.email
    };
    /* istanbul ignore next */
    cov_1gcg8x6e85().s[29]++;
    next();
  } catch (err) {
    /* istanbul ignore next */
    cov_1gcg8x6e85().s[30]++;
    if (err instanceof jwt.TokenExpiredError) {
      /* istanbul ignore next */
      cov_1gcg8x6e85().b[11][0]++;
      cov_1gcg8x6e85().s[31]++;
      res.status(403).json({
        error: 'Token expired'
      });
    } else {
      /* istanbul ignore next */
      cov_1gcg8x6e85().b[11][1]++;
      cov_1gcg8x6e85().s[32]++;
      if (err instanceof jwt.JsonWebTokenError) {
        /* istanbul ignore next */
        cov_1gcg8x6e85().b[12][0]++;
        cov_1gcg8x6e85().s[33]++;
        res.status(403).json({
          error: 'Invalid token'
        });
      } else {
        /* istanbul ignore next */
        cov_1gcg8x6e85().b[12][1]++;
        cov_1gcg8x6e85().s[34]++;
        logger.error('JWT verification error:', err);
        /* istanbul ignore next */
        cov_1gcg8x6e85().s[35]++;
        res.status(403).json({
          error: 'Token verification failed'
        });
      }
    }
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,