{"version":3,"names":["cov_1wvow0hlyd","actualCoverage","z","s","validateRequest","schemas","f","req","res","next","body","b","parseAsync","query","params","error","ZodError","status","json","success","errors","map","err","path","join","message"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/validateRequest.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { z } from 'zod';\n\ninterface ValidationSchemas {\n  body?: z.ZodSchema;\n  query?: z.ZodSchema;\n  params?: z.ZodSchema;\n}\n\nexport const validateRequest = (schemas: ValidationSchemas) => {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    try {\n      if (schemas.body) {\n        req.body = await schemas.body.parseAsync(req.body);\n      }\n      if (schemas.query) {\n        req.query = await schemas.query.parseAsync(req.query);\n      }\n      if (schemas.params) {\n        req.params = await schemas.params.parseAsync(req.params);\n      }\n      next();\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({\n          success: false,\n          errors: error.errors.map(err => ({\n            path: err.path.join('.'),\n            message: err.message\n          }))\n        });\n      }\n      next(error);\n    }\n  };\n};"],"mappings":"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","ignoreList":[]}