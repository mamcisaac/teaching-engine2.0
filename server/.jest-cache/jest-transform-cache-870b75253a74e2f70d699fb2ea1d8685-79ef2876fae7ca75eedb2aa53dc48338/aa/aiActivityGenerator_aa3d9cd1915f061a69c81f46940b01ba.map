{"version":3,"names":["cov_1v8gjag1nx","actualCoverage","AIActivityGenerator","constructor","f","generateActivity","params","s","id","Date","now","title","description","duration","materials","learningGoals","subject","b","grade","getUncoveredOutcomes","_params","convertToActivity","suggestionId","_userId","success","aiActivityGenerator"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/aiActivityGenerator.ts"],"sourcesContent":["// Stub for AIActivityGenerator to fix missing import\nexport class AIActivityGenerator {\n  constructor() {}\n\n  async generateActivity(params: {\n    outcomeId?: string;\n    userId?: number;\n    subject?: string;\n    grade?: number;\n    theme?: string;\n    duration?: number;\n    languageLevel?: string;\n  }): Promise<{\n    id: string;\n    title: string;\n    description: string;\n    duration: number;\n    materials: string[] | string;\n    learningGoals: string[];\n    subject: string;\n    grade: number;\n  }> {\n    // Stub implementation\n    return {\n      id: 'generated-' + Date.now(),\n      title: 'Generated Activity',\n      description: 'This is a stub implementation',\n      duration: 30,\n      materials: [],\n      learningGoals: [],\n      subject: params.subject || 'General',\n      grade: params.grade || 1,\n    };\n  }\n\n  async getUncoveredOutcomes(_params: { userId: number; theme?: string; limit?: number }): Promise<\n    Array<{\n      outcome: { id: string; expectationCode: string; expectation: string; strand: string };\n      suggestion?: {\n        id: string;\n        title: string;\n        description: string;\n        duration: number;\n        materials: string[] | string;\n        learningGoals: string[];\n        subject: string;\n        grade: number;\n      } | null;\n    }>\n  > {\n    // Stub implementation - returning format expected by the route\n    return [];\n  }\n\n  async convertToActivity(\n    suggestionId: string,\n    _userId: number,\n    _params: Record<string, unknown>,\n  ): Promise<{ id: string; success: boolean }> {\n    // Stub implementation\n    return {\n      id: suggestionId,\n      success: true,\n    };\n  }\n}\n\n// Export singleton instance\nexport const aiActivityGenerator = new AIActivityGenerator();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCG;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAjCH;AACA,OAAM,MAAOE,mBAAmB;EAC9BC,YAAA;IAAA;IAAAH,cAAA,GAAAI,CAAA;EAAe;EAEf,MAAMC,gBAAgBA,CAACC,MAQtB;IAAA;IAAAN,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAO,CAAA;IAUC;IACA,OAAO;MACLC,EAAE,EAAE,YAAY,GAAGC,IAAI,CAACC,GAAG,EAAE;MAC7BC,KAAK,EAAE,oBAAoB;MAC3BC,WAAW,EAAE,+BAA+B;MAC5CC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,aAAa,EAAE,EAAE;MACjBC,OAAO;MAAE;MAAA,CAAAhB,cAAA,GAAAiB,CAAA,UAAAX,MAAM,CAACU,OAAO;MAAA;MAAA,CAAAhB,cAAA,GAAAiB,CAAA,UAAI,SAAS;MACpCC,KAAK;MAAE;MAAA,CAAAlB,cAAA,GAAAiB,CAAA,UAAAX,MAAM,CAACY,KAAK;MAAA;MAAA,CAAAlB,cAAA,GAAAiB,CAAA,UAAI,CAAC;KACzB;EACH;EAEA,MAAME,oBAAoBA,CAACC,OAA2D;IAAA;IAAApB,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAO,CAAA;IAepF;IACA,OAAO,EAAE;EACX;EAEA,MAAMc,iBAAiBA,CACrBC,YAAoB,EACpBC,OAAe,EACfH,OAAgC;IAAA;IAAApB,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAO,CAAA;IAEhC;IACA,OAAO;MACLC,EAAE,EAAEc,YAAY;MAChBE,OAAO,EAAE;KACV;EACH;;AAGF;AACA,OAAO,MAAMC,mBAAmB;AAAA;AAAA,CAAAzB,cAAA,GAAAO,CAAA,OAAG,IAAIL,mBAAmB,EAAE","ignoreList":[]}