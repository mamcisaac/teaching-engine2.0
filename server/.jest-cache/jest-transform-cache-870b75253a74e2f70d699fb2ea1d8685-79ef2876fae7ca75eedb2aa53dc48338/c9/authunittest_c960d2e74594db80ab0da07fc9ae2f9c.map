{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/unit/auth.unit.test.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/unit/auth.unit.test.ts"],"sourcesContent":["import { describe, it, expect, beforeEach, jest } from '@jest/globals';\nimport jwt from 'jsonwebtoken';\nimport { Response } from 'express';\nimport { authMiddleware, type AuthRequest } from '../../src/middleware/auth';\n\ndescribe('Auth Middleware Unit Tests', () => {\n  let req: Partial<AuthRequest>;\n  let res: Partial<Response>;\n  let next: jest.MockedFunction<() => void>;\n\n  beforeEach(() => {\n    req = {\n      headers: {},\n    };\n    res = {\n      status: jest.fn().mockReturnThis(),\n      json: jest.fn().mockReturnThis(),\n    };\n    next = jest.fn();\n\n    // Clear any previous mocks\n    jest.clearAllMocks();\n  });\n\n  describe('authMiddleware', () => {\n    it('should return 401 when no authorization header is provided', () => {\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(res.status).toHaveBeenCalledWith(401);\n      expect(res.json).toHaveBeenCalledWith({ error: 'Unauthorized' });\n      expect(next).not.toHaveBeenCalled();\n    });\n\n    it('should return 401 when authorization header is empty', () => {\n      req.headers!.authorization = '';\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(res.status).toHaveBeenCalledWith(401);\n      expect(res.json).toHaveBeenCalledWith({ error: 'Unauthorized' });\n      expect(next).not.toHaveBeenCalled();\n    });\n\n    it('should extract token from Bearer authorization header', () => {\n      const secret = process.env.JWT_SECRET || require('crypto').randomBytes(32).toString('hex');\n      const userId = '123';\n      const token = jwt.sign({ userId }, secret);\n\n      req.headers!.authorization = `Bearer ${token}`;\n\n      // Mock environment variable\n      const originalEnv = process.env.JWT_SECRET;\n      process.env.JWT_SECRET = secret;\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(req.user?.userId).toBe('123');\n      expect(next).toHaveBeenCalled();\n      expect(res.status).not.toHaveBeenCalled();\n\n      // Restore environment\n      process.env.JWT_SECRET = originalEnv;\n    });\n\n    it('should use default secret when JWT_SECRET is not set', () => {\n      const userId = '456';\n      const token = jwt.sign({ userId }, 'secret'); // Default secret\n\n      req.headers!.authorization = `Bearer ${token}`;\n\n      // Ensure JWT_SECRET is not set\n      const originalEnv = process.env.JWT_SECRET;\n      delete process.env.JWT_SECRET;\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(req.user?.userId).toBe('456');\n      expect(next).toHaveBeenCalled();\n\n      // Restore environment\n      process.env.JWT_SECRET = originalEnv;\n    });\n\n    it('should return 401 for invalid token', () => {\n      req.headers!.authorization = 'Bearer invalid-token';\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(res.status).toHaveBeenCalledWith(401);\n      expect(res.json).toHaveBeenCalledWith({ error: 'Unauthorized' });\n      expect(next).not.toHaveBeenCalled();\n      expect(req.user).toBeUndefined();\n    });\n\n    it('should return 401 for expired token', () => {\n      const secret = process.env.JWT_SECRET || require('crypto').randomBytes(32).toString('hex');\n      const userId = '789';\n      const expiredToken = jwt.sign({ userId, exp: Math.floor(Date.now() / 1000) - 3600 }, secret); // Expired 1 hour ago\n\n      req.headers!.authorization = `Bearer ${expiredToken}`;\n\n      const originalEnv = process.env.JWT_SECRET;\n      process.env.JWT_SECRET = secret;\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(res.status).toHaveBeenCalledWith(401);\n      expect(res.json).toHaveBeenCalledWith({ error: 'Unauthorized' });\n      expect(next).not.toHaveBeenCalled();\n\n      process.env.JWT_SECRET = originalEnv;\n    });\n\n    it('should return 401 for token with wrong secret', () => {\n      const userId = '101';\n      const token = jwt.sign({ userId }, 'wrong-secret');\n\n      req.headers!.authorization = `Bearer ${token}`;\n\n      const originalEnv = process.env.JWT_SECRET;\n      process.env.JWT_SECRET = 'correct-secret';\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(res.status).toHaveBeenCalledWith(401);\n      expect(res.json).toHaveBeenCalledWith({ error: 'Unauthorized' });\n      expect(next).not.toHaveBeenCalled();\n\n      process.env.JWT_SECRET = originalEnv;\n    });\n\n    it('should handle Bearer token without Bearer prefix', () => {\n      const secret = process.env.JWT_SECRET || require('crypto').randomBytes(32).toString('hex');\n      const userId = '202';\n      const token = jwt.sign({ userId }, secret);\n\n      req.headers!.authorization = token; // No \"Bearer \" prefix\n\n      const originalEnv = process.env.JWT_SECRET;\n      process.env.JWT_SECRET = secret;\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(req.user?.userId).toBe('202');\n      expect(next).toHaveBeenCalled();\n\n      process.env.JWT_SECRET = originalEnv;\n    });\n\n    it('should parse string userId to integer', () => {\n      const secret = process.env.JWT_SECRET || require('crypto').randomBytes(32).toString('hex');\n      const userId = '999';\n      const token = jwt.sign({ userId }, secret);\n\n      req.headers!.authorization = `Bearer ${token}`;\n\n      const originalEnv = process.env.JWT_SECRET;\n      process.env.JWT_SECRET = secret;\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(req.user?.userId).toBe('999');\n      expect(typeof req.user?.userId).toBe('string');\n\n      process.env.JWT_SECRET = originalEnv;\n    });\n\n    it('should handle token with additional claims', () => {\n      const secret = process.env.JWT_SECRET || require('crypto').randomBytes(32).toString('hex');\n      const payload = {\n        userId: '555',\n        role: 'teacher',\n        email: 'test@example.com',\n        exp: Math.floor(Date.now() / 1000) + 3600, // Expires in 1 hour\n      };\n      const token = jwt.sign(payload, secret);\n\n      req.headers!.authorization = `Bearer ${token}`;\n\n      const originalEnv = process.env.JWT_SECRET;\n      process.env.JWT_SECRET = secret;\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(req.user?.userId).toBe('555');\n      expect(next).toHaveBeenCalled();\n\n      process.env.JWT_SECRET = originalEnv;\n    });\n\n    it('should handle malformed authorization header', () => {\n      const testCases = [\n        'Basic dXNlcjpwYXNz', // Basic auth instead of Bearer\n        'Bearer', // Bearer without token\n        'Bearer ', // Bearer with only space\n        'Token abc123', // Wrong prefix\n        'bearer token123', // Lowercase bearer\n      ];\n\n      testCases.forEach((authHeader) => {\n        // Reset mocks for each test case\n        jest.clearAllMocks();\n        req.headers!.authorization = authHeader;\n\n        authMiddleware(req as AuthRequest, res as Response, next);\n\n        expect(res.status).toHaveBeenCalledWith(401);\n        expect(res.json).toHaveBeenCalledWith({ error: 'Unauthorized' });\n        expect(next).not.toHaveBeenCalled();\n      });\n    });\n\n    it('should handle token with invalid userId format', () => {\n      const secret = process.env.JWT_SECRET || require('crypto').randomBytes(32).toString('hex');\n      const token = jwt.sign({ userId: 'not-a-number' }, secret);\n\n      req.headers!.authorization = `Bearer ${token}`;\n\n      const originalEnv = process.env.JWT_SECRET;\n      process.env.JWT_SECRET = secret;\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      // The middleware doesn't parse userId, it keeps it as is\n      expect(req.user?.userId).toBe('not-a-number');\n      expect(next).toHaveBeenCalled();\n\n      process.env.JWT_SECRET = originalEnv;\n    });\n\n    it('should handle token without userId claim', () => {\n      const secret = process.env.JWT_SECRET || require('crypto').randomBytes(32).toString('hex');\n      const token = jwt.sign({ role: 'teacher', email: 'test@example.com' }, secret);\n\n      req.headers!.authorization = `Bearer ${token}`;\n\n      const originalEnv = process.env.JWT_SECRET;\n      process.env.JWT_SECRET = secret;\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(req.user?.userId).toBeUndefined(); // userId is undefined when not present in token\n      expect(next).toHaveBeenCalled();\n\n      process.env.JWT_SECRET = originalEnv;\n    });\n\n    it('should preserve other request properties', () => {\n      const secret = process.env.JWT_SECRET || require('crypto').randomBytes(32).toString('hex');\n      const userId = '123';\n      const token = jwt.sign({ userId }, secret);\n\n      req.headers!.authorization = `Bearer ${token}`;\n      req.body = { test: 'data' };\n      req.params = { id: '456' };\n      req.query = { search: 'term' };\n\n      const originalEnv = process.env.JWT_SECRET;\n      process.env.JWT_SECRET = secret;\n\n      authMiddleware(req as AuthRequest, res as Response, next);\n\n      expect(req.body).toEqual({ test: 'data' });\n      expect(req.params).toEqual({ id: '456' });\n      expect(req.query).toEqual({ search: 'term' });\n      expect(req.user?.userId).toBe('123');\n\n      process.env.JWT_SECRET = originalEnv;\n    });\n  });\n});\n"],"version":3}