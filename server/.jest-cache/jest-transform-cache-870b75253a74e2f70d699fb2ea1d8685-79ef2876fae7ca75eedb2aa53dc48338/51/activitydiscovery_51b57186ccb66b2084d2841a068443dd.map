{"version":3,"names":["cov_119ridnkxn","actualCoverage","Router","getActivityDiscoveryService","authMiddleware","z","router","s","activityService","searchSchema","object","query","string","optional","grade","coerce","number","int","min","max","subject","durationMin","positive","durationMax","materials","transform","val","f","b","split","undefined","requireAllMaterials","boolean","activityType","language","enum","curriculumAlignment","sources","onlyFree","limit","default","offset","get","req","res","params","parse","searchParams","duration","results","search","Number","user","id","json","success","data","error","console","status","ZodError","errors","source","externalId","activity","getActivity","importSchema","activityId","lessonPlanId","lessonSection","customizations","record","any","notes","post","body","activityImport","importActivity","ratingSchema","rating","review","nullable","gradeUsed","subjectUsed","workedWell","challenges","wouldRecommend","rateActivity","prisma","reviews","activityRating","findMany","where","include","select","name","orderBy","createdAt","take","skip","totalCount","count","recommendations","getRecommendedActivities","imports","userId","lessonPlan","title","date","lastUsed"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/activity-discovery.ts"],"sourcesContent":["import { Router } from 'express';\nimport { getActivityDiscoveryService } from '../services/activityDiscoveryService';\nimport { authMiddleware } from '../middleware/auth';\nimport { z } from 'zod';\n\nconst router = Router();\nconst activityService = getActivityDiscoveryService();\n\n// Search activities\nconst searchSchema = z.object({\n  query: z.string().optional(),\n  grade: z.coerce.number().int().min(0).max(12).optional(),\n  subject: z.string().optional(),\n  durationMin: z.coerce.number().int().positive().optional(),\n  durationMax: z.coerce.number().int().positive().optional(),\n  materials: z\n    .string()\n    .optional()\n    .transform((val) => (val ? val.split(',') : undefined)),\n  requireAllMaterials: z.coerce.boolean().optional(),\n  activityType: z\n    .string()\n    .optional()\n    .transform((val) => (val ? val.split(',') : undefined)),\n  language: z.enum(['en', 'fr']).optional(),\n  curriculumAlignment: z\n    .string()\n    .optional()\n    .transform((val) => (val ? val.split(',') : undefined)),\n  sources: z\n    .string()\n    .optional()\n    .transform((val) => (val ? val.split(',') : undefined)),\n  onlyFree: z.coerce.boolean().optional(),\n  limit: z.coerce.number().int().min(1).max(100).optional().default(20),\n  offset: z.coerce.number().int().min(0).optional().default(0),\n});\n\nrouter.get('/search', authMiddleware, async (req, res) => {\n  try {\n    const params = searchSchema.parse(req.query);\n\n    const searchParams = {\n      query: params.query || '',\n      grade: params.grade,\n      subject: params.subject,\n      duration:\n        params.durationMin || params.durationMax\n          ? {\n              min: params.durationMin,\n              max: params.durationMax,\n            }\n          : undefined,\n      materials: params.materials,\n      requireAllMaterials: params.requireAllMaterials,\n      activityType: params.activityType,\n      language: params.language,\n      curriculumAlignment: params.curriculumAlignment,\n      sources: params.sources,\n      onlyFree: params.onlyFree,\n      limit: params.limit,\n      offset: params.offset,\n    };\n\n    const results = await activityService.search(searchParams, Number(req.user!.id));\n\n    res.json({\n      success: true,\n      data: results,\n    });\n  } catch (error) {\n    console.error('Activity search error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to search activities',\n    });\n  }\n});\n\n// Get activity details\nrouter.get('/:source/:externalId', authMiddleware, async (req, res) => {\n  try {\n    const { source, externalId } = req.params;\n\n    const activity = await activityService.getActivity(source, externalId);\n\n    if (!activity) {\n      return res.status(404).json({\n        success: false,\n        error: 'Activity not found',\n      });\n    }\n\n    res.json({\n      success: true,\n      data: activity,\n    });\n  } catch (error) {\n    console.error('Get activity error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get activity details',\n    });\n  }\n});\n\n// Import activity into lesson plan\nconst importSchema = z.object({\n  activityId: z.string(),\n  lessonPlanId: z.string().optional(),\n  lessonSection: z.enum(['mindsOn', 'action', 'consolidation']).optional(),\n  customizations: z.record(z.any()).optional(),\n  notes: z.string().optional(),\n});\n\nrouter.post('/import', authMiddleware, async (req, res) => {\n  try {\n    const params = importSchema.parse(req.body);\n\n    const activityImport = await activityService.importActivity(\n      params as Parameters<typeof activityService.importActivity>[0],\n      Number(req.user!.id),\n    );\n\n    res.json({\n      success: true,\n      data: activityImport,\n    });\n  } catch (error) {\n    console.error('Import activity error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to import activity',\n    });\n  }\n});\n\n// Rate an activity\nconst ratingSchema = z.object({\n  rating: z.number().int().min(1).max(5),\n  review: z.string().optional().nullable(),\n  gradeUsed: z.number().int().optional(),\n  subjectUsed: z.string().optional(),\n  workedWell: z.string().optional(),\n  challenges: z.string().optional(),\n  wouldRecommend: z.boolean().optional(),\n});\n\nrouter.post('/:activityId/rate', authMiddleware, async (req, res) => {\n  try {\n    const { activityId } = req.params;\n    const params = ratingSchema.parse(req.body);\n\n    const rating = await activityService.rateActivity(\n      activityId,\n      params.rating,\n      params.review || null,\n      {\n        gradeUsed: params.gradeUsed,\n        subjectUsed: params.subjectUsed,\n        workedWell: params.workedWell,\n        challenges: params.challenges,\n        wouldRecommend: params.wouldRecommend,\n      },\n      Number(req.user!.id),\n    );\n\n    res.json({\n      success: true,\n      data: rating,\n    });\n  } catch (error) {\n    console.error('Rate activity error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to rate activity',\n    });\n  }\n});\n\n// Get activity ratings and reviews\nrouter.get('/:activityId/reviews', authMiddleware, async (req, res) => {\n  try {\n    const { activityId } = req.params;\n    const { limit = 10, offset = 0 } = req.query;\n\n    const { prisma } = await import('../prisma');\n\n    const reviews = await prisma.activityRating.findMany({\n      where: { activityId },\n      include: {\n        user: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n      },\n      orderBy: { createdAt: 'desc' },\n      take: Number(limit),\n      skip: Number(offset),\n    });\n\n    const totalCount = await prisma.activityRating.count({\n      where: { activityId },\n    });\n\n    res.json({\n      success: true,\n      data: {\n        reviews,\n        totalCount,\n      },\n    });\n  } catch (error) {\n    console.error('Get reviews error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get activity reviews',\n    });\n  }\n});\n\n// Get recommended activities for a lesson plan\nrouter.get('/recommendations/:lessonPlanId', authMiddleware, async (req, res) => {\n  try {\n    const { lessonPlanId } = req.params;\n    const { limit = 5 } = req.query;\n\n    const recommendations = await activityService.getRecommendedActivities(\n      lessonPlanId,\n      Number(req.user!.id),\n      Number(limit),\n    );\n\n    res.json({\n      success: true,\n      data: recommendations,\n    });\n  } catch (error) {\n    console.error('Get recommendations error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get activity recommendations',\n    });\n  }\n});\n\n// Get user's imported activities\nrouter.get('/imported', authMiddleware, async (req, res) => {\n  try {\n    const { limit = 20, offset = 0 } = req.query;\n    const { prisma } = await import('../prisma');\n\n    const imports = await prisma.activityImport.findMany({\n      where: { userId: Number(req.user!.id) },\n      include: {\n        activity: true,\n        lessonPlan: {\n          select: {\n            id: true,\n            title: true,\n            date: true,\n          },\n        },\n      },\n      orderBy: { lastUsed: 'desc' },\n      take: Number(limit),\n      skip: Number(offset),\n    });\n\n    const totalCount = await prisma.activityImport.count({\n      where: { userId: Number(req.user!.id) },\n    });\n\n    res.json({\n      success: true,\n      data: {\n        imports,\n        totalCount,\n      },\n    });\n  } catch (error) {\n    console.error('Get imported activities error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to get imported activities',\n    });\n  }\n});\n\nexport default router;\n"],"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","ignoreList":[]}