85f85d3c1d23030c33bdc4a5a4b1435e
/* istanbul ignore next */
function cov_2q57xpkhqj() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/curriculumDiscoveryService.ts";
  var hash = "7147a749d83060b780e4a4f5407d24adbf802f2b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/curriculumDiscoveryService.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 33
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "1": {
        start: {
          line: 20,
          column: 26
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "2": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 16
        }
      },
      "3": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "4": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 69
        }
      },
      "5": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "6": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 82,
          column: 10
        }
      },
      "7": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "8": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 71
        }
      },
      "9": {
        start: {
          line: 90,
          column: 33
        },
        end: {
          line: 90,
          column: 35
        }
      },
      "10": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "11": {
        start: {
          line: 91,
          column: 60
        },
        end: {
          line: 91,
          column: 70
        }
      },
      "12": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 101,
          column: 17
        }
      },
      "13": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 82
        }
      },
      "14": {
        start: {
          line: 94,
          column: 38
        },
        end: {
          line: 94,
          column: 75
        }
      },
      "15": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 52
        }
      },
      "16": {
        start: {
          line: 97,
          column: 20
        },
        end: {
          line: 97,
          column: 53
        }
      },
      "17": {
        start: {
          line: 100,
          column: 20
        },
        end: {
          line: 100,
          column: 122
        }
      },
      "18": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 52
        }
      },
      "19": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 87
        }
      },
      "20": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 32
        }
      },
      "21": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 84
        }
      },
      "22": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 24
        }
      },
      "23": {
        start: {
          line: 117,
          column: 26
        },
        end: {
          line: 117,
          column: 28
        }
      },
      "24": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 118,
          column: 37
        }
      },
      "25": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "26": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "27": {
        start: {
          line: 121,
          column: 38
        },
        end: {
          line: 121,
          column: 93
        }
      },
      "28": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 49
        }
      },
      "29": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 107
        }
      },
      "30": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 25
        }
      },
      "31": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "32": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 22
        }
      },
      "33": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "34": {
        start: {
          line: 138,
          column: 53
        },
        end: {
          line: 138,
          column: 74
        }
      },
      "35": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 22
        }
      },
      "36": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 29
        }
      },
      "37": {
        start: {
          line: 142,
          column: 26
        },
        end: {
          line: 142,
          column: 28
        }
      },
      "38": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "39": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 73
        }
      },
      "40": {
        start: {
          line: 146,
          column: 34
        },
        end: {
          line: 146,
          column: 57
        }
      },
      "41": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 149,
          column: 13
        }
      },
      "42": {
        start: {
          line: 148,
          column: 16
        },
        end: {
          line: 148,
          column: 81
        }
      },
      "43": {
        start: {
          line: 150,
          column: 29
        },
        end: {
          line: 154,
          column: 14
        }
      },
      "44": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 157,
          column: 13
        }
      },
      "45": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 83
        }
      },
      "46": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "47": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 78
        }
      },
      "48": {
        start: {
          line: 162,
          column: 25
        },
        end: {
          line: 162,
          column: 46
        }
      },
      "49": {
        start: {
          line: 163,
          column: 22
        },
        end: {
          line: 163,
          column: 40
        }
      },
      "50": {
        start: {
          line: 165,
          column: 34
        },
        end: {
          line: 165,
          column: 85
        }
      },
      "51": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 45
        }
      },
      "52": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "53": {
        start: {
          line: 169,
          column: 30
        },
        end: {
          line: 169,
          column: 73
        }
      },
      "54": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 174,
          column: 17
        }
      },
      "55": {
        start: {
          line: 171,
          column: 20
        },
        end: {
          line: 171,
          column: 56
        }
      },
      "56": {
        start: {
          line: 172,
          column: 44
        },
        end: {
          line: 172,
          column: 102
        }
      },
      "57": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 55
        }
      },
      "58": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 70
        }
      },
      "59": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 25
        }
      },
      "60": {
        start: {
          line: 186,
          column: 26
        },
        end: {
          line: 186,
          column: 28
        }
      },
      "61": {
        start: {
          line: 188,
          column: 30
        },
        end: {
          line: 188,
          column: 114
        }
      },
      "62": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 211,
          column: 11
        }
      },
      "63": {
        start: {
          line: 190,
          column: 26
        },
        end: {
          line: 190,
          column: 36
        }
      },
      "64": {
        start: {
          line: 191,
          column: 25
        },
        end: {
          line: 191,
          column: 43
        }
      },
      "65": {
        start: {
          line: 192,
          column: 29
        },
        end: {
          line: 192,
          column: 48
        }
      },
      "66": {
        start: {
          line: 193,
          column: 31
        },
        end: {
          line: 193,
          column: 59
        }
      },
      "67": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "68": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 23
        }
      },
      "69": {
        start: {
          line: 198,
          column: 32
        },
        end: {
          line: 198,
          column: 65
        }
      },
      "70": {
        start: {
          line: 200,
          column: 29
        },
        end: {
          line: 207,
          column: 14
        }
      },
      "71": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "72": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 41
        }
      },
      "73": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 25
        }
      },
      "74": {
        start: {
          line: 218,
          column: 29
        },
        end: {
          line: 218,
          column: 69
        }
      },
      "75": {
        start: {
          line: 219,
          column: 35
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "76": {
        start: {
          line: 240,
          column: 37
        },
        end: {
          line: 240,
          column: 105
        }
      },
      "77": {
        start: {
          line: 240,
          column: 74
        },
        end: {
          line: 240,
          column: 104
        }
      },
      "78": {
        start: {
          line: 242,
          column: 32
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "79": {
        start: {
          line: 255,
          column: 34
        },
        end: {
          line: 255,
          column: 99
        }
      },
      "80": {
        start: {
          line: 255,
          column: 68
        },
        end: {
          line: 255,
          column: 98
        }
      },
      "81": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 58
        }
      },
      "82": {
        start: {
          line: 262,
          column: 22
        },
        end: {
          line: 262,
          column: 24
        }
      },
      "83": {
        start: {
          line: 263,
          column: 29
        },
        end: {
          line: 263,
          column: 41
        }
      },
      "84": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 299,
          column: 11
        }
      },
      "85": {
        start: {
          line: 265,
          column: 26
        },
        end: {
          line: 265,
          column: 36
        }
      },
      "86": {
        start: {
          line: 266,
          column: 25
        },
        end: {
          line: 266,
          column: 43
        }
      },
      "87": {
        start: {
          line: 267,
          column: 29
        },
        end: {
          line: 267,
          column: 62
        }
      },
      "88": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 269,
          column: 23
        }
      },
      "89": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 23
        }
      },
      "90": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 277,
          column: 13
        }
      },
      "91": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 273,
          column: 64
        }
      },
      "92": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 23
        }
      },
      "93": {
        start: {
          line: 279,
          column: 24
        },
        end: {
          line: 279,
          column: 44
        }
      },
      "94": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 282,
          column: 13
        }
      },
      "95": {
        start: {
          line: 280,
          column: 56
        },
        end: {
          line: 280,
          column: 85
        }
      },
      "96": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 23
        }
      },
      "97": {
        start: {
          line: 284,
          column: 43
        },
        end: {
          line: 295,
          column: 13
        }
      },
      "98": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 298,
          column: 13
        }
      },
      "99": {
        start: {
          line: 296,
          column: 57
        },
        end: {
          line: 296,
          column: 83
        }
      },
      "100": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 40
        }
      },
      "101": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 42
        }
      },
      "102": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "103": {
        start: {
          line: 307,
          column: 62
        },
        end: {
          line: 307,
          column: 68
        }
      },
      "104": {
        start: {
          line: 309,
          column: 26
        },
        end: {
          line: 309,
          column: 66
        }
      },
      "105": {
        start: {
          line: 310,
          column: 28
        },
        end: {
          line: 310,
          column: 70
        }
      },
      "106": {
        start: {
          line: 311,
          column: 33
        },
        end: {
          line: 311,
          column: 80
        }
      },
      "107": {
        start: {
          line: 312,
          column: 29
        },
        end: {
          line: 312,
          column: 54
        }
      },
      "108": {
        start: {
          line: 313,
          column: 29
        },
        end: {
          line: 313,
          column: 72
        }
      },
      "109": {
        start: {
          line: 314,
          column: 29
        },
        end: {
          line: 331,
          column: 13
        }
      },
      "110": {
        start: {
          line: 333,
          column: 31
        },
        end: {
          line: 333,
          column: 75
        }
      },
      "111": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 337,
          column: 13
        }
      },
      "112": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 122
        }
      },
      "113": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 28
        }
      },
      "114": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 28
        }
      },
      "115": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 341,
          column: 88
        }
      },
      "116": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 24
        }
      },
      "117": {
        start: {
          line: 349,
          column: 30
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "118": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 363,
          column: 9
        }
      },
      "119": {
        start: {
          line: 356,
          column: 26
        },
        end: {
          line: 356,
          column: 45
        }
      },
      "120": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 362,
          column: 13
        }
      },
      "121": {
        start: {
          line: 358,
          column: 30
        },
        end: {
          line: 358,
          column: 48
        }
      },
      "122": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 361,
          column: 17
        }
      },
      "123": {
        start: {
          line: 360,
          column: 20
        },
        end: {
          line: 360,
          column: 33
        }
      },
      "124": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 367,
          column: 9
        }
      },
      "125": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 21
        }
      },
      "126": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 25
        }
      },
      "127": {
        start: {
          line: 374,
          column: 32
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "128": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 387,
          column: 9
        }
      },
      "129": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 386,
          column: 13
        }
      },
      "130": {
        start: {
          line: 384,
          column: 43
        },
        end: {
          line: 384,
          column: 61
        }
      },
      "131": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 385,
          column: 31
        }
      },
      "132": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 25
        }
      },
      "133": {
        start: {
          line: 394,
          column: 26
        },
        end: {
          line: 394,
          column: 44
        }
      },
      "134": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 397,
          column: 9
        }
      },
      "135": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 32
        }
      },
      "136": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 400,
          column: 9
        }
      },
      "137": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 30
        }
      },
      "138": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 403,
          column: 9
        }
      },
      "139": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 402,
          column: 31
        }
      },
      "140": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 28
        }
      },
      "141": {
        start: {
          line: 410,
          column: 25
        },
        end: {
          line: 410,
          column: 42
        }
      },
      "142": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 412,
          column: 25
        }
      },
      "143": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 25
        }
      },
      "144": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 414,
          column: 26
        }
      },
      "145": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 26
        }
      },
      "146": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 416,
          column: 26
        }
      },
      "147": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 416,
          column: 26
        }
      },
      "148": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 25
        }
      },
      "149": {
        start: {
          line: 423,
          column: 26
        },
        end: {
          line: 423,
          column: 81
        }
      },
      "150": {
        start: {
          line: 424,
          column: 27
        },
        end: {
          line: 424,
          column: 114
        }
      },
      "151": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 426,
          column: 26
        }
      },
      "152": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 26
        }
      },
      "153": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 428,
          column: 24
        }
      },
      "154": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 428,
          column: 24
        }
      },
      "155": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 20
        }
      },
      "156": {
        start: {
          line: 435,
          column: 21
        },
        end: {
          line: 435,
          column: 56
        }
      },
      "157": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 436,
          column: 66
        }
      },
      "158": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 446,
          column: 20
        }
      },
      "159": {
        start: {
          line: 452,
          column: 8
        },
        end: {
          line: 459,
          column: 9
        }
      },
      "160": {
        start: {
          line: 453,
          column: 27
        },
        end: {
          line: 453,
          column: 39
        }
      },
      "161": {
        start: {
          line: 454,
          column: 29
        },
        end: {
          line: 454,
          column: 86
        }
      },
      "162": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 45
        }
      },
      "163": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 458,
          column: 41
        }
      },
      "164": {
        start: {
          line: 465,
          column: 8
        },
        end: {
          line: 516,
          column: 9
        }
      },
      "165": {
        start: {
          line: 466,
          column: 29
        },
        end: {
          line: 466,
          column: 69
        }
      },
      "166": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 469,
          column: 13
        }
      },
      "167": {
        start: {
          line: 468,
          column: 16
        },
        end: {
          line: 468,
          column: 68
        }
      },
      "168": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 470,
          column: 81
        }
      },
      "169": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 472,
          column: 40
        }
      },
      "170": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 473,
          column: 48
        }
      },
      "171": {
        start: {
          line: 475,
          column: 34
        },
        end: {
          line: 475,
          column: 66
        }
      },
      "172": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 478,
          column: 13
        }
      },
      "173": {
        start: {
          line: 477,
          column: 16
        },
        end: {
          line: 477,
          column: 81
        }
      },
      "174": {
        start: {
          line: 479,
          column: 29
        },
        end: {
          line: 479,
          column: 58
        }
      },
      "175": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 482,
          column: 13
        }
      },
      "176": {
        start: {
          line: 481,
          column: 16
        },
        end: {
          line: 481,
          column: 83
        }
      },
      "177": {
        start: {
          line: 484,
          column: 32
        },
        end: {
          line: 484,
          column: 48
        }
      },
      "178": {
        start: {
          line: 485,
          column: 12
        },
        end: {
          line: 487,
          column: 13
        }
      },
      "179": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 486,
          column: 71
        }
      },
      "180": {
        start: {
          line: 488,
          column: 27
        },
        end: {
          line: 488,
          column: 55
        }
      },
      "181": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 492,
          column: 13
        }
      },
      "182": {
        start: {
          line: 491,
          column: 16
        },
        end: {
          line: 491,
          column: 70
        }
      },
      "183": {
        start: {
          line: 493,
          column: 31
        },
        end: {
          line: 493,
          column: 50
        }
      },
      "184": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 50
        }
      },
      "185": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 47
        }
      },
      "186": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 51
        }
      },
      "187": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 498,
          column: 100
        }
      },
      "188": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 502,
          column: 14
        }
      },
      "189": {
        start: {
          line: 505,
          column: 12
        },
        end: {
          line: 505,
          column: 84
        }
      },
      "190": {
        start: {
          line: 506,
          column: 29
        },
        end: {
          line: 506,
          column: 69
        }
      },
      "191": {
        start: {
          line: 507,
          column: 12
        },
        end: {
          line: 511,
          column: 13
        }
      },
      "192": {
        start: {
          line: 508,
          column: 16
        },
        end: {
          line: 508,
          column: 51
        }
      },
      "193": {
        start: {
          line: 509,
          column: 16
        },
        end: {
          line: 509,
          column: 76
        }
      },
      "194": {
        start: {
          line: 510,
          column: 16
        },
        end: {
          line: 510,
          column: 105
        }
      },
      "195": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 515,
          column: 14
        }
      },
      "196": {
        start: {
          line: 522,
          column: 8
        },
        end: {
          line: 559,
          column: 9
        }
      },
      "197": {
        start: {
          line: 523,
          column: 29
        },
        end: {
          line: 523,
          column: 69
        }
      },
      "198": {
        start: {
          line: 524,
          column: 12
        },
        end: {
          line: 526,
          column: 13
        }
      },
      "199": {
        start: {
          line: 525,
          column: 16
        },
        end: {
          line: 525,
          column: 68
        }
      },
      "200": {
        start: {
          line: 527,
          column: 12
        },
        end: {
          line: 529,
          column: 13
        }
      },
      "201": {
        start: {
          line: 528,
          column: 16
        },
        end: {
          line: 528,
          column: 81
        }
      },
      "202": {
        start: {
          line: 530,
          column: 12
        },
        end: {
          line: 530,
          column: 71
        }
      },
      "203": {
        start: {
          line: 532,
          column: 29
        },
        end: {
          line: 538,
          column: 14
        }
      },
      "204": {
        start: {
          line: 540,
          column: 12
        },
        end: {
          line: 540,
          column: 50
        }
      },
      "205": {
        start: {
          line: 541,
          column: 12
        },
        end: {
          line: 541,
          column: 99
        }
      },
      "206": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 545,
          column: 14
        }
      },
      "207": {
        start: {
          line: 548,
          column: 12
        },
        end: {
          line: 548,
          column: 83
        }
      },
      "208": {
        start: {
          line: 549,
          column: 29
        },
        end: {
          line: 549,
          column: 69
        }
      },
      "209": {
        start: {
          line: 550,
          column: 12
        },
        end: {
          line: 554,
          column: 13
        }
      },
      "210": {
        start: {
          line: 551,
          column: 16
        },
        end: {
          line: 551,
          column: 51
        }
      },
      "211": {
        start: {
          line: 552,
          column: 16
        },
        end: {
          line: 552,
          column: 76
        }
      },
      "212": {
        start: {
          line: 553,
          column: 16
        },
        end: {
          line: 553,
          column: 105
        }
      },
      "213": {
        start: {
          line: 555,
          column: 12
        },
        end: {
          line: 558,
          column: 14
        }
      },
      "214": {
        start: {
          line: 565,
          column: 8
        },
        end: {
          line: 565,
          column: 61
        }
      },
      "215": {
        start: {
          line: 571,
          column: 26
        },
        end: {
          line: 571,
          column: 55
        }
      },
      "216": {
        start: {
          line: 572,
          column: 8
        },
        end: {
          line: 586,
          column: 11
        }
      },
      "217": {
        start: {
          line: 573,
          column: 12
        },
        end: {
          line: 574,
          column: 29
        }
      },
      "218": {
        start: {
          line: 574,
          column: 16
        },
        end: {
          line: 574,
          column: 29
        }
      },
      "219": {
        start: {
          line: 575,
          column: 12
        },
        end: {
          line: 576,
          column: 29
        }
      },
      "220": {
        start: {
          line: 576,
          column: 16
        },
        end: {
          line: 576,
          column: 29
        }
      },
      "221": {
        start: {
          line: 577,
          column: 12
        },
        end: {
          line: 578,
          column: 29
        }
      },
      "222": {
        start: {
          line: 578,
          column: 16
        },
        end: {
          line: 578,
          column: 29
        }
      },
      "223": {
        start: {
          line: 579,
          column: 12
        },
        end: {
          line: 580,
          column: 29
        }
      },
      "224": {
        start: {
          line: 580,
          column: 16
        },
        end: {
          line: 580,
          column: 29
        }
      },
      "225": {
        start: {
          line: 581,
          column: 12
        },
        end: {
          line: 582,
          column: 29
        }
      },
      "226": {
        start: {
          line: 582,
          column: 16
        },
        end: {
          line: 582,
          column: 29
        }
      },
      "227": {
        start: {
          line: 583,
          column: 12
        },
        end: {
          line: 584,
          column: 29
        }
      },
      "228": {
        start: {
          line: 584,
          column: 16
        },
        end: {
          line: 584,
          column: 29
        }
      },
      "229": {
        start: {
          line: 585,
          column: 12
        },
        end: {
          line: 585,
          column: 24
        }
      },
      "230": {
        start: {
          line: 592,
          column: 8
        },
        end: {
          line: 617,
          column: 9
        }
      },
      "231": {
        start: {
          line: 593,
          column: 29
        },
        end: {
          line: 593,
          column: 69
        }
      },
      "232": {
        start: {
          line: 594,
          column: 12
        },
        end: {
          line: 595,
          column: 29
        }
      },
      "233": {
        start: {
          line: 595,
          column: 16
        },
        end: {
          line: 595,
          column: 29
        }
      },
      "234": {
        start: {
          line: 597,
          column: 34
        },
        end: {
          line: 597,
          column: 66
        }
      },
      "235": {
        start: {
          line: 598,
          column: 12
        },
        end: {
          line: 601,
          column: 13
        }
      },
      "236": {
        start: {
          line: 599,
          column: 16
        },
        end: {
          line: 599,
          column: 100
        }
      },
      "237": {
        start: {
          line: 600,
          column: 16
        },
        end: {
          line: 600,
          column: 29
        }
      },
      "238": {
        start: {
          line: 603,
          column: 29
        },
        end: {
          line: 603,
          column: 78
        }
      },
      "239": {
        start: {
          line: 604,
          column: 32
        },
        end: {
          line: 604,
          column: 43
        }
      },
      "240": {
        start: {
          line: 605,
          column: 12
        },
        end: {
          line: 605,
          column: 44
        }
      },
      "241": {
        start: {
          line: 606,
          column: 12
        },
        end: {
          line: 606,
          column: 47
        }
      },
      "242": {
        start: {
          line: 607,
          column: 12
        },
        end: {
          line: 607,
          column: 31
        }
      },
      "243": {
        start: {
          line: 610,
          column: 12
        },
        end: {
          line: 610,
          column: 82
        }
      },
      "244": {
        start: {
          line: 611,
          column: 29
        },
        end: {
          line: 611,
          column: 69
        }
      },
      "245": {
        start: {
          line: 612,
          column: 12
        },
        end: {
          line: 615,
          column: 13
        }
      },
      "246": {
        start: {
          line: 613,
          column: 16
        },
        end: {
          line: 613,
          column: 42
        }
      },
      "247": {
        start: {
          line: 614,
          column: 16
        },
        end: {
          line: 614,
          column: 51
        }
      },
      "248": {
        start: {
          line: 616,
          column: 12
        },
        end: {
          line: 616,
          column: 25
        }
      },
      "249": {
        start: {
          line: 623,
          column: 8
        },
        end: {
          line: 623,
          column: 60
        }
      },
      "250": {
        start: {
          line: 629,
          column: 8
        },
        end: {
          line: 629,
          column: 59
        }
      },
      "251": {
        start: {
          line: 635,
          column: 26
        },
        end: {
          line: 635,
          column: 55
        }
      },
      "252": {
        start: {
          line: 636,
          column: 22
        },
        end: {
          line: 643,
          column: 9
        }
      },
      "253": {
        start: {
          line: 644,
          column: 8
        },
        end: {
          line: 660,
          column: 11
        }
      },
      "254": {
        start: {
          line: 646,
          column: 12
        },
        end: {
          line: 646,
          column: 87
        }
      },
      "255": {
        start: {
          line: 648,
          column: 12
        },
        end: {
          line: 650,
          column: 13
        }
      },
      "256": {
        start: {
          line: 649,
          column: 16
        },
        end: {
          line: 649,
          column: 87
        }
      },
      "257": {
        start: {
          line: 652,
          column: 12
        },
        end: {
          line: 655,
          column: 13
        }
      },
      "258": {
        start: {
          line: 653,
          column: 33
        },
        end: {
          line: 653,
          column: 53
        }
      },
      "259": {
        start: {
          line: 654,
          column: 16
        },
        end: {
          line: 654,
          column: 77
        }
      },
      "260": {
        start: {
          line: 657,
          column: 12
        },
        end: {
          line: 657,
          column: 95
        }
      },
      "261": {
        start: {
          line: 659,
          column: 12
        },
        end: {
          line: 659,
          column: 87
        }
      },
      "262": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 661,
          column: 21
        }
      },
      "263": {
        start: {
          line: 667,
          column: 8
        },
        end: {
          line: 667,
          column: 65
        }
      },
      "264": {
        start: {
          line: 667,
          column: 40
        },
        end: {
          line: 667,
          column: 63
        }
      },
      "265": {
        start: {
          line: 671,
          column: 42
        },
        end: {
          line: 671,
          column: 74
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 30
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 30
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 87
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 91,
            column: 53
          },
          end: {
            line: 91,
            column: 54
          }
        },
        loc: {
          start: {
            line: 91,
            column: 60
          },
          end: {
            line: 91,
            column: 70
          }
        },
        line: 91
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 37
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 116
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 53
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 133
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 138,
            column: 40
          },
          end: {
            line: 138,
            column: 41
          }
        },
        loc: {
          start: {
            line: 138,
            column: 53
          },
          end: {
            line: 138,
            column: 74
          }
        },
        line: 138
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 55
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 185
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 189,
            column: 27
          },
          end: {
            line: 189,
            column: 28
          }
        },
        loc: {
          start: {
            line: 189,
            column: 43
          },
          end: {
            line: 211,
            column: 9
          }
        },
        line: 189
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        },
        loc: {
          start: {
            line: 217,
            column: 44
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 217
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 240,
            column: 61
          },
          end: {
            line: 240,
            column: 62
          }
        },
        loc: {
          start: {
            line: 240,
            column: 74
          },
          end: {
            line: 240,
            column: 104
          }
        },
        line: 240
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 255,
            column: 55
          },
          end: {
            line: 255,
            column: 56
          }
        },
        loc: {
          start: {
            line: 255,
            column: 68
          },
          end: {
            line: 255,
            column: 98
          }
        },
        line: 255
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 47
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 261
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 264,
            column: 26
          },
          end: {
            line: 264,
            column: 27
          }
        },
        loc: {
          start: {
            line: 264,
            column: 42
          },
          end: {
            line: 299,
            column: 9
          }
        },
        line: 264
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 280,
            column: 44
          },
          end: {
            line: 280,
            column: 45
          }
        },
        loc: {
          start: {
            line: 280,
            column: 56
          },
          end: {
            line: 280,
            column: 85
          }
        },
        line: 280
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 296,
            column: 44
          },
          end: {
            line: 296,
            column: 45
          }
        },
        loc: {
          start: {
            line: 296,
            column: 57
          },
          end: {
            line: 296,
            column: 83
          }
        },
        line: 296
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 305,
            column: 5
          }
        },
        loc: {
          start: {
            line: 305,
            column: 35
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 305
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 23
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 348
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 25
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 373
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 384,
            column: 30
          },
          end: {
            line: 384,
            column: 31
          }
        },
        loc: {
          start: {
            line: 384,
            column: 43
          },
          end: {
            line: 384,
            column: 61
          }
        },
        line: 384
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 30
          },
          end: {
            line: 405,
            column: 5
          }
        },
        line: 393
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 409,
            column: 4
          },
          end: {
            line: 409,
            column: 5
          }
        },
        loc: {
          start: {
            line: 409,
            column: 25
          },
          end: {
            line: 418,
            column: 5
          }
        },
        line: 409
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 422,
            column: 4
          },
          end: {
            line: 422,
            column: 5
          }
        },
        loc: {
          start: {
            line: 422,
            column: 26
          },
          end: {
            line: 430,
            column: 5
          }
        },
        line: 422
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        },
        loc: {
          start: {
            line: 434,
            column: 28
          },
          end: {
            line: 437,
            column: 5
          }
        },
        line: 434
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 441,
            column: 4
          },
          end: {
            line: 441,
            column: 5
          }
        },
        loc: {
          start: {
            line: 441,
            column: 22
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 441
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 451,
            column: 4
          },
          end: {
            line: 451,
            column: 5
          }
        },
        loc: {
          start: {
            line: 451,
            column: 29
          },
          end: {
            line: 460,
            column: 5
          }
        },
        line: 451
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 464,
            column: 4
          },
          end: {
            line: 464,
            column: 5
          }
        },
        loc: {
          start: {
            line: 464,
            column: 39
          },
          end: {
            line: 517,
            column: 5
          }
        },
        line: 464
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 521,
            column: 4
          },
          end: {
            line: 521,
            column: 5
          }
        },
        loc: {
          start: {
            line: 521,
            column: 46
          },
          end: {
            line: 560,
            column: 5
          }
        },
        line: 521
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 564,
            column: 4
          },
          end: {
            line: 564,
            column: 5
          }
        },
        loc: {
          start: {
            line: 564,
            column: 29
          },
          end: {
            line: 566,
            column: 5
          }
        },
        line: 564
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 570,
            column: 4
          },
          end: {
            line: 570,
            column: 5
          }
        },
        loc: {
          start: {
            line: 570,
            column: 33
          },
          end: {
            line: 587,
            column: 5
          }
        },
        line: 570
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 572,
            column: 32
          },
          end: {
            line: 572,
            column: 33
          }
        },
        loc: {
          start: {
            line: 572,
            column: 41
          },
          end: {
            line: 586,
            column: 9
          }
        },
        line: 572
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 591,
            column: 4
          },
          end: {
            line: 591,
            column: 5
          }
        },
        loc: {
          start: {
            line: 591,
            column: 37
          },
          end: {
            line: 618,
            column: 5
          }
        },
        line: 591
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 622,
            column: 4
          },
          end: {
            line: 622,
            column: 5
          }
        },
        loc: {
          start: {
            line: 622,
            column: 36
          },
          end: {
            line: 624,
            column: 5
          }
        },
        line: 622
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 628,
            column: 4
          },
          end: {
            line: 628,
            column: 5
          }
        },
        loc: {
          start: {
            line: 628,
            column: 41
          },
          end: {
            line: 630,
            column: 5
          }
        },
        line: 628
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 634,
            column: 4
          },
          end: {
            line: 634,
            column: 5
          }
        },
        loc: {
          start: {
            line: 634,
            column: 24
          },
          end: {
            line: 662,
            column: 5
          }
        },
        line: 634
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 644,
            column: 26
          },
          end: {
            line: 644,
            column: 27
          }
        },
        loc: {
          start: {
            line: 644,
            column: 35
          },
          end: {
            line: 660,
            column: 9
          }
        },
        line: 644
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 666,
            column: 4
          },
          end: {
            line: 666,
            column: 5
          }
        },
        loc: {
          start: {
            line: 666,
            column: 14
          },
          end: {
            line: 668,
            column: 5
          }
        },
        line: 666
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 667,
            column: 27
          },
          end: {
            line: 667,
            column: 28
          }
        },
        loc: {
          start: {
            line: 667,
            column: 40
          },
          end: {
            line: 667,
            column: 63
          }
        },
        line: 667
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "1": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 134,
            column: 35
          }
        }, {
          start: {
            line: 134,
            column: 39
          },
          end: {
            line: 134,
            column: 59
          }
        }],
        line: 134
      },
      "2": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "3": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "4": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 157,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "5": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 161,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "6": {
        loc: {
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "7": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "8": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 194,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 194,
            column: 21
          }
        }, {
          start: {
            line: 194,
            column: 25
          },
          end: {
            line: 194,
            column: 73
          }
        }],
        line: 194
      },
      "9": {
        loc: {
          start: {
            line: 202,
            column: 23
          },
          end: {
            line: 202,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 23
          },
          end: {
            line: 202,
            column: 31
          }
        }, {
          start: {
            line: 202,
            column: 35
          },
          end: {
            line: 202,
            column: 72
          }
        }],
        line: 202
      },
      "10": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "11": {
        loc: {
          start: {
            line: 256,
            column: 15
          },
          end: {
            line: 256,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 15
          },
          end: {
            line: 256,
            column: 35
          }
        }, {
          start: {
            line: 256,
            column: 39
          },
          end: {
            line: 256,
            column: 57
          }
        }],
        line: 256
      },
      "12": {
        loc: {
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 269,
            column: 23
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 269,
            column: 23
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "13": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 282,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 282,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "14": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 298,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "15": {
        loc: {
          start: {
            line: 325,
            column: 29
          },
          end: {
            line: 325,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 325,
            column: 49
          },
          end: {
            line: 325,
            column: 56
          }
        }, {
          start: {
            line: 325,
            column: 59
          },
          end: {
            line: 325,
            column: 68
          }
        }],
        line: 325
      },
      "16": {
        loc: {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 337,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "17": {
        loc: {
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 362,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 357,
            column: 12
          },
          end: {
            line: 362,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 357
      },
      "18": {
        loc: {
          start: {
            line: 359,
            column: 16
          },
          end: {
            line: 361,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 16
          },
          end: {
            line: 361,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "19": {
        loc: {
          start: {
            line: 359,
            column: 20
          },
          end: {
            line: 359,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 359,
            column: 20
          },
          end: {
            line: 359,
            column: 30
          }
        }, {
          start: {
            line: 359,
            column: 34
          },
          end: {
            line: 359,
            column: 45
          }
        }],
        line: 359
      },
      "20": {
        loc: {
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 367,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "21": {
        loc: {
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 386,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 384,
            column: 12
          },
          end: {
            line: 386,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 384
      },
      "22": {
        loc: {
          start: {
            line: 395,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 395,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 395
      },
      "23": {
        loc: {
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 395,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 395,
            column: 44
          }
        }, {
          start: {
            line: 395,
            column: 48
          },
          end: {
            line: 395,
            column: 76
          }
        }, {
          start: {
            line: 395,
            column: 80
          },
          end: {
            line: 395,
            column: 112
          }
        }],
        line: 395
      },
      "24": {
        loc: {
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 400,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 400,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      },
      "25": {
        loc: {
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 398,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 398,
            column: 39
          }
        }, {
          start: {
            line: 398,
            column: 43
          },
          end: {
            line: 398,
            column: 73
          }
        }, {
          start: {
            line: 398,
            column: 77
          },
          end: {
            line: 398,
            column: 106
          }
        }],
        line: 398
      },
      "26": {
        loc: {
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 403,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 403,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "27": {
        loc: {
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 401,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 401,
            column: 43
          }
        }, {
          start: {
            line: 401,
            column: 47
          },
          end: {
            line: 401,
            column: 78
          }
        }],
        line: 401
      },
      "28": {
        loc: {
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 412,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 412,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "29": {
        loc: {
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 414,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 414,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 413
      },
      "30": {
        loc: {
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 413,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 413,
            column: 12
          },
          end: {
            line: 413,
            column: 38
          }
        }, {
          start: {
            line: 413,
            column: 42
          },
          end: {
            line: 413,
            column: 67
          }
        }],
        line: 413
      },
      "31": {
        loc: {
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 416,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 8
          },
          end: {
            line: 416,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "32": {
        loc: {
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 415,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 415,
            column: 12
          },
          end: {
            line: 415,
            column: 38
          }
        }, {
          start: {
            line: 415,
            column: 42
          },
          end: {
            line: 415,
            column: 67
          }
        }],
        line: 415
      },
      "33": {
        loc: {
          start: {
            line: 424,
            column: 27
          },
          end: {
            line: 424,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 424,
            column: 27
          },
          end: {
            line: 424,
            column: 56
          }
        }, {
          start: {
            line: 424,
            column: 61
          },
          end: {
            line: 424,
            column: 71
          }
        }, {
          start: {
            line: 424,
            column: 75
          },
          end: {
            line: 424,
            column: 113
          }
        }],
        line: 424
      },
      "34": {
        loc: {
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 426,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 426,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 425
      },
      "35": {
        loc: {
          start: {
            line: 425,
            column: 12
          },
          end: {
            line: 425,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 12
          },
          end: {
            line: 425,
            column: 21
          }
        }, {
          start: {
            line: 425,
            column: 25
          },
          end: {
            line: 425,
            column: 35
          }
        }],
        line: 425
      },
      "36": {
        loc: {
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 428,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 427,
            column: 8
          },
          end: {
            line: 428,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 427
      },
      "37": {
        loc: {
          start: {
            line: 454,
            column: 29
          },
          end: {
            line: 454,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 454,
            column: 29
          },
          end: {
            line: 454,
            column: 61
          }
        }, {
          start: {
            line: 454,
            column: 65
          },
          end: {
            line: 454,
            column: 86
          }
        }],
        line: 454
      },
      "38": {
        loc: {
          start: {
            line: 467,
            column: 12
          },
          end: {
            line: 469,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 467,
            column: 12
          },
          end: {
            line: 469,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 467
      },
      "39": {
        loc: {
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 478,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 478,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      },
      "40": {
        loc: {
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 482,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 482,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 480
      },
      "41": {
        loc: {
          start: {
            line: 485,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 485,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 485
      },
      "42": {
        loc: {
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 492,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 492,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "43": {
        loc: {
          start: {
            line: 507,
            column: 12
          },
          end: {
            line: 511,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 507,
            column: 12
          },
          end: {
            line: 511,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 507
      },
      "44": {
        loc: {
          start: {
            line: 509,
            column: 44
          },
          end: {
            line: 509,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 509,
            column: 44
          },
          end: {
            line: 509,
            column: 69
          }
        }, {
          start: {
            line: 509,
            column: 73
          },
          end: {
            line: 509,
            column: 75
          }
        }],
        line: 509
      },
      "45": {
        loc: {
          start: {
            line: 510,
            column: 47
          },
          end: {
            line: 510,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 510,
            column: 72
          },
          end: {
            line: 510,
            column: 85
          }
        }, {
          start: {
            line: 510,
            column: 88
          },
          end: {
            line: 510,
            column: 103
          }
        }],
        line: 510
      },
      "46": {
        loc: {
          start: {
            line: 514,
            column: 23
          },
          end: {
            line: 514,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 514,
            column: 48
          },
          end: {
            line: 514,
            column: 61
          }
        }, {
          start: {
            line: 514,
            column: 64
          },
          end: {
            line: 514,
            column: 79
          }
        }],
        line: 514
      },
      "47": {
        loc: {
          start: {
            line: 524,
            column: 12
          },
          end: {
            line: 526,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 12
          },
          end: {
            line: 526,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 524
      },
      "48": {
        loc: {
          start: {
            line: 527,
            column: 12
          },
          end: {
            line: 529,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 527,
            column: 12
          },
          end: {
            line: 529,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 527
      },
      "49": {
        loc: {
          start: {
            line: 532,
            column: 84
          },
          end: {
            line: 532,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 532,
            column: 84
          },
          end: {
            line: 532,
            column: 98
          }
        }, {
          start: {
            line: 532,
            column: 102
          },
          end: {
            line: 532,
            column: 103
          }
        }],
        line: 532
      },
      "50": {
        loc: {
          start: {
            line: 532,
            column: 105
          },
          end: {
            line: 532,
            column: 134
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 532,
            column: 105
          },
          end: {
            line: 532,
            column: 121
          }
        }, {
          start: {
            line: 532,
            column: 125
          },
          end: {
            line: 532,
            column: 134
          }
        }],
        line: 532
      },
      "51": {
        loc: {
          start: {
            line: 532,
            column: 136
          },
          end: {
            line: 532,
            column: 222
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 532,
            column: 166
          },
          end: {
            line: 532,
            column: 171
          }
        }, {
          start: {
            line: 532,
            column: 174
          },
          end: {
            line: 532,
            column: 222
          }
        }],
        line: 532
      },
      "52": {
        loc: {
          start: {
            line: 532,
            column: 174
          },
          end: {
            line: 532,
            column: 222
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 532,
            column: 205
          },
          end: {
            line: 532,
            column: 211
          }
        }, {
          start: {
            line: 532,
            column: 214
          },
          end: {
            line: 532,
            column: 222
          }
        }],
        line: 532
      },
      "53": {
        loc: {
          start: {
            line: 550,
            column: 12
          },
          end: {
            line: 554,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 550,
            column: 12
          },
          end: {
            line: 554,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 550
      },
      "54": {
        loc: {
          start: {
            line: 552,
            column: 44
          },
          end: {
            line: 552,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 552,
            column: 44
          },
          end: {
            line: 552,
            column: 69
          }
        }, {
          start: {
            line: 552,
            column: 73
          },
          end: {
            line: 552,
            column: 75
          }
        }],
        line: 552
      },
      "55": {
        loc: {
          start: {
            line: 553,
            column: 47
          },
          end: {
            line: 553,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 553,
            column: 72
          },
          end: {
            line: 553,
            column: 85
          }
        }, {
          start: {
            line: 553,
            column: 88
          },
          end: {
            line: 553,
            column: 103
          }
        }],
        line: 553
      },
      "56": {
        loc: {
          start: {
            line: 557,
            column: 23
          },
          end: {
            line: 557,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 557,
            column: 48
          },
          end: {
            line: 557,
            column: 61
          }
        }, {
          start: {
            line: 557,
            column: 64
          },
          end: {
            line: 557,
            column: 79
          }
        }],
        line: 557
      },
      "57": {
        loc: {
          start: {
            line: 573,
            column: 12
          },
          end: {
            line: 574,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 573,
            column: 12
          },
          end: {
            line: 574,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 573
      },
      "58": {
        loc: {
          start: {
            line: 573,
            column: 16
          },
          end: {
            line: 573,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 573,
            column: 16
          },
          end: {
            line: 573,
            column: 31
          }
        }, {
          start: {
            line: 573,
            column: 35
          },
          end: {
            line: 573,
            column: 67
          }
        }],
        line: 573
      },
      "59": {
        loc: {
          start: {
            line: 575,
            column: 12
          },
          end: {
            line: 576,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 575,
            column: 12
          },
          end: {
            line: 576,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 575
      },
      "60": {
        loc: {
          start: {
            line: 575,
            column: 16
          },
          end: {
            line: 575,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 575,
            column: 16
          },
          end: {
            line: 575,
            column: 28
          }
        }, {
          start: {
            line: 575,
            column: 32
          },
          end: {
            line: 575,
            column: 58
          }
        }],
        line: 575
      },
      "61": {
        loc: {
          start: {
            line: 577,
            column: 12
          },
          end: {
            line: 578,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 577,
            column: 12
          },
          end: {
            line: 578,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 577
      },
      "62": {
        loc: {
          start: {
            line: 577,
            column: 16
          },
          end: {
            line: 577,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 577,
            column: 16
          },
          end: {
            line: 577,
            column: 30
          }
        }, {
          start: {
            line: 577,
            column: 34
          },
          end: {
            line: 577,
            column: 64
          }
        }],
        line: 577
      },
      "63": {
        loc: {
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 580,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 579,
            column: 12
          },
          end: {
            line: 580,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 579
      },
      "64": {
        loc: {
          start: {
            line: 579,
            column: 16
          },
          end: {
            line: 579,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 579,
            column: 16
          },
          end: {
            line: 579,
            column: 31
          }
        }, {
          start: {
            line: 579,
            column: 35
          },
          end: {
            line: 579,
            column: 67
          }
        }],
        line: 579
      },
      "65": {
        loc: {
          start: {
            line: 581,
            column: 12
          },
          end: {
            line: 582,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 581,
            column: 12
          },
          end: {
            line: 582,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 581
      },
      "66": {
        loc: {
          start: {
            line: 581,
            column: 16
          },
          end: {
            line: 581,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 581,
            column: 16
          },
          end: {
            line: 581,
            column: 35
          }
        }, {
          start: {
            line: 581,
            column: 39
          },
          end: {
            line: 581,
            column: 79
          }
        }],
        line: 581
      },
      "67": {
        loc: {
          start: {
            line: 583,
            column: 12
          },
          end: {
            line: 584,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 583,
            column: 12
          },
          end: {
            line: 584,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 583
      },
      "68": {
        loc: {
          start: {
            line: 583,
            column: 16
          },
          end: {
            line: 583,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 583,
            column: 16
          },
          end: {
            line: 583,
            column: 37
          }
        }, {
          start: {
            line: 583,
            column: 41
          },
          end: {
            line: 583,
            column: 85
          }
        }],
        line: 583
      },
      "69": {
        loc: {
          start: {
            line: 594,
            column: 12
          },
          end: {
            line: 595,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 594,
            column: 12
          },
          end: {
            line: 595,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 594
      },
      "70": {
        loc: {
          start: {
            line: 598,
            column: 12
          },
          end: {
            line: 601,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 598,
            column: 12
          },
          end: {
            line: 601,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 598
      },
      "71": {
        loc: {
          start: {
            line: 612,
            column: 12
          },
          end: {
            line: 615,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 612,
            column: 12
          },
          end: {
            line: 615,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 612
      },
      "72": {
        loc: {
          start: {
            line: 646,
            column: 46
          },
          end: {
            line: 646,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 646,
            column: 46
          },
          end: {
            line: 646,
            column: 76
          }
        }, {
          start: {
            line: 646,
            column: 80
          },
          end: {
            line: 646,
            column: 81
          }
        }],
        line: 646
      },
      "73": {
        loc: {
          start: {
            line: 648,
            column: 12
          },
          end: {
            line: 650,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 648,
            column: 12
          },
          end: {
            line: 650,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 648
      },
      "74": {
        loc: {
          start: {
            line: 649,
            column: 48
          },
          end: {
            line: 649,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 649,
            column: 48
          },
          end: {
            line: 649,
            column: 76
          }
        }, {
          start: {
            line: 649,
            column: 80
          },
          end: {
            line: 649,
            column: 81
          }
        }],
        line: 649
      },
      "75": {
        loc: {
          start: {
            line: 652,
            column: 12
          },
          end: {
            line: 655,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 652,
            column: 12
          },
          end: {
            line: 655,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 652
      },
      "76": {
        loc: {
          start: {
            line: 654,
            column: 43
          },
          end: {
            line: 654,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 654,
            column: 43
          },
          end: {
            line: 654,
            column: 66
          }
        }, {
          start: {
            line: 654,
            column: 70
          },
          end: {
            line: 654,
            column: 71
          }
        }],
        line: 654
      },
      "77": {
        loc: {
          start: {
            line: 657,
            column: 50
          },
          end: {
            line: 657,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 657,
            column: 50
          },
          end: {
            line: 657,
            column: 84
          }
        }, {
          start: {
            line: 657,
            column: 88
          },
          end: {
            line: 657,
            column: 89
          }
        }],
        line: 657
      },
      "78": {
        loc: {
          start: {
            line: 659,
            column: 46
          },
          end: {
            line: 659,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 659,
            column: 46
          },
          end: {
            line: 659,
            column: 76
          }
        }, {
          start: {
            line: 659,
            column: 80
          },
          end: {
            line: 659,
            column: 81
          }
        }],
        line: 659
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/curriculumDiscoveryService.ts",
      mappings: "AAAA,OAAO,WAAW,MAAM,oBAAoB,CAAC;AAC7C,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AACxB,OAAO,EAAE,uBAAuB,EAAE,MAAM,2BAA2B,CAAC;AACpE,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AAyCxF,MAAM,wBAAwB,GAAG,CAAC,CAAC,MAAM,CAAC;IACxC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACxB,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;IACrB,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE;IAClB,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE;IACpB,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC5B,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC9B,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;IAC3E,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;IACpD,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAClC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;CACvC,CAAC,CAAC;AAEH,MAAM,OAAO,0BAA2B,SAAQ,WAAW;IACjD,uBAAuB,CAA0B;IACjD,mBAAmB,GAAoC,IAAI,GAAG,EAAE,CAAC;IACjE,OAAO,GAAsB,EAAE,CAAC;IAExC;QACE,KAAK,CAAC,4BAA4B,CAAC,CAAC;QACpC,IAAI,CAAC,uBAAuB,GAAG,IAAI,uBAAuB,EAAE,CAAC;QAC7D,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED;;OAEG;IACK,wBAAwB;QAC9B,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,EAAE,EAAE,SAAS;gBACb,IAAI,EAAE,8CAA8C;gBACpD,OAAO,EAAE,mCAAmC;gBAC5C,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE;oBACV,uDAAuD;oBACvD,wEAAwE;oBACxE,uGAAuG;iBACxG;gBACD,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,8CAA8C;gBACzD,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,CAAC;gBACX,cAAc,EAAE,CAAC,2BAA2B,CAAC;gBAC7C,eAAe,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC;aACtD;YACD;gBACE,EAAE,EAAE,aAAa;gBACjB,IAAI,EAAE,+BAA+B;gBACrC,OAAO,EAAE,+BAA+B;gBACxC,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE;oBACV,6CAA6C;oBAC7C,wDAAwD;oBACxD,yEAAyE;iBAC1E;gBACD,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,0CAA0C;gBACrD,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,CAAC;gBACX,cAAc,EAAE,CAAC,uBAAuB,EAAE,eAAe,CAAC;gBAC1D,eAAe,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,CAAC;aACpD;YACD;gBACE,EAAE,EAAE,QAAQ;gBACZ,IAAI,EAAE,wCAAwC;gBAC9C,OAAO,EAAE,8BAA8B;gBACvC,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE;oBACV,yCAAyC;oBACzC,0DAA0D;iBAC3D;gBACD,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,yCAAyC;gBACpD,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,CAAC;gBACX,cAAc,EAAE,CAAC,sBAAsB,CAAC;gBACxC,eAAe,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC;aAC3C;SACF,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,iBAAiB;QACrB,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;YAC3D,MAAM,YAAY,GAAyB,EAAE,CAAC;YAE9C,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;gBAC5D,IAAI,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;oBAC9D,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;oBACxD,YAAY,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC;oBAEhC,wBAAwB;oBACxB,MAAM,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;gBACnC,CAAC;gBAAC,OAAO,KAAK,EAAE,CAAC;oBACf,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAE,EAC9B,qCAAqC,MAAM,CAAC,IAAI,EAAE,CACnD,CAAC;gBACJ,CAAC;gBAED,sCAAsC;gBACtC,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACtC,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,YAAY,CAAC,MAAM,uBAAuB,CAAC,CAAC;YAC3E,OAAO,YAAY,CAAC;QACtB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,yCAAyC,CAAC,CAAC;YACxE,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,kBAAkB,CAAC,MAAuB;QACtD,MAAM,SAAS,GAAyB,EAAE,CAAC;QAC3C,MAAM,WAAW,GAAG,IAAI,GAAG,EAAU,CAAC;QAEtC,KAAK,MAAM,SAAS,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;YAC1C,IAAI,CAAC;gBACH,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,SAAS,CACxC,SAAS,EACT,MAAM,EACN,WAAW,EACX,CAAC,CACF,CAAC;gBACF,SAAS,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;YACnC,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,IAAI,CAAC,MAAM,CAAC,KAAK,CACf,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,EAAE,EACzC,4BAA4B,CAC7B,CAAC;YACJ,CAAC;QACH,CAAC;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,SAAS,CACrB,GAAW,EACX,MAAuB,EACvB,WAAwB,EACxB,KAAa;QAEb,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,IAAI,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YACpD,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,kCAAkC;QAClC,IAAI,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;YACpE,OAAO,EAAE,CAAC;QACZ,CAAC;QAED,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,MAAM,SAAS,GAAyB,EAAE,CAAC;QAE3C,IAAI,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,GAAG,YAAY,KAAK,GAAG,CAAC,CAAC;YAE7D,2CAA2C;YAC3C,MAAM,aAAa,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBACzB,MAAM,IAAI,KAAK,CAAC,0BAA0B,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;YACnE,CAAC;YAED,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,GAAG,EAAE;gBACpC,OAAO,EAAE;oBACP,QAAQ,EAAE,iEAAiE;iBAC5E;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,MAAM,IAAI,KAAK,CAAC,QAAQ,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;YACrE,CAAC;YAED,yCAAyC;YACzC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa;gBAChE,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;YAChE,CAAC;YAED,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YACnC,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE7B,iDAAiD;YACjD,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;YAC1E,SAAS,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;YAEjC,uCAAuC;YACvC,IAAI,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;gBAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;gBAE1D,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;oBACzB,MAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBACpC,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;oBACnF,SAAS,CAAC,IAAI,CAAC,GAAG,eAAe,CAAC,CAAC;gBACrC,CAAC;YACH,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,sBAAsB,CAAC,CAAC;QAC5D,CAAC;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,wBAAwB,CACpC,CAAqB,EACrB,OAAe,EACf,MAAuB;QAEvB,MAAM,SAAS,GAAyB,EAAE,CAAC;QAE3C,iEAAiE;QACjE,MAAM,aAAa,GAAG,CAAC,CAAC,iFAAiF,CAAC,CAAC;QAE3G,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE;YAChC,MAAM,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;YACzB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAChC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;YACrC,MAAM,UAAU,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC;YAEhD,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,UAAU,CAAC,EAAE,CAAC;gBAC9D,OAAO;YACT,CAAC;YAED,wBAAwB;YACxB,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;YAEtD,4BAA4B;YAC5B,MAAM,QAAQ,GAAG,IAAI,CAAC,sBAAsB,CAAC;gBAC3C,GAAG,EAAE,WAAW;gBAChB,KAAK,EAAE,QAAQ,IAAI,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC;gBACxD,MAAM,EAAE,MAAM,CAAC,IAAI;gBACnB,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,OAAO,EAAE,UAAU;gBACnB,OAAO;aACR,CAAC,CAAC;YAEH,IAAI,QAAQ,EAAE,CAAC;gBACb,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACK,oBAAoB,CAAC,QAAgB,EAAE,OAAe;QAC5D,MAAM,YAAY,GAAG,CAAC,QAAQ,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;QAE9D,MAAM,kBAAkB,GAAG;YACzB,YAAY;YACZ,oBAAoB;YACpB,gBAAgB;YAChB,mBAAmB;YACnB,cAAc;YACd,OAAO;YACP,eAAe;YACf,gBAAgB;YAChB,YAAY;YACZ,QAAQ;YACR,UAAU;YACV,kBAAkB;YAClB,aAAa;YACb,SAAS;YACT,gBAAgB;YAChB,uBAAuB;YACvB,oBAAoB;YACpB,gBAAgB;SACjB,CAAC;QAEF,+CAA+C;QAC/C,MAAM,oBAAoB,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAC/D,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAC/B,CAAC;QAEF,mCAAmC;QACnC,MAAM,eAAe,GAAG;YACtB,MAAM;YACN,aAAa;YACb,YAAY;YACZ,MAAM;YACN,OAAO;YACP,UAAU;YACV,SAAS;YACT,WAAW;YACX,QAAQ;YACR,QAAQ;YACR,WAAW;SACZ,CAAC;QAEF,MAAM,iBAAiB,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CACzD,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAC/B,CAAC;QAEF,OAAO,oBAAoB,IAAI,CAAC,iBAAiB,CAAC;IACpD,CAAC;IAED;;OAEG;IACK,sBAAsB,CAC5B,CAAqB,EACrB,OAAe,EACf,MAAuB;QAEvB,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,MAAM,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC;QAElC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE;YAC/B,MAAM,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;YACzB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAChC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAEnD,IAAI,CAAC,IAAI;gBAAE,OAAO;YAElB,wBAAwB;YACxB,IAAI,WAAmB,CAAC;YACxB,IAAI,CAAC;gBACH,WAAW,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;YAClD,CAAC;YAAC,MAAM,CAAC;gBACP,OAAO,CAAC,oBAAoB;YAC9B,CAAC;YAED,yCAAyC;YACzC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;gBAC3E,OAAO;YACT,CAAC;YAED,yCAAyC;YACzC,MAAM,sBAAsB,GAAG;gBAC7B,YAAY;gBACZ,OAAO;gBACP,SAAS;gBACT,SAAS;gBACT,QAAQ;gBACR,UAAU;gBACV,QAAQ;gBACR,WAAW;gBACX,YAAY;gBACZ,SAAS;aACV,CAAC;YAEF,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;gBACzE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC1B,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,oBAAoB;IACzD,CAAC;IAED;;OAEG;IACK,sBAAsB,CAAC,MAO9B;QACC,IAAI,CAAC;YACH,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC;YAEzD,0CAA0C;YAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;YACvD,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;YAC3D,MAAM,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;YACrE,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;YAE7D,MAAM,QAAQ,GAAuB;gBACnC,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC;gBAChC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC7B,GAAG;gBACH,MAAM;gBACN,UAAU,EAAE,YAAY;gBACxB,QAAQ;gBACR,KAAK;gBACL,OAAO;gBACP,YAAY;gBACZ,QAAQ;gBACR,WAAW,EAAE,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS;gBACpD,QAAQ;gBACR,QAAQ,EAAE,IAAI;gBACd,YAAY,EAAE,IAAI,IAAI,EAAE;gBACxB,gBAAgB,EAAE,CAAC;gBACnB,cAAc,EAAE,SAAS;aAC1B,CAAC;YAEF,oBAAoB;YACpB,MAAM,UAAU,GAAG,wBAAwB,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAChE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;gBACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CACd,EAAE,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,EAC7C,wCAAwC,CACzC,CAAC;gBACF,OAAO,IAAI,CAAC;YACd,CAAC;YAED,OAAO,QAAQ,CAAC;QAClB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,qCAAqC,CAAC,CAAC;YAC5E,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED;;OAEG;IACK,YAAY,CAAC,IAAY;QAC/B,MAAM,aAAa,GAAG;YACpB,gBAAgB;YAChB,eAAe;YACf,iCAAiC;YACjC,eAAe;SAChB,CAAC;QAEF,KAAK,MAAM,OAAO,IAAI,aAAa,EAAE,CAAC;YACpC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAClC,IAAI,KAAK,EAAE,CAAC;gBACV,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjC,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE,EAAE,CAAC;oBAC9B,OAAO,KAAK,CAAC;gBACf,CAAC;YACH,CAAC;QACH,CAAC;QAED,yBAAyB;QACzB,IAAI,iCAAiC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;YACjD,OAAO,CAAC,CAAC;QACX,CAAC;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACK,cAAc,CAAC,IAAY;QACjC,MAAM,eAAe,GAA6B;YAChD,aAAa,EAAE,CAAC,OAAO,EAAE,cAAc,EAAE,gBAAgB,CAAC;YAC1D,QAAQ,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,mBAAmB,CAAC;YAC/D,SAAS,EAAE,CAAC,UAAU,EAAE,gBAAgB,EAAE,MAAM,EAAE,UAAU,CAAC;YAC7D,SAAS,EAAE,CAAC,UAAU,EAAE,WAAW,CAAC;YACpC,gBAAgB,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,UAAU,EAAE,YAAY,CAAC;YACtG,oBAAoB,EAAE,CAAC,qBAAqB,EAAE,UAAU,EAAE,KAAK,EAAE,qBAAqB,EAAE,SAAS,CAAC;YAClG,MAAM,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,cAAc,CAAC;SAC9D,CAAC;QAEF,KAAK,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,CAAC;YAClE,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;gBACnD,OAAO,OAAO,CAAC;YACjB,CAAC;QACH,CAAC;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,IAAY;QACtC,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAErC,IAAI,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE,CAAC;YACzG,OAAO,YAAY,CAAC;QACtB,CAAC;QACD,IAAI,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;YACnG,OAAO,UAAU,CAAC;QACpB,CAAC;QACD,IAAI,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC;YACvE,OAAO,WAAW,CAAC;QACrB,CAAC;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,GAAW;QACjC,MAAM,QAAQ,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;QACnC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;YAAE,OAAO,KAAK,CAAC;QAC5C,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;QAC3E,IAAI,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;YAAE,OAAO,MAAM,CAAC;QAC3E,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,IAAY;QAClC,MAAM,SAAS,GAAG,4CAA4C,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1E,MAAM,UAAU,GAAG,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,IAAI,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAE3G,IAAI,SAAS,IAAI,UAAU;YAAE,OAAO,MAAM,CAAC;QAC3C,IAAI,SAAS;YAAE,OAAO,IAAI,CAAC;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACK,kBAAkB,CAAC,GAAW;QACpC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED;;OAEG;IACK,UAAU,CAAC,KAAa;QAC9B,OAAO,KAAK;aACT,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC;aACpC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;aACvB,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;aACpB,IAAI,EAAE,CAAC;IACZ,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,GAAW;QACrC,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;YAC5B,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,qBAAqB,CAAC;YAC3E,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC;QAAC,MAAM,CAAC;YACP,OAAO,qBAAqB,CAAC;QAC/B,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,gBAAgB,CAAC,UAAkB;QAKvC,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,MAAM,IAAI,KAAK,CAAC,YAAY,UAAU,YAAY,CAAC,CAAC;YACtD,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kCAAkC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;YAErE,2BAA2B;YAC3B,QAAQ,CAAC,gBAAgB,EAAE,CAAC;YAC5B,QAAQ,CAAC,cAAc,GAAG,SAAS,CAAC;YAEpC,kCAAkC;YAClC,MAAM,aAAa,GAAG,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACvD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBACzB,MAAM,IAAI,KAAK,CAAC,0BAA0B,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;YACnE,CAAC;YAED,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YAE/C,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBACjB,MAAM,IAAI,KAAK,CAAC,QAAQ,QAAQ,CAAC,MAAM,KAAK,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;YACrE,CAAC;YAED,wCAAwC;YACxC,MAAM,WAAW,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,aAAa;YACnD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,EAAE,CAAC;gBAC7C,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;YACzD,CAAC;YAED,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,WAAW,EAAE,CAAC;YAE5C,uCAAuC;YACvC,IAAI,MAAM,CAAC,UAAU,GAAG,WAAW,EAAE,CAAC;gBACpC,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;YACxD,CAAC;YAED,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEvC,sBAAsB;YACtB,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC;YACtC,QAAQ,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;YACnC,QAAQ,CAAC,cAAc,GAAG,YAAY,CAAC;YAEvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,QAAQ,CAAC,KAAK,KAAK,QAAQ,CAAC,QAAQ,SAAS,CAAC,CAAC;YAExF,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,QAAQ,CAAC,GAAG,EAAE,6CAA6C;aACtE,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,6BAA6B,CAAC,CAAC;YAExE,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1D,IAAI,QAAQ,EAAE,CAAC;gBACb,QAAQ,CAAC,cAAc,GAAG,QAAQ,CAAC;gBACnC,QAAQ,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,IAAI,EAAE,CAAC;gBAC5D,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAC3F,CAAC;YAED,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;aAChE,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,eAAe,CACnB,UAAkB,EAClB,MAAc;QAMd,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,MAAM,IAAI,KAAK,CAAC,YAAY,UAAU,YAAY,CAAC,CAAC;YACtD,CAAC;YAED,IAAI,QAAQ,CAAC,cAAc,KAAK,YAAY,EAAE,CAAC;gBAC7C,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;YACnE,CAAC;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wBAAwB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;YAE3D,wBAAwB;YACxB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,WAAW,CAC7D,MAAM,EACN,QAAQ,CAAC,KAAK,IAAI,CAAC,EACnB,QAAQ,CAAC,OAAO,IAAI,SAAS,EAC7B,QAAQ,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,EACtF,QAAQ,CAAC,KAAK,EACd;gBACE,eAAe,EAAE,QAAQ,CAAC,MAAM;gBAChC,WAAW,EAAE,QAAQ,CAAC,GAAG;gBACzB,YAAY,EAAE,QAAQ,CAAC,YAAY;gBACnC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;gBAC3B,cAAc,EAAE,IAAI;aACrB,CACF,CAAC;YAEF,yBAAyB;YACzB,QAAQ,CAAC,cAAc,GAAG,WAAW,CAAC;YAEtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0BAA0B,QAAQ,kBAAkB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;YAEvF,OAAO;gBACL,OAAO,EAAE,IAAI;gBACb,QAAQ;aACT,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,4BAA4B,CAAC,CAAC;YAEvE,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1D,IAAI,QAAQ,EAAE,CAAC;gBACb,QAAQ,CAAC,cAAc,GAAG,QAAQ,CAAC;gBACnC,QAAQ,CAAC,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,IAAI,EAAE,CAAC;gBAC5D,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC;YAC3F,CAAC;YAED,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,eAAe;aAChE,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,sBAAsB;QACpB,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACH,oBAAoB,CAAC,MAOpB;QACC,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAEhD,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9B,IAAI,MAAM,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ;gBAAE,OAAO,KAAK,CAAC;YACtE,IAAI,MAAM,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK;gBAAE,OAAO,KAAK,CAAC;YAC7D,IAAI,MAAM,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO;gBAAE,OAAO,KAAK,CAAC;YACnE,IAAI,MAAM,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ;gBAAE,OAAO,KAAK,CAAC;YACtE,IAAI,MAAM,CAAC,YAAY,IAAI,GAAG,CAAC,YAAY,KAAK,MAAM,CAAC,YAAY;gBAAE,OAAO,KAAK,CAAC;YAClF,IAAI,MAAM,CAAC,cAAc,IAAI,GAAG,CAAC,cAAc,KAAK,MAAM,CAAC,cAAc;gBAAE,OAAO,KAAK,CAAC;YACxF,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,cAAc,CAAC,UAAkB;QACrC,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ;gBAAE,OAAO,KAAK,CAAC;YAE5B,mCAAmC;YACnC,MAAM,aAAa,GAAG,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACvD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,8BAA8B,CAAC,CAAC;gBACpF,OAAO,KAAK,CAAC;YACf,CAAC;YAED,uCAAuC;YACvC,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YACnE,MAAM,WAAW,GAAG,QAAQ,CAAC,EAAE,CAAC;YAEhC,QAAQ,CAAC,QAAQ,GAAG,WAAW,CAAC;YAChC,QAAQ,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;YAEnC,OAAO,WAAW,CAAC;QACrB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,2BAA2B,CAAC,CAAC;YACtE,MAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1D,IAAI,QAAQ,EAAE,CAAC;gBACb,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAC1B,QAAQ,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC;YACrC,CAAC;YACD,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED;;OAEG;IACH,qBAAqB,CAAC,QAA4B;QAChD,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC;IAED;;OAEG;IACH,wBAAwB,CAAC,UAAkB;QACzC,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACH,iBAAiB;QAQf,MAAM,SAAS,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAEhD,MAAM,KAAK,GAAG;YACZ,cAAc,EAAE,SAAS,CAAC,MAAM;YAChC,UAAU,EAAE,EAA4B;YACxC,SAAS,EAAE,EAA4B;YACvC,OAAO,EAAE,EAA4B;YACrC,QAAQ,EAAE,EAA4B;YACtC,UAAU,EAAE,EAA4B;SACzC,CAAC;QAEF,SAAS,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACxB,oBAAoB;YACpB,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YAE3E,mBAAmB;YACnB,IAAI,GAAG,CAAC,OAAO,EAAE,CAAC;gBAChB,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACzE,CAAC;YAED,iBAAiB;YACjB,IAAI,GAAG,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;gBAC5B,MAAM,QAAQ,GAAG,SAAS,GAAG,CAAC,KAAK,EAAE,CAAC;gBACtC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YAC/D,CAAC;YAED,kBAAkB;YAClB,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YAEnF,oBAAoB;YACpB,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QAEH,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,EAAU;QACtB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3D,CAAC;CACF;AAED,4BAA4B;AAC5B,MAAM,CAAC,MAAM,0BAA0B,GAAG,IAAI,0BAA0B,EAAE,CAAC",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/curriculumDiscoveryService.ts"],
      sourcesContent: ["import BaseService from './base/BaseService';\nimport * as cheerio from 'cheerio';\nimport { z } from 'zod';\nimport { CurriculumImportService } from './curriculumImportService';\nimport { safeFetch, isValidExternalURL, validateFileSize } from '../utils/urlValidator';\n\nexport interface CurriculumDocument {\n  id: string;\n  title: string;\n  url: string;\n  source: string;\n  sourceType: 'government' | 'ministry' | 'department';\n  province: string;\n  grade?: number;\n  gradeRange?: { min: number; max: number };\n  subject?: string;\n  documentType: 'curriculum' | 'guideline' | 'assessment' | 'resource';\n  fileType: 'pdf' | 'docx' | 'html' | 'unknown';\n  publishedDate?: Date;\n  lastModified?: Date;\n  fileSize?: number;\n  description?: string;\n  language: 'en' | 'fr' | 'both';\n  isActive: boolean;\n  lastVerified: Date;\n  downloadAttempts: number;\n  downloadStatus: 'pending' | 'downloaded' | 'processed' | 'failed';\n  processingErrors?: string[];\n}\n\nexport interface DiscoverySource {\n  id: string;\n  name: string;\n  baseUrl: string;\n  province: string;\n  searchUrls: string[];\n  isActive: boolean;\n  lastScanDate?: Date;\n  robotsTxt?: string;\n  crawlDelay: number; // milliseconds\n  maxDepth: number;\n  allowedDomains: string[];\n  excludePatterns: string[];\n}\n\nconst CurriculumDocumentSchema = z.object({\n  title: z.string().min(1),\n  url: z.string().url(),\n  source: z.string(),\n  province: z.string(),\n  grade: z.number().optional(),\n  subject: z.string().optional(),\n  documentType: z.enum(['curriculum', 'guideline', 'assessment', 'resource']),\n  fileType: z.enum(['pdf', 'docx', 'html', 'unknown']),\n  description: z.string().optional(),\n  language: z.enum(['en', 'fr', 'both']),\n});\n\nexport class CurriculumDiscoveryService extends BaseService {\n  private curriculumImportService: CurriculumImportService;\n  private discoveredDocuments: Map<string, CurriculumDocument> = new Map();\n  private sources: DiscoverySource[] = [];\n\n  constructor() {\n    super('CurriculumDiscoveryService');\n    this.curriculumImportService = new CurriculumImportService();\n    this.initializeDefaultSources();\n  }\n\n  /**\n   * Initialize default government curriculum sources\n   */\n  private initializeDefaultSources(): void {\n    this.sources = [\n      {\n        id: 'pei-gov',\n        name: 'Prince Edward Island Department of Education',\n        baseUrl: 'https://www.princeedwardisland.ca',\n        province: 'PE',\n        searchUrls: [\n          'https://www.princeedwardisland.ca/en/topic/curriculum',\n          'https://www.princeedwardisland.ca/en/topic/curriculum-french-immersion',\n          'https://www.princeedwardisland.ca/en/information/education-and-lifelong-learning/curriculum-documents',\n        ],\n        isActive: true,\n        robotsTxt: 'https://www.princeedwardisland.ca/robots.txt',\n        crawlDelay: 2000,\n        maxDepth: 3,\n        allowedDomains: ['www.princeedwardisland.ca'],\n        excludePatterns: ['/search/', '/contact/', '/about/'],\n      },\n      {\n        id: 'ontario-edu',\n        name: 'Ontario Ministry of Education',\n        baseUrl: 'https://www.dcp.edu.gov.on.ca',\n        province: 'ON',\n        searchUrls: [\n          'https://www.dcp.edu.gov.on.ca/en/curriculum',\n          'https://www.dcp.edu.gov.on.ca/en/curriculum/elementary',\n          'https://www.dcp.edu.gov.on.ca/en/curriculum/elementary/french-immersion',\n        ],\n        isActive: true,\n        robotsTxt: 'https://www.dcp.edu.gov.on.ca/robots.txt',\n        crawlDelay: 3000,\n        maxDepth: 3,\n        allowedDomains: ['www.dcp.edu.gov.on.ca', 'edu.gov.on.ca'],\n        excludePatterns: ['/search/', '/login/', '/admin/'],\n      },\n      {\n        id: 'bc-gov',\n        name: 'British Columbia Ministry of Education',\n        baseUrl: 'https://curriculum.gov.bc.ca',\n        province: 'BC',\n        searchUrls: [\n          'https://curriculum.gov.bc.ca/curriculum',\n          'https://curriculum.gov.bc.ca/curriculum/french-immersion',\n        ],\n        isActive: true,\n        robotsTxt: 'https://curriculum.gov.bc.ca/robots.txt',\n        crawlDelay: 2000,\n        maxDepth: 2,\n        allowedDomains: ['curriculum.gov.bc.ca'],\n        excludePatterns: ['/search/', '/contact/'],\n      },\n    ];\n  }\n\n  /**\n   * Discover curriculum documents from all active sources\n   */\n  async discoverDocuments(): Promise<CurriculumDocument[]> {\n    try {\n      this.logger.info('Starting curriculum document discovery');\n      const allDocuments: CurriculumDocument[] = [];\n\n      for (const source of this.sources.filter((s) => s.isActive)) {\n        try {\n          this.logger.info(`Discovering documents from ${source.name}`);\n          const documents = await this.discoverFromSource(source);\n          allDocuments.push(...documents);\n          \n          // Update last scan date\n          source.lastScanDate = new Date();\n        } catch (error) {\n          this.logger.error(\n            { error, sourceId: source.id },\n            `Failed to discover documents from ${source.name}`\n          );\n        }\n\n        // Respect crawl delay between sources\n        await this.delay(source.crawlDelay);\n      }\n\n      this.logger.info(`Discovered ${allDocuments.length} curriculum documents`);\n      return allDocuments;\n    } catch (error) {\n      this.logger.error({ error }, 'Failed to discover curriculum documents');\n      throw error;\n    }\n  }\n\n  /**\n   * Discover documents from a specific source\n   */\n  private async discoverFromSource(source: DiscoverySource): Promise<CurriculumDocument[]> {\n    const documents: CurriculumDocument[] = [];\n    const visitedUrls = new Set<string>();\n\n    for (const searchUrl of source.searchUrls) {\n      try {\n        const pageDocuments = await this.crawlPage(\n          searchUrl,\n          source,\n          visitedUrls,\n          0\n        );\n        documents.push(...pageDocuments);\n      } catch (error) {\n        this.logger.error(\n          { error, searchUrl, sourceId: source.id },\n          'Failed to crawl search URL'\n        );\n      }\n    }\n\n    return documents;\n  }\n\n  /**\n   * Crawl a page and its linked pages for curriculum documents\n   */\n  private async crawlPage(\n    url: string,\n    source: DiscoverySource,\n    visitedUrls: Set<string>,\n    depth: number\n  ): Promise<CurriculumDocument[]> {\n    if (depth > source.maxDepth || visitedUrls.has(url)) {\n      return [];\n    }\n\n    // Check if URL should be excluded\n    if (source.excludePatterns.some((pattern) => url.includes(pattern))) {\n      return [];\n    }\n\n    visitedUrls.add(url);\n    const documents: CurriculumDocument[] = [];\n\n    try {\n      this.logger.debug(`Crawling page: ${url} (depth: ${depth})`);\n      \n      // Validate and fetch page content securely\n      const urlValidation = isValidExternalURL(url);\n      if (!urlValidation.valid) {\n        throw new Error(`URL validation failed: ${urlValidation.error}`);\n      }\n\n      const response = await safeFetch(url, {\n        headers: {\n          'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      // Validate file size for large responses\n      if (!validateFileSize(response, 10 * 1024 * 1024)) { // 10MB limit\n        throw new Error('Response too large - potential DoS attempt');\n      }\n\n      const html = await response.text();\n      const $ = cheerio.load(html);\n\n      // Extract curriculum documents from current page\n      const pageDocuments = await this.extractDocumentsFromPage($, url, source);\n      documents.push(...pageDocuments);\n\n      // Find links to other curriculum pages\n      if (depth < source.maxDepth) {\n        const links = this.extractCurriculumLinks($, url, source);\n        \n        for (const link of links) {\n          await this.delay(source.crawlDelay);\n          const linkedDocuments = await this.crawlPage(link, source, visitedUrls, depth + 1);\n          documents.push(...linkedDocuments);\n        }\n      }\n    } catch (error) {\n      this.logger.error({ error, url }, 'Failed to crawl page');\n    }\n\n    return documents;\n  }\n\n  /**\n   * Extract curriculum documents from a single page\n   */\n  private async extractDocumentsFromPage(\n    $: cheerio.CheerioAPI,\n    pageUrl: string,\n    source: DiscoverySource\n  ): Promise<CurriculumDocument[]> {\n    const documents: CurriculumDocument[] = [];\n\n    // Look for PDF and DOCX links that might be curriculum documents\n    const documentLinks = $('a[href$=\".pdf\"], a[href$=\".docx\"], a[href*=\"/download/\"], a[href*=\"/resource/\"]');\n\n    documentLinks.each((_, element) => {\n      const $link = $(element);\n      const href = $link.attr('href');\n      const linkText = $link.text().trim();\n      const parentText = $link.parent().text().trim();\n\n      if (!href || !this.isCurriculumDocument(linkText, parentText)) {\n        return;\n      }\n\n      // Resolve relative URLs\n      const absoluteUrl = new URL(href, pageUrl).toString();\n\n      // Extract document metadata\n      const document = this.createDocumentFromLink({\n        url: absoluteUrl,\n        title: linkText || this.extractTitleFromUrl(absoluteUrl),\n        source: source.name,\n        province: source.province,\n        context: parentText,\n        pageUrl,\n      });\n\n      if (document) {\n        documents.push(document);\n      }\n    });\n\n    return documents;\n  }\n\n  /**\n   * Determine if a link is likely a curriculum document\n   */\n  private isCurriculumDocument(linkText: string, context: string): boolean {\n    const combinedText = (linkText + ' ' + context).toLowerCase();\n    \n    const curriculumKeywords = [\n      'curriculum',\n      'program of studies',\n      'course outline',\n      'learning outcomes',\n      'expectations',\n      'grade',\n      'subject guide',\n      'teaching guide',\n      'assessment',\n      'rubric',\n      'fran\xE7ais',\n      'french immersion',\n      'mathematics',\n      'science',\n      'social studies',\n      'english language arts',\n      'physical education',\n      'arts education',\n    ];\n\n    // Must contain at least one curriculum keyword\n    const hasCurriculumKeyword = curriculumKeywords.some((keyword) =>\n      combinedText.includes(keyword)\n    );\n\n    // Exclude non-curriculum documents\n    const excludeKeywords = [\n      'form',\n      'application',\n      'newsletter',\n      'news',\n      'event',\n      'calendar',\n      'contact',\n      'directory',\n      'budget',\n      'policy',\n      'procedure',\n    ];\n\n    const hasExcludeKeyword = excludeKeywords.some((keyword) =>\n      combinedText.includes(keyword)\n    );\n\n    return hasCurriculumKeyword && !hasExcludeKeyword;\n  }\n\n  /**\n   * Extract curriculum-related links from a page\n   */\n  private extractCurriculumLinks(\n    $: cheerio.CheerioAPI,\n    pageUrl: string,\n    source: DiscoverySource\n  ): string[] {\n    const links: string[] = [];\n    const linkElements = $('a[href]');\n\n    linkElements.each((_, element) => {\n      const $link = $(element);\n      const href = $link.attr('href');\n      const linkText = $link.text().trim().toLowerCase();\n\n      if (!href) return;\n\n      // Resolve relative URLs\n      let absoluteUrl: string;\n      try {\n        absoluteUrl = new URL(href, pageUrl).toString();\n      } catch {\n        return; // Skip invalid URLs\n      }\n\n      // Check if URL is within allowed domains\n      const url = new URL(absoluteUrl);\n      if (!source.allowedDomains.some((domain) => url.hostname.includes(domain))) {\n        return;\n      }\n\n      // Look for curriculum-related page links\n      const curriculumPageKeywords = [\n        'curriculum',\n        'grade',\n        'subject',\n        'program',\n        'course',\n        'fran\xE7ais',\n        'french',\n        'immersion',\n        'elementary',\n        'primary',\n      ];\n\n      if (curriculumPageKeywords.some((keyword) => linkText.includes(keyword))) {\n        links.push(absoluteUrl);\n      }\n    });\n\n    return Array.from(new Set(links)); // Remove duplicates\n  }\n\n  /**\n   * Create a CurriculumDocument from a link\n   */\n  private createDocumentFromLink(params: {\n    url: string;\n    title: string;\n    source: string;\n    province: string;\n    context: string;\n    pageUrl: string;\n  }): CurriculumDocument | null {\n    try {\n      const { url, title, source, province, context } = params;\n\n      // Extract metadata from title and context\n      const grade = this.extractGrade(title + ' ' + context);\n      const subject = this.extractSubject(title + ' ' + context);\n      const documentType = this.extractDocumentType(title + ' ' + context);\n      const fileType = this.extractFileType(url);\n      const language = this.extractLanguage(title + ' ' + context);\n\n      const document: CurriculumDocument = {\n        id: this.generateDocumentId(url),\n        title: this.cleanTitle(title),\n        url,\n        source,\n        sourceType: 'government',\n        province,\n        grade,\n        subject,\n        documentType,\n        fileType,\n        description: context !== title ? context : undefined,\n        language,\n        isActive: true,\n        lastVerified: new Date(),\n        downloadAttempts: 0,\n        downloadStatus: 'pending',\n      };\n\n      // Validate document\n      const validation = CurriculumDocumentSchema.safeParse(document);\n      if (!validation.success) {\n        this.logger.warn(\n          { errors: validation.error.errors, document },\n          'Invalid curriculum document discovered'\n        );\n        return null;\n      }\n\n      return document;\n    } catch (error) {\n      this.logger.error({ error, params }, 'Failed to create document from link');\n      return null;\n    }\n  }\n\n  /**\n   * Extract grade from text\n   */\n  private extractGrade(text: string): number | undefined {\n    const gradePatterns = [\n      /grade\\s+(\\d+)/i,\n      /gr\\.\\s*(\\d+)/i,\n      /\\b(\\d+)(?:st|nd|rd|th)\\s+grade/i,\n      /year\\s+(\\d+)/i,\n    ];\n\n    for (const pattern of gradePatterns) {\n      const match = text.match(pattern);\n      if (match) {\n        const grade = parseInt(match[1]);\n        if (grade >= 0 && grade <= 12) {\n          return grade;\n        }\n      }\n    }\n\n    // Check for kindergarten\n    if (/kindergarten|kinder|maternelle/i.test(text)) {\n      return 0;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Extract subject from text\n   */\n  private extractSubject(text: string): string | undefined {\n    const subjectPatterns: Record<string, RegExp[]> = {\n      'Mathematics': [/math/i, /mathematics/i, /math\xE9matiques/i],\n      'French': [/french/i, /fran\xE7ais/i, /fsl/i, /french immersion/i],\n      'English': [/english/i, /language arts/i, /ela/i, /anglais/i],\n      'Science': [/science/i, /sciences/i],\n      'Social Studies': [/social studies/i, /social science/i, /\xE9tudes sociales/i, /history/i, /geography/i],\n      'Physical Education': [/physical education/i, /phys ed/i, /pe/i, /\xE9ducation physique/i, /health/i],\n      'Arts': [/arts/i, /art/i, /music/i, /drama/i, /visual arts/i],\n    };\n\n    for (const [subject, patterns] of Object.entries(subjectPatterns)) {\n      if (patterns.some((pattern) => pattern.test(text))) {\n        return subject;\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Extract document type from text\n   */\n  private extractDocumentType(text: string): CurriculumDocument['documentType'] {\n    const lowerText = text.toLowerCase();\n\n    if (lowerText.includes('assessment') || lowerText.includes('rubric') || lowerText.includes('evaluation')) {\n      return 'assessment';\n    }\n    if (lowerText.includes('guide') || lowerText.includes('resource') || lowerText.includes('support')) {\n      return 'resource';\n    }\n    if (lowerText.includes('guideline') || lowerText.includes('framework')) {\n      return 'guideline';\n    }\n\n    return 'curriculum';\n  }\n\n  /**\n   * Extract file type from URL\n   */\n  private extractFileType(url: string): CurriculumDocument['fileType'] {\n    const lowerUrl = url.toLowerCase();\n    if (lowerUrl.includes('.pdf')) return 'pdf';\n    if (lowerUrl.includes('.docx') || lowerUrl.includes('.doc')) return 'docx';\n    if (lowerUrl.includes('.html') || lowerUrl.includes('.htm')) return 'html';\n    return 'unknown';\n  }\n\n  /**\n   * Extract language from text\n   */\n  private extractLanguage(text: string): CurriculumDocument['language'] {\n    const hasFrench = /french|fran\xE7ais|immersion|fsl|francophone/i.test(text);\n    const hasEnglish = /english|anglais/i.test(text) || (!hasFrench && /curriculum|program|guide/i.test(text));\n\n    if (hasFrench && hasEnglish) return 'both';\n    if (hasFrench) return 'fr';\n    return 'en';\n  }\n\n  /**\n   * Generate unique document ID from URL\n   */\n  private generateDocumentId(url: string): string {\n    const hash = Buffer.from(url).toString('base64');\n    return hash.replace(/[^a-zA-Z0-9]/g, '').substring(0, 16);\n  }\n\n  /**\n   * Clean and normalize document title\n   */\n  private cleanTitle(title: string): string {\n    return title\n      .replace(/\\.(pdf|docx?|html?)$/i, '')\n      .replace(/^\\s*-\\s*/, '')\n      .replace(/\\s+/g, ' ')\n      .trim();\n  }\n\n  /**\n   * Extract title from URL if no title is available\n   */\n  private extractTitleFromUrl(url: string): string {\n    try {\n      const urlObj = new URL(url);\n      const fileName = urlObj.pathname.split('/').pop() || 'curriculum-document';\n      return this.cleanTitle(fileName);\n    } catch {\n      return 'Curriculum Document';\n    }\n  }\n\n  /**\n   * Download a discovered curriculum document\n   */\n  async downloadDocument(documentId: string): Promise<{\n    success: boolean;\n    filePath?: string;\n    error?: string;\n  }> {\n    try {\n      const document = this.discoveredDocuments.get(documentId);\n      if (!document) {\n        throw new Error(`Document ${documentId} not found`);\n      }\n\n      this.logger.info(`Starting download of document: ${document.title}`);\n\n      // Update download attempts\n      document.downloadAttempts++;\n      document.downloadStatus = 'pending';\n\n      // Validate URL before downloading\n      const urlValidation = isValidExternalURL(document.url);\n      if (!urlValidation.valid) {\n        throw new Error(`URL validation failed: ${urlValidation.error}`);\n      }\n\n      const response = await safeFetch(document.url);\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      // Validate file size before downloading\n      const maxFileSize = 50 * 1024 * 1024; // 50MB limit\n      if (!validateFileSize(response, maxFileSize)) {\n        throw new Error('File too large - exceeds 50MB limit');\n      }\n\n      const buffer = await response.arrayBuffer();\n      \n      // Additional size check after download\n      if (buffer.byteLength > maxFileSize) {\n        throw new Error('Downloaded file exceeds size limit');\n      }\n      \n      const fileBuffer = Buffer.from(buffer);\n\n      // Store file metadata\n      document.fileSize = fileBuffer.length;\n      document.lastModified = new Date();\n      document.downloadStatus = 'downloaded';\n\n      this.logger.info(`Downloaded document: ${document.title} (${document.fileSize} bytes)`);\n\n      return {\n        success: true,\n        filePath: document.url, // In production, would save to cloud storage\n      };\n    } catch (error) {\n      this.logger.error({ error, documentId }, 'Failed to download document');\n      \n      const document = this.discoveredDocuments.get(documentId);\n      if (document) {\n        document.downloadStatus = 'failed';\n        document.processingErrors = document.processingErrors || [];\n        document.processingErrors.push(error instanceof Error ? error.message : 'Unknown error');\n      }\n\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      };\n    }\n  }\n\n  /**\n   * Process a downloaded document using the curriculum import service\n   */\n  async processDocument(\n    documentId: string,\n    userId: number\n  ): Promise<{\n    success: boolean;\n    importId?: string;\n    error?: string;\n  }> {\n    try {\n      const document = this.discoveredDocuments.get(documentId);\n      if (!document) {\n        throw new Error(`Document ${documentId} not found`);\n      }\n\n      if (document.downloadStatus !== 'downloaded') {\n        throw new Error('Document must be downloaded before processing');\n      }\n\n      this.logger.info(`Processing document: ${document.title}`);\n\n      // Create import session\n      const importId = await this.curriculumImportService.startImport(\n        userId,\n        document.grade || 1,\n        document.subject || 'General',\n        document.fileType === 'pdf' ? 'pdf' : document.fileType === 'docx' ? 'docx' : 'manual',\n        document.title,\n        {\n          discoverySource: document.source,\n          originalUrl: document.url,\n          documentType: document.documentType,\n          province: document.province,\n          autoDiscovered: true,\n        }\n      );\n\n      // Update document status\n      document.downloadStatus = 'processed';\n\n      this.logger.info(`Created import session ${importId} for document: ${document.title}`);\n\n      return {\n        success: true,\n        importId,\n      };\n    } catch (error) {\n      this.logger.error({ error, documentId }, 'Failed to process document');\n\n      const document = this.discoveredDocuments.get(documentId);\n      if (document) {\n        document.downloadStatus = 'failed';\n        document.processingErrors = document.processingErrors || [];\n        document.processingErrors.push(error instanceof Error ? error.message : 'Unknown error');\n      }\n\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      };\n    }\n  }\n\n  /**\n   * Get all discovered documents\n   */\n  getDiscoveredDocuments(): CurriculumDocument[] {\n    return Array.from(this.discoveredDocuments.values());\n  }\n\n  /**\n   * Get discovered documents filtered by criteria\n   */\n  getDocumentsByFilter(filter: {\n    province?: string;\n    grade?: number;\n    subject?: string;\n    language?: string;\n    documentType?: string;\n    downloadStatus?: string;\n  }): CurriculumDocument[] {\n    const documents = this.getDiscoveredDocuments();\n    \n    return documents.filter((doc) => {\n      if (filter.province && doc.province !== filter.province) return false;\n      if (filter.grade && doc.grade !== filter.grade) return false;\n      if (filter.subject && doc.subject !== filter.subject) return false;\n      if (filter.language && doc.language !== filter.language) return false;\n      if (filter.documentType && doc.documentType !== filter.documentType) return false;\n      if (filter.downloadStatus && doc.downloadStatus !== filter.downloadStatus) return false;\n      return true;\n    });\n  }\n\n  /**\n   * Update document verification status\n   */\n  async verifyDocument(documentId: string): Promise<boolean> {\n    try {\n      const document = this.discoveredDocuments.get(documentId);\n      if (!document) return false;\n\n      // Validate URL before verification\n      const urlValidation = isValidExternalURL(document.url);\n      if (!urlValidation.valid) {\n        this.logger.warn({ documentId, url: document.url }, 'Invalid URL for verification');\n        return false;\n      }\n\n      // Check if document is still available\n      const response = await safeFetch(document.url, { method: 'HEAD' });\n      const isAvailable = response.ok;\n\n      document.isActive = isAvailable;\n      document.lastVerified = new Date();\n\n      return isAvailable;\n    } catch (error) {\n      this.logger.error({ error, documentId }, 'Failed to verify document');\n      const document = this.discoveredDocuments.get(documentId);\n      if (document) {\n        document.isActive = false;\n        document.lastVerified = new Date();\n      }\n      return false;\n    }\n  }\n\n  /**\n   * Add discovered document to internal storage\n   */\n  addDiscoveredDocument(document: CurriculumDocument): void {\n    this.discoveredDocuments.set(document.id, document);\n  }\n\n  /**\n   * Remove document from discovery results\n   */\n  removeDiscoveredDocument(documentId: string): boolean {\n    return this.discoveredDocuments.delete(documentId);\n  }\n\n  /**\n   * Get discovery statistics\n   */\n  getDiscoveryStats(): {\n    totalDocuments: number;\n    byProvince: Record<string, number>;\n    bySubject: Record<string, number>;\n    byGrade: Record<string, number>;\n    byStatus: Record<string, number>;\n    byLanguage: Record<string, number>;\n  } {\n    const documents = this.getDiscoveredDocuments();\n    \n    const stats = {\n      totalDocuments: documents.length,\n      byProvince: {} as Record<string, number>,\n      bySubject: {} as Record<string, number>,\n      byGrade: {} as Record<string, number>,\n      byStatus: {} as Record<string, number>,\n      byLanguage: {} as Record<string, number>,\n    };\n\n    documents.forEach((doc) => {\n      // Count by province\n      stats.byProvince[doc.province] = (stats.byProvince[doc.province] || 0) + 1;\n      \n      // Count by subject\n      if (doc.subject) {\n        stats.bySubject[doc.subject] = (stats.bySubject[doc.subject] || 0) + 1;\n      }\n      \n      // Count by grade\n      if (doc.grade !== undefined) {\n        const gradeKey = `Grade ${doc.grade}`;\n        stats.byGrade[gradeKey] = (stats.byGrade[gradeKey] || 0) + 1;\n      }\n      \n      // Count by status\n      stats.byStatus[doc.downloadStatus] = (stats.byStatus[doc.downloadStatus] || 0) + 1;\n      \n      // Count by language\n      stats.byLanguage[doc.language] = (stats.byLanguage[doc.language] || 0) + 1;\n    });\n\n    return stats;\n  }\n\n  /**\n   * Utility method to add delay between requests\n   */\n  private delay(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n}\n\n// Export singleton instance\nexport const curriculumDiscoveryService = new CurriculumDiscoveryService();"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7147a749d83060b780e4a4f5407d24adbf802f2b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2q57xpkhqj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2q57xpkhqj();
import BaseService from './base/BaseService';
import * as cheerio from 'cheerio';
import { z } from 'zod';
import { CurriculumImportService } from './curriculumImportService';
import { safeFetch, isValidExternalURL, validateFileSize } from '../utils/urlValidator';
const CurriculumDocumentSchema =
/* istanbul ignore next */
(cov_2q57xpkhqj().s[0]++, z.object({
  title: z.string().min(1),
  url: z.string().url(),
  source: z.string(),
  province: z.string(),
  grade: z.number().optional(),
  subject: z.string().optional(),
  documentType: z.enum(['curriculum', 'guideline', 'assessment', 'resource']),
  fileType: z.enum(['pdf', 'docx', 'html', 'unknown']),
  description: z.string().optional(),
  language: z.enum(['en', 'fr', 'both'])
}));
export class CurriculumDiscoveryService extends BaseService {
  curriculumImportService;
  discoveredDocuments =
  /* istanbul ignore next */
  (cov_2q57xpkhqj().s[1]++, new Map());
  sources =
  /* istanbul ignore next */
  (cov_2q57xpkhqj().s[2]++, []);
  constructor() {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[0]++;
    cov_2q57xpkhqj().s[3]++;
    super('CurriculumDiscoveryService');
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[4]++;
    this.curriculumImportService = new CurriculumImportService();
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[5]++;
    this.initializeDefaultSources();
  }
  /**
   * Initialize default government curriculum sources
   */
  initializeDefaultSources() {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[1]++;
    cov_2q57xpkhqj().s[6]++;
    this.sources = [{
      id: 'pei-gov',
      name: 'Prince Edward Island Department of Education',
      baseUrl: 'https://www.princeedwardisland.ca',
      province: 'PE',
      searchUrls: ['https://www.princeedwardisland.ca/en/topic/curriculum', 'https://www.princeedwardisland.ca/en/topic/curriculum-french-immersion', 'https://www.princeedwardisland.ca/en/information/education-and-lifelong-learning/curriculum-documents'],
      isActive: true,
      robotsTxt: 'https://www.princeedwardisland.ca/robots.txt',
      crawlDelay: 2000,
      maxDepth: 3,
      allowedDomains: ['www.princeedwardisland.ca'],
      excludePatterns: ['/search/', '/contact/', '/about/']
    }, {
      id: 'ontario-edu',
      name: 'Ontario Ministry of Education',
      baseUrl: 'https://www.dcp.edu.gov.on.ca',
      province: 'ON',
      searchUrls: ['https://www.dcp.edu.gov.on.ca/en/curriculum', 'https://www.dcp.edu.gov.on.ca/en/curriculum/elementary', 'https://www.dcp.edu.gov.on.ca/en/curriculum/elementary/french-immersion'],
      isActive: true,
      robotsTxt: 'https://www.dcp.edu.gov.on.ca/robots.txt',
      crawlDelay: 3000,
      maxDepth: 3,
      allowedDomains: ['www.dcp.edu.gov.on.ca', 'edu.gov.on.ca'],
      excludePatterns: ['/search/', '/login/', '/admin/']
    }, {
      id: 'bc-gov',
      name: 'British Columbia Ministry of Education',
      baseUrl: 'https://curriculum.gov.bc.ca',
      province: 'BC',
      searchUrls: ['https://curriculum.gov.bc.ca/curriculum', 'https://curriculum.gov.bc.ca/curriculum/french-immersion'],
      isActive: true,
      robotsTxt: 'https://curriculum.gov.bc.ca/robots.txt',
      crawlDelay: 2000,
      maxDepth: 2,
      allowedDomains: ['curriculum.gov.bc.ca'],
      excludePatterns: ['/search/', '/contact/']
    }];
  }
  /**
   * Discover curriculum documents from all active sources
   */
  async discoverDocuments() {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[2]++;
    cov_2q57xpkhqj().s[7]++;
    try {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[8]++;
      this.logger.info('Starting curriculum document discovery');
      const allDocuments =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[9]++, []);
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[10]++;
      for (const source of this.sources.filter(s => {
        /* istanbul ignore next */
        cov_2q57xpkhqj().f[3]++;
        cov_2q57xpkhqj().s[11]++;
        return s.isActive;
      })) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[12]++;
        try {
          /* istanbul ignore next */
          cov_2q57xpkhqj().s[13]++;
          this.logger.info(`Discovering documents from ${source.name}`);
          const documents =
          /* istanbul ignore next */
          (cov_2q57xpkhqj().s[14]++, await this.discoverFromSource(source));
          /* istanbul ignore next */
          cov_2q57xpkhqj().s[15]++;
          allDocuments.push(...documents);
          // Update last scan date
          /* istanbul ignore next */
          cov_2q57xpkhqj().s[16]++;
          source.lastScanDate = new Date();
        } catch (error) {
          /* istanbul ignore next */
          cov_2q57xpkhqj().s[17]++;
          this.logger.error({
            error,
            sourceId: source.id
          }, `Failed to discover documents from ${source.name}`);
        }
        // Respect crawl delay between sources
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[18]++;
        await this.delay(source.crawlDelay);
      }
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[19]++;
      this.logger.info(`Discovered ${allDocuments.length} curriculum documents`);
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[20]++;
      return allDocuments;
    } catch (error) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[21]++;
      this.logger.error({
        error
      }, 'Failed to discover curriculum documents');
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[22]++;
      throw error;
    }
  }
  /**
   * Discover documents from a specific source
   */
  async discoverFromSource(source) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[4]++;
    const documents =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[23]++, []);
    const visitedUrls =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[24]++, new Set());
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[25]++;
    for (const searchUrl of source.searchUrls) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[26]++;
      try {
        const pageDocuments =
        /* istanbul ignore next */
        (cov_2q57xpkhqj().s[27]++, await this.crawlPage(searchUrl, source, visitedUrls, 0));
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[28]++;
        documents.push(...pageDocuments);
      } catch (error) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[29]++;
        this.logger.error({
          error,
          searchUrl,
          sourceId: source.id
        }, 'Failed to crawl search URL');
      }
    }
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[30]++;
    return documents;
  }
  /**
   * Crawl a page and its linked pages for curriculum documents
   */
  async crawlPage(url, source, visitedUrls, depth) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[5]++;
    cov_2q57xpkhqj().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[1][0]++, depth > source.maxDepth) ||
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[1][1]++, visitedUrls.has(url))) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[0][0]++;
      cov_2q57xpkhqj().s[32]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[0][1]++;
    }
    // Check if URL should be excluded
    cov_2q57xpkhqj().s[33]++;
    if (source.excludePatterns.some(pattern => {
      /* istanbul ignore next */
      cov_2q57xpkhqj().f[6]++;
      cov_2q57xpkhqj().s[34]++;
      return url.includes(pattern);
    })) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[2][0]++;
      cov_2q57xpkhqj().s[35]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[2][1]++;
    }
    cov_2q57xpkhqj().s[36]++;
    visitedUrls.add(url);
    const documents =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[37]++, []);
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[38]++;
    try {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[39]++;
      this.logger.debug(`Crawling page: ${url} (depth: ${depth})`);
      // Validate and fetch page content securely
      const urlValidation =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[40]++, isValidExternalURL(url));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[41]++;
      if (!urlValidation.valid) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[3][0]++;
        cov_2q57xpkhqj().s[42]++;
        throw new Error(`URL validation failed: ${urlValidation.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[3][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[43]++, await safeFetch(url, {
        headers: {
          'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
        }
      }));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[44]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[4][0]++;
        cov_2q57xpkhqj().s[45]++;
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[4][1]++;
      }
      // Validate file size for large responses
      cov_2q57xpkhqj().s[46]++;
      if (!validateFileSize(response, 10 * 1024 * 1024)) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[5][0]++;
        cov_2q57xpkhqj().s[47]++;
        // 10MB limit
        throw new Error('Response too large - potential DoS attempt');
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[5][1]++;
      }
      const html =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[48]++, await response.text());
      const $ =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[49]++, cheerio.load(html));
      // Extract curriculum documents from current page
      const pageDocuments =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[50]++, await this.extractDocumentsFromPage($, url, source));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[51]++;
      documents.push(...pageDocuments);
      // Find links to other curriculum pages
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[52]++;
      if (depth < source.maxDepth) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[6][0]++;
        const links =
        /* istanbul ignore next */
        (cov_2q57xpkhqj().s[53]++, this.extractCurriculumLinks($, url, source));
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[54]++;
        for (const link of links) {
          /* istanbul ignore next */
          cov_2q57xpkhqj().s[55]++;
          await this.delay(source.crawlDelay);
          const linkedDocuments =
          /* istanbul ignore next */
          (cov_2q57xpkhqj().s[56]++, await this.crawlPage(link, source, visitedUrls, depth + 1));
          /* istanbul ignore next */
          cov_2q57xpkhqj().s[57]++;
          documents.push(...linkedDocuments);
        }
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[6][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[58]++;
      this.logger.error({
        error,
        url
      }, 'Failed to crawl page');
    }
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[59]++;
    return documents;
  }
  /**
   * Extract curriculum documents from a single page
   */
  async extractDocumentsFromPage($, pageUrl, source) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[7]++;
    const documents =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[60]++, []);
    // Look for PDF and DOCX links that might be curriculum documents
    const documentLinks =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[61]++, $('a[href$=".pdf"], a[href$=".docx"], a[href*="/download/"], a[href*="/resource/"]'));
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[62]++;
    documentLinks.each((_, element) => {
      /* istanbul ignore next */
      cov_2q57xpkhqj().f[8]++;
      const $link =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[63]++, $(element));
      const href =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[64]++, $link.attr('href'));
      const linkText =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[65]++, $link.text().trim());
      const parentText =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[66]++, $link.parent().text().trim());
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[8][0]++, !href) ||
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[8][1]++, !this.isCurriculumDocument(linkText, parentText))) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[7][0]++;
        cov_2q57xpkhqj().s[68]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[7][1]++;
      }
      // Resolve relative URLs
      const absoluteUrl =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[69]++, new URL(href, pageUrl).toString());
      // Extract document metadata
      const document =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[70]++, this.createDocumentFromLink({
        url: absoluteUrl,
        title:
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[9][0]++, linkText) ||
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[9][1]++, this.extractTitleFromUrl(absoluteUrl)),
        source: source.name,
        province: source.province,
        context: parentText,
        pageUrl
      }));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[71]++;
      if (document) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[10][0]++;
        cov_2q57xpkhqj().s[72]++;
        documents.push(document);
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[10][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[73]++;
    return documents;
  }
  /**
   * Determine if a link is likely a curriculum document
   */
  isCurriculumDocument(linkText, context) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[9]++;
    const combinedText =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[74]++, (linkText + ' ' + context).toLowerCase());
    const curriculumKeywords =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[75]++, ['curriculum', 'program of studies', 'course outline', 'learning outcomes', 'expectations', 'grade', 'subject guide', 'teaching guide', 'assessment', 'rubric', 'français', 'french immersion', 'mathematics', 'science', 'social studies', 'english language arts', 'physical education', 'arts education']);
    // Must contain at least one curriculum keyword
    const hasCurriculumKeyword =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[76]++, curriculumKeywords.some(keyword => {
      /* istanbul ignore next */
      cov_2q57xpkhqj().f[10]++;
      cov_2q57xpkhqj().s[77]++;
      return combinedText.includes(keyword);
    }));
    // Exclude non-curriculum documents
    const excludeKeywords =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[78]++, ['form', 'application', 'newsletter', 'news', 'event', 'calendar', 'contact', 'directory', 'budget', 'policy', 'procedure']);
    const hasExcludeKeyword =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[79]++, excludeKeywords.some(keyword => {
      /* istanbul ignore next */
      cov_2q57xpkhqj().f[11]++;
      cov_2q57xpkhqj().s[80]++;
      return combinedText.includes(keyword);
    }));
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[81]++;
    return /* istanbul ignore next */(cov_2q57xpkhqj().b[11][0]++, hasCurriculumKeyword) &&
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[11][1]++, !hasExcludeKeyword);
  }
  /**
   * Extract curriculum-related links from a page
   */
  extractCurriculumLinks($, pageUrl, source) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[12]++;
    const links =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[82]++, []);
    const linkElements =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[83]++, $('a[href]'));
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[84]++;
    linkElements.each((_, element) => {
      /* istanbul ignore next */
      cov_2q57xpkhqj().f[13]++;
      const $link =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[85]++, $(element));
      const href =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[86]++, $link.attr('href'));
      const linkText =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[87]++, $link.text().trim().toLowerCase());
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[88]++;
      if (!href) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[12][0]++;
        cov_2q57xpkhqj().s[89]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[12][1]++;
      }
      // Resolve relative URLs
      let absoluteUrl;
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[90]++;
      try {
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[91]++;
        absoluteUrl = new URL(href, pageUrl).toString();
      } catch {
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[92]++;
        return; // Skip invalid URLs
      }
      // Check if URL is within allowed domains
      const url =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[93]++, new URL(absoluteUrl));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[94]++;
      if (!source.allowedDomains.some(domain => {
        /* istanbul ignore next */
        cov_2q57xpkhqj().f[14]++;
        cov_2q57xpkhqj().s[95]++;
        return url.hostname.includes(domain);
      })) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[13][0]++;
        cov_2q57xpkhqj().s[96]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[13][1]++;
      }
      // Look for curriculum-related page links
      const curriculumPageKeywords =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[97]++, ['curriculum', 'grade', 'subject', 'program', 'course', 'français', 'french', 'immersion', 'elementary', 'primary']);
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[98]++;
      if (curriculumPageKeywords.some(keyword => {
        /* istanbul ignore next */
        cov_2q57xpkhqj().f[15]++;
        cov_2q57xpkhqj().s[99]++;
        return linkText.includes(keyword);
      })) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[14][0]++;
        cov_2q57xpkhqj().s[100]++;
        links.push(absoluteUrl);
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[14][1]++;
      }
    });
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[101]++;
    return Array.from(new Set(links)); // Remove duplicates
  }
  /**
   * Create a CurriculumDocument from a link
   */
  createDocumentFromLink(params) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[16]++;
    cov_2q57xpkhqj().s[102]++;
    try {
      const {
        url,
        title,
        source,
        province,
        context
      } =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[103]++, params);
      // Extract metadata from title and context
      const grade =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[104]++, this.extractGrade(title + ' ' + context));
      const subject =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[105]++, this.extractSubject(title + ' ' + context));
      const documentType =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[106]++, this.extractDocumentType(title + ' ' + context));
      const fileType =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[107]++, this.extractFileType(url));
      const language =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[108]++, this.extractLanguage(title + ' ' + context));
      const document =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[109]++, {
        id: this.generateDocumentId(url),
        title: this.cleanTitle(title),
        url,
        source,
        sourceType: 'government',
        province,
        grade,
        subject,
        documentType,
        fileType,
        description: context !== title ?
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[15][0]++, context) :
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[15][1]++, undefined),
        language,
        isActive: true,
        lastVerified: new Date(),
        downloadAttempts: 0,
        downloadStatus: 'pending'
      });
      // Validate document
      const validation =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[110]++, CurriculumDocumentSchema.safeParse(document));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[111]++;
      if (!validation.success) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[16][0]++;
        cov_2q57xpkhqj().s[112]++;
        this.logger.warn({
          errors: validation.error.errors,
          document
        }, 'Invalid curriculum document discovered');
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[113]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[16][1]++;
      }
      cov_2q57xpkhqj().s[114]++;
      return document;
    } catch (error) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[115]++;
      this.logger.error({
        error,
        params
      }, 'Failed to create document from link');
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[116]++;
      return null;
    }
  }
  /**
   * Extract grade from text
   */
  extractGrade(text) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[17]++;
    const gradePatterns =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[117]++, [/grade\s+(\d+)/i, /gr\.\s*(\d+)/i, /\b(\d+)(?:st|nd|rd|th)\s+grade/i, /year\s+(\d+)/i]);
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[118]++;
    for (const pattern of gradePatterns) {
      const match =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[119]++, text.match(pattern));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[120]++;
      if (match) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[17][0]++;
        const grade =
        /* istanbul ignore next */
        (cov_2q57xpkhqj().s[121]++, parseInt(match[1]));
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[122]++;
        if (
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[19][0]++, grade >= 0) &&
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[19][1]++, grade <= 12)) {
          /* istanbul ignore next */
          cov_2q57xpkhqj().b[18][0]++;
          cov_2q57xpkhqj().s[123]++;
          return grade;
        } else
        /* istanbul ignore next */
        {
          cov_2q57xpkhqj().b[18][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[17][1]++;
      }
    }
    // Check for kindergarten
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[124]++;
    if (/kindergarten|kinder|maternelle/i.test(text)) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[20][0]++;
      cov_2q57xpkhqj().s[125]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[20][1]++;
    }
    cov_2q57xpkhqj().s[126]++;
    return undefined;
  }
  /**
   * Extract subject from text
   */
  extractSubject(text) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[18]++;
    const subjectPatterns =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[127]++, {
      'Mathematics': [/math/i, /mathematics/i, /mathématiques/i],
      'French': [/french/i, /français/i, /fsl/i, /french immersion/i],
      'English': [/english/i, /language arts/i, /ela/i, /anglais/i],
      'Science': [/science/i, /sciences/i],
      'Social Studies': [/social studies/i, /social science/i, /études sociales/i, /history/i, /geography/i],
      'Physical Education': [/physical education/i, /phys ed/i, /pe/i, /éducation physique/i, /health/i],
      'Arts': [/arts/i, /art/i, /music/i, /drama/i, /visual arts/i]
    });
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[128]++;
    for (const [subject, patterns] of Object.entries(subjectPatterns)) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[129]++;
      if (patterns.some(pattern => {
        /* istanbul ignore next */
        cov_2q57xpkhqj().f[19]++;
        cov_2q57xpkhqj().s[130]++;
        return pattern.test(text);
      })) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[21][0]++;
        cov_2q57xpkhqj().s[131]++;
        return subject;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[21][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[132]++;
    return undefined;
  }
  /**
   * Extract document type from text
   */
  extractDocumentType(text) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[20]++;
    const lowerText =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[133]++, text.toLowerCase());
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[134]++;
    if (
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[23][0]++, lowerText.includes('assessment')) ||
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[23][1]++, lowerText.includes('rubric')) ||
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[23][2]++, lowerText.includes('evaluation'))) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[22][0]++;
      cov_2q57xpkhqj().s[135]++;
      return 'assessment';
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[22][1]++;
    }
    cov_2q57xpkhqj().s[136]++;
    if (
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[25][0]++, lowerText.includes('guide')) ||
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[25][1]++, lowerText.includes('resource')) ||
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[25][2]++, lowerText.includes('support'))) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[24][0]++;
      cov_2q57xpkhqj().s[137]++;
      return 'resource';
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[24][1]++;
    }
    cov_2q57xpkhqj().s[138]++;
    if (
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[27][0]++, lowerText.includes('guideline')) ||
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[27][1]++, lowerText.includes('framework'))) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[26][0]++;
      cov_2q57xpkhqj().s[139]++;
      return 'guideline';
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[26][1]++;
    }
    cov_2q57xpkhqj().s[140]++;
    return 'curriculum';
  }
  /**
   * Extract file type from URL
   */
  extractFileType(url) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[21]++;
    const lowerUrl =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[141]++, url.toLowerCase());
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[142]++;
    if (lowerUrl.includes('.pdf')) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[28][0]++;
      cov_2q57xpkhqj().s[143]++;
      return 'pdf';
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[28][1]++;
    }
    cov_2q57xpkhqj().s[144]++;
    if (
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[30][0]++, lowerUrl.includes('.docx')) ||
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[30][1]++, lowerUrl.includes('.doc'))) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[29][0]++;
      cov_2q57xpkhqj().s[145]++;
      return 'docx';
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[29][1]++;
    }
    cov_2q57xpkhqj().s[146]++;
    if (
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[32][0]++, lowerUrl.includes('.html')) ||
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[32][1]++, lowerUrl.includes('.htm'))) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[31][0]++;
      cov_2q57xpkhqj().s[147]++;
      return 'html';
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[31][1]++;
    }
    cov_2q57xpkhqj().s[148]++;
    return 'unknown';
  }
  /**
   * Extract language from text
   */
  extractLanguage(text) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[22]++;
    const hasFrench =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[149]++, /french|français|immersion|fsl|francophone/i.test(text));
    const hasEnglish =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[150]++,
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[33][0]++, /english|anglais/i.test(text)) ||
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[33][1]++, !hasFrench) &&
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[33][2]++, /curriculum|program|guide/i.test(text)));
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[151]++;
    if (
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[35][0]++, hasFrench) &&
    /* istanbul ignore next */
    (cov_2q57xpkhqj().b[35][1]++, hasEnglish)) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[34][0]++;
      cov_2q57xpkhqj().s[152]++;
      return 'both';
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[34][1]++;
    }
    cov_2q57xpkhqj().s[153]++;
    if (hasFrench) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().b[36][0]++;
      cov_2q57xpkhqj().s[154]++;
      return 'fr';
    } else
    /* istanbul ignore next */
    {
      cov_2q57xpkhqj().b[36][1]++;
    }
    cov_2q57xpkhqj().s[155]++;
    return 'en';
  }
  /**
   * Generate unique document ID from URL
   */
  generateDocumentId(url) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[23]++;
    const hash =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[156]++, Buffer.from(url).toString('base64'));
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[157]++;
    return hash.replace(/[^a-zA-Z0-9]/g, '').substring(0, 16);
  }
  /**
   * Clean and normalize document title
   */
  cleanTitle(title) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[24]++;
    cov_2q57xpkhqj().s[158]++;
    return title.replace(/\.(pdf|docx?|html?)$/i, '').replace(/^\s*-\s*/, '').replace(/\s+/g, ' ').trim();
  }
  /**
   * Extract title from URL if no title is available
   */
  extractTitleFromUrl(url) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[25]++;
    cov_2q57xpkhqj().s[159]++;
    try {
      const urlObj =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[160]++, new URL(url));
      const fileName =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[161]++,
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[37][0]++, urlObj.pathname.split('/').pop()) ||
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[37][1]++, 'curriculum-document'));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[162]++;
      return this.cleanTitle(fileName);
    } catch {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[163]++;
      return 'Curriculum Document';
    }
  }
  /**
   * Download a discovered curriculum document
   */
  async downloadDocument(documentId) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[26]++;
    cov_2q57xpkhqj().s[164]++;
    try {
      const document =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[165]++, this.discoveredDocuments.get(documentId));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[166]++;
      if (!document) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[38][0]++;
        cov_2q57xpkhqj().s[167]++;
        throw new Error(`Document ${documentId} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[38][1]++;
      }
      cov_2q57xpkhqj().s[168]++;
      this.logger.info(`Starting download of document: ${document.title}`);
      // Update download attempts
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[169]++;
      document.downloadAttempts++;
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[170]++;
      document.downloadStatus = 'pending';
      // Validate URL before downloading
      const urlValidation =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[171]++, isValidExternalURL(document.url));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[172]++;
      if (!urlValidation.valid) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[39][0]++;
        cov_2q57xpkhqj().s[173]++;
        throw new Error(`URL validation failed: ${urlValidation.error}`);
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[39][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[174]++, await safeFetch(document.url));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[175]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[40][0]++;
        cov_2q57xpkhqj().s[176]++;
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[40][1]++;
      }
      // Validate file size before downloading
      const maxFileSize =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[177]++, 50 * 1024 * 1024); // 50MB limit
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[178]++;
      if (!validateFileSize(response, maxFileSize)) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[41][0]++;
        cov_2q57xpkhqj().s[179]++;
        throw new Error('File too large - exceeds 50MB limit');
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[41][1]++;
      }
      const buffer =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[180]++, await response.arrayBuffer());
      // Additional size check after download
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[181]++;
      if (buffer.byteLength > maxFileSize) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[42][0]++;
        cov_2q57xpkhqj().s[182]++;
        throw new Error('Downloaded file exceeds size limit');
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[42][1]++;
      }
      const fileBuffer =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[183]++, Buffer.from(buffer));
      // Store file metadata
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[184]++;
      document.fileSize = fileBuffer.length;
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[185]++;
      document.lastModified = new Date();
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[186]++;
      document.downloadStatus = 'downloaded';
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[187]++;
      this.logger.info(`Downloaded document: ${document.title} (${document.fileSize} bytes)`);
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[188]++;
      return {
        success: true,
        filePath: document.url // In production, would save to cloud storage
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[189]++;
      this.logger.error({
        error,
        documentId
      }, 'Failed to download document');
      const document =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[190]++, this.discoveredDocuments.get(documentId));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[191]++;
      if (document) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[43][0]++;
        cov_2q57xpkhqj().s[192]++;
        document.downloadStatus = 'failed';
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[193]++;
        document.processingErrors =
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[44][0]++, document.processingErrors) ||
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[44][1]++, []);
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[194]++;
        document.processingErrors.push(error instanceof Error ?
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[45][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[45][1]++, 'Unknown error'));
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[43][1]++;
      }
      cov_2q57xpkhqj().s[195]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[46][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[46][1]++, 'Unknown error')
      };
    }
  }
  /**
   * Process a downloaded document using the curriculum import service
   */
  async processDocument(documentId, userId) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[27]++;
    cov_2q57xpkhqj().s[196]++;
    try {
      const document =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[197]++, this.discoveredDocuments.get(documentId));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[198]++;
      if (!document) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[47][0]++;
        cov_2q57xpkhqj().s[199]++;
        throw new Error(`Document ${documentId} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[47][1]++;
      }
      cov_2q57xpkhqj().s[200]++;
      if (document.downloadStatus !== 'downloaded') {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[48][0]++;
        cov_2q57xpkhqj().s[201]++;
        throw new Error('Document must be downloaded before processing');
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[48][1]++;
      }
      cov_2q57xpkhqj().s[202]++;
      this.logger.info(`Processing document: ${document.title}`);
      // Create import session
      const importId =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[203]++, await this.curriculumImportService.startImport(userId,
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[49][0]++, document.grade) ||
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[49][1]++, 1),
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[50][0]++, document.subject) ||
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[50][1]++, 'General'), document.fileType === 'pdf' ?
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[51][0]++, 'pdf') :
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[51][1]++, document.fileType === 'docx' ?
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[52][0]++, 'docx') :
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[52][1]++, 'manual')), document.title, {
        discoverySource: document.source,
        originalUrl: document.url,
        documentType: document.documentType,
        province: document.province,
        autoDiscovered: true
      }));
      // Update document status
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[204]++;
      document.downloadStatus = 'processed';
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[205]++;
      this.logger.info(`Created import session ${importId} for document: ${document.title}`);
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[206]++;
      return {
        success: true,
        importId
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[207]++;
      this.logger.error({
        error,
        documentId
      }, 'Failed to process document');
      const document =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[208]++, this.discoveredDocuments.get(documentId));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[209]++;
      if (document) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[53][0]++;
        cov_2q57xpkhqj().s[210]++;
        document.downloadStatus = 'failed';
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[211]++;
        document.processingErrors =
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[54][0]++, document.processingErrors) ||
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[54][1]++, []);
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[212]++;
        document.processingErrors.push(error instanceof Error ?
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[55][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[55][1]++, 'Unknown error'));
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[53][1]++;
      }
      cov_2q57xpkhqj().s[213]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[56][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[56][1]++, 'Unknown error')
      };
    }
  }
  /**
   * Get all discovered documents
   */
  getDiscoveredDocuments() {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[28]++;
    cov_2q57xpkhqj().s[214]++;
    return Array.from(this.discoveredDocuments.values());
  }
  /**
   * Get discovered documents filtered by criteria
   */
  getDocumentsByFilter(filter) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[29]++;
    const documents =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[215]++, this.getDiscoveredDocuments());
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[216]++;
    return documents.filter(doc => {
      /* istanbul ignore next */
      cov_2q57xpkhqj().f[30]++;
      cov_2q57xpkhqj().s[217]++;
      if (
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[58][0]++, filter.province) &&
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[58][1]++, doc.province !== filter.province)) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[57][0]++;
        cov_2q57xpkhqj().s[218]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[57][1]++;
      }
      cov_2q57xpkhqj().s[219]++;
      if (
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[60][0]++, filter.grade) &&
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[60][1]++, doc.grade !== filter.grade)) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[59][0]++;
        cov_2q57xpkhqj().s[220]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[59][1]++;
      }
      cov_2q57xpkhqj().s[221]++;
      if (
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[62][0]++, filter.subject) &&
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[62][1]++, doc.subject !== filter.subject)) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[61][0]++;
        cov_2q57xpkhqj().s[222]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[61][1]++;
      }
      cov_2q57xpkhqj().s[223]++;
      if (
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[64][0]++, filter.language) &&
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[64][1]++, doc.language !== filter.language)) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[63][0]++;
        cov_2q57xpkhqj().s[224]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[63][1]++;
      }
      cov_2q57xpkhqj().s[225]++;
      if (
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[66][0]++, filter.documentType) &&
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[66][1]++, doc.documentType !== filter.documentType)) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[65][0]++;
        cov_2q57xpkhqj().s[226]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[65][1]++;
      }
      cov_2q57xpkhqj().s[227]++;
      if (
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[68][0]++, filter.downloadStatus) &&
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[68][1]++, doc.downloadStatus !== filter.downloadStatus)) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[67][0]++;
        cov_2q57xpkhqj().s[228]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[67][1]++;
      }
      cov_2q57xpkhqj().s[229]++;
      return true;
    });
  }
  /**
   * Update document verification status
   */
  async verifyDocument(documentId) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[31]++;
    cov_2q57xpkhqj().s[230]++;
    try {
      const document =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[231]++, this.discoveredDocuments.get(documentId));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[232]++;
      if (!document) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[69][0]++;
        cov_2q57xpkhqj().s[233]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[69][1]++;
      }
      // Validate URL before verification
      const urlValidation =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[234]++, isValidExternalURL(document.url));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[235]++;
      if (!urlValidation.valid) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[70][0]++;
        cov_2q57xpkhqj().s[236]++;
        this.logger.warn({
          documentId,
          url: document.url
        }, 'Invalid URL for verification');
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[237]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[70][1]++;
      }
      // Check if document is still available
      const response =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[238]++, await safeFetch(document.url, {
        method: 'HEAD'
      }));
      const isAvailable =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[239]++, response.ok);
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[240]++;
      document.isActive = isAvailable;
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[241]++;
      document.lastVerified = new Date();
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[242]++;
      return isAvailable;
    } catch (error) {
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[243]++;
      this.logger.error({
        error,
        documentId
      }, 'Failed to verify document');
      const document =
      /* istanbul ignore next */
      (cov_2q57xpkhqj().s[244]++, this.discoveredDocuments.get(documentId));
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[245]++;
      if (document) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[71][0]++;
        cov_2q57xpkhqj().s[246]++;
        document.isActive = false;
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[247]++;
        document.lastVerified = new Date();
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[71][1]++;
      }
      cov_2q57xpkhqj().s[248]++;
      return false;
    }
  }
  /**
   * Add discovered document to internal storage
   */
  addDiscoveredDocument(document) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[32]++;
    cov_2q57xpkhqj().s[249]++;
    this.discoveredDocuments.set(document.id, document);
  }
  /**
   * Remove document from discovery results
   */
  removeDiscoveredDocument(documentId) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[33]++;
    cov_2q57xpkhqj().s[250]++;
    return this.discoveredDocuments.delete(documentId);
  }
  /**
   * Get discovery statistics
   */
  getDiscoveryStats() {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[34]++;
    const documents =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[251]++, this.getDiscoveredDocuments());
    const stats =
    /* istanbul ignore next */
    (cov_2q57xpkhqj().s[252]++, {
      totalDocuments: documents.length,
      byProvince: {},
      bySubject: {},
      byGrade: {},
      byStatus: {},
      byLanguage: {}
    });
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[253]++;
    documents.forEach(doc => {
      /* istanbul ignore next */
      cov_2q57xpkhqj().f[35]++;
      cov_2q57xpkhqj().s[254]++;
      // Count by province
      stats.byProvince[doc.province] = (
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[72][0]++, stats.byProvince[doc.province]) ||
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[72][1]++, 0)) + 1;
      // Count by subject
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[255]++;
      if (doc.subject) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[73][0]++;
        cov_2q57xpkhqj().s[256]++;
        stats.bySubject[doc.subject] = (
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[74][0]++, stats.bySubject[doc.subject]) ||
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[74][1]++, 0)) + 1;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[73][1]++;
      }
      // Count by grade
      cov_2q57xpkhqj().s[257]++;
      if (doc.grade !== undefined) {
        /* istanbul ignore next */
        cov_2q57xpkhqj().b[75][0]++;
        const gradeKey =
        /* istanbul ignore next */
        (cov_2q57xpkhqj().s[258]++, `Grade ${doc.grade}`);
        /* istanbul ignore next */
        cov_2q57xpkhqj().s[259]++;
        stats.byGrade[gradeKey] = (
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[76][0]++, stats.byGrade[gradeKey]) ||
        /* istanbul ignore next */
        (cov_2q57xpkhqj().b[76][1]++, 0)) + 1;
      } else
      /* istanbul ignore next */
      {
        cov_2q57xpkhqj().b[75][1]++;
      }
      // Count by status
      cov_2q57xpkhqj().s[260]++;
      stats.byStatus[doc.downloadStatus] = (
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[77][0]++, stats.byStatus[doc.downloadStatus]) ||
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[77][1]++, 0)) + 1;
      // Count by language
      /* istanbul ignore next */
      cov_2q57xpkhqj().s[261]++;
      stats.byLanguage[doc.language] = (
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[78][0]++, stats.byLanguage[doc.language]) ||
      /* istanbul ignore next */
      (cov_2q57xpkhqj().b[78][1]++, 0)) + 1;
    });
    /* istanbul ignore next */
    cov_2q57xpkhqj().s[262]++;
    return stats;
  }
  /**
   * Utility method to add delay between requests
   */
  delay(ms) {
    /* istanbul ignore next */
    cov_2q57xpkhqj().f[36]++;
    cov_2q57xpkhqj().s[263]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_2q57xpkhqj().f[37]++;
      cov_2q57xpkhqj().s[264]++;
      return setTimeout(resolve, ms);
    });
  }
}
// Export singleton instance
export const curriculumDiscoveryService =
/* istanbul ignore next */
(cov_2q57xpkhqj().s[265]++, new CurriculumDiscoveryService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,