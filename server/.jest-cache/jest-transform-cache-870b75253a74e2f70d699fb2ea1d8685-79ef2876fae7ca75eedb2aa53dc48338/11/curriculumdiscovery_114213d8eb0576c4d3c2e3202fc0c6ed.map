{"version":3,"names":["cov_426r1k7zf","actualCoverage","Router","z","authMiddleware","curriculumDiscoveryService","router","s","DiscoveryFilterSchema","object","province","string","optional","grade","coerce","number","int","min","max","subject","language","enum","documentType","downloadStatus","ProcessDocumentSchema","documentId","userId","positive","post","req","res","f","Number","user","id","json","success","message","data","status","timestamp","Date","toISOString","discoverDocuments","then","documents","console","log","length","catch","error","get","filterResult","safeParse","query","b","details","errors","filter","getDocumentsByFilter","total","stats","getDiscoveryStats","parse","body","result","downloadDocument","filePath","ZodError","parseResult","processDocument","importId","downloadResult","step","processResult","isAvailable","verifyDocument","verifiedAt","delete","params","removed","removeDiscoveredDocument","sources","name","isActive","lastScanDate","documentCount","totalSources","activeSources","operation","documentIds","array","results","push","undefined","Error","Promise","resolve","setTimeout","successCount","r","failureCount","summary","successful","failed"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/curriculum-discovery.ts"],"sourcesContent":["import { Router } from 'express';\nimport { z } from 'zod';\nimport { authMiddleware } from '../middleware/auth';\nimport { curriculumDiscoveryService } from '../services/curriculumDiscoveryService';\n\nconst router = Router();\n\n// Validation schemas\nconst DiscoveryFilterSchema = z.object({\n  province: z.string().optional(),\n  grade: z.coerce.number().int().min(0).max(12).optional(),\n  subject: z.string().optional(),\n  language: z.enum(['en', 'fr', 'both']).optional(),\n  documentType: z.enum(['curriculum', 'guideline', 'assessment', 'resource']).optional(),\n  downloadStatus: z.enum(['pending', 'downloaded', 'processed', 'failed']).optional(),\n});\n\nconst ProcessDocumentSchema = z.object({\n  documentId: z.string().min(1),\n  userId: z.coerce.number().int().positive().optional(),\n});\n\n/**\n * Start discovery process for curriculum documents\n * POST /api/curriculum-discovery/discover\n */\nrouter.post('/discover', authMiddleware, async (req, res) => {\n  try {\n    const userId = Number(req.user!.id);\n\n    res.json({\n      success: true,\n      message: 'Discovery process started',\n      data: {\n        status: 'initiated',\n        userId,\n        timestamp: new Date().toISOString(),\n      },\n    });\n\n    // Start discovery process in background\n    curriculumDiscoveryService\n      .discoverDocuments()\n      .then((documents) => {\n        console.log(`Discovery completed: ${documents.length} documents found`);\n      })\n      .catch((error) => {\n        console.error('Discovery process failed:', error);\n      });\n  } catch (error) {\n    console.error('Discovery initiation error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to start discovery process',\n    });\n  }\n});\n\n/**\n * Get discovered curriculum documents\n * GET /api/curriculum-discovery/documents\n */\nrouter.get('/documents', authMiddleware, async (req, res) => {\n  try {\n    const filterResult = DiscoveryFilterSchema.safeParse(req.query);\n\n    if (!filterResult.success) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid filter parameters',\n        details: filterResult.error.errors,\n      });\n    }\n\n    const filter = filterResult.data;\n    const documents = curriculumDiscoveryService.getDocumentsByFilter(filter);\n\n    res.json({\n      success: true,\n      data: {\n        documents,\n        total: documents.length,\n        filter,\n      },\n    });\n  } catch (error) {\n    console.error('Get documents error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve discovered documents',\n    });\n  }\n});\n\n/**\n * Get discovery statistics\n * GET /api/curriculum-discovery/stats\n */\nrouter.get('/stats', authMiddleware, async (req, res) => {\n  try {\n    const stats = curriculumDiscoveryService.getDiscoveryStats();\n\n    res.json({\n      success: true,\n      data: stats,\n    });\n  } catch (error) {\n    console.error('Get stats error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve discovery statistics',\n    });\n  }\n});\n\n/**\n * Download a specific curriculum document\n * POST /api/curriculum-discovery/download\n */\nrouter.post('/download', authMiddleware, async (req, res) => {\n  try {\n    const { documentId } = z\n      .object({\n        documentId: z.string().min(1),\n      })\n      .parse(req.body);\n\n    const result = await curriculumDiscoveryService.downloadDocument(documentId);\n\n    if (result.success) {\n      res.json({\n        success: true,\n        data: {\n          documentId,\n          filePath: result.filePath,\n          message: 'Document downloaded successfully',\n        },\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        error: result.error || 'Download failed',\n        data: { documentId },\n      });\n    }\n  } catch (error) {\n    console.error('Download document error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to download document',\n    });\n  }\n});\n\n/**\n * Process a downloaded document into curriculum import\n * POST /api/curriculum-discovery/process\n */\nrouter.post('/process', authMiddleware, async (req, res) => {\n  try {\n    const parseResult = ProcessDocumentSchema.parse(req.body);\n    const userId = parseResult.userId || Number(req.user!.id);\n    const { documentId } = parseResult;\n\n    const result = await curriculumDiscoveryService.processDocument(documentId, userId);\n\n    if (result.success) {\n      res.json({\n        success: true,\n        data: {\n          documentId,\n          importId: result.importId,\n          message: 'Document processed successfully',\n        },\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        error: result.error || 'Processing failed',\n        data: { documentId },\n      });\n    }\n  } catch (error) {\n    console.error('Process document error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to process document',\n    });\n  }\n});\n\n/**\n * Download and process a document in one step\n * POST /api/curriculum-discovery/download-and-process\n */\nrouter.post('/download-and-process', authMiddleware, async (req, res) => {\n  try {\n    const { documentId } = z\n      .object({\n        documentId: z.string().min(1),\n      })\n      .parse(req.body);\n\n    const userId = Number(req.user!.id);\n\n    // Step 1: Download document\n    const downloadResult = await curriculumDiscoveryService.downloadDocument(documentId);\n    if (!downloadResult.success) {\n      return res.status(400).json({\n        success: false,\n        error: `Download failed: ${downloadResult.error}`,\n        data: { documentId, step: 'download' },\n      });\n    }\n\n    // Step 2: Process document\n    const processResult = await curriculumDiscoveryService.processDocument(documentId, userId);\n    if (!processResult.success) {\n      return res.status(400).json({\n        success: false,\n        error: `Processing failed: ${processResult.error}`,\n        data: { documentId, step: 'process' },\n      });\n    }\n\n    res.json({\n      success: true,\n      data: {\n        documentId,\n        importId: processResult.importId,\n        filePath: downloadResult.filePath,\n        message: 'Document downloaded and processed successfully',\n      },\n    });\n  } catch (error) {\n    console.error('Download and process error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to download and process document',\n    });\n  }\n});\n\n/**\n * Verify document availability\n * POST /api/curriculum-discovery/verify\n */\nrouter.post('/verify', authMiddleware, async (req, res) => {\n  try {\n    const { documentId } = z\n      .object({\n        documentId: z.string().min(1),\n      })\n      .parse(req.body);\n\n    const isAvailable = await curriculumDiscoveryService.verifyDocument(documentId);\n\n    res.json({\n      success: true,\n      data: {\n        documentId,\n        isAvailable,\n        verifiedAt: new Date().toISOString(),\n      },\n    });\n  } catch (error) {\n    console.error('Verify document error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to verify document',\n    });\n  }\n});\n\n/**\n * Remove a discovered document\n * DELETE /api/curriculum-discovery/documents/:documentId\n */\nrouter.delete('/documents/:documentId', authMiddleware, async (req, res) => {\n  try {\n    const { documentId } = req.params;\n\n    if (!documentId) {\n      return res.status(400).json({\n        success: false,\n        error: 'Document ID is required',\n      });\n    }\n\n    const removed = curriculumDiscoveryService.removeDiscoveredDocument(documentId);\n\n    if (removed) {\n      res.json({\n        success: true,\n        data: {\n          documentId,\n          message: 'Document removed from discovery results',\n        },\n      });\n    } else {\n      res.status(404).json({\n        success: false,\n        error: 'Document not found',\n        data: { documentId },\n      });\n    }\n  } catch (error) {\n    console.error('Remove document error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to remove document',\n    });\n  }\n});\n\n/**\n * Get discovery sources and their status\n * GET /api/curriculum-discovery/sources\n */\nrouter.get('/sources', authMiddleware, async (req, res) => {\n  try {\n    // This would be implemented if sources were stored in database\n    // For now, return static information about configured sources\n    const sources = [\n      {\n        id: 'pei-gov',\n        name: 'Prince Edward Island Department of Education',\n        province: 'PE',\n        isActive: true,\n        lastScanDate: null,\n        documentCount: curriculumDiscoveryService.getDocumentsByFilter({ province: 'PE' }).length,\n      },\n      {\n        id: 'ontario-edu',\n        name: 'Ontario Ministry of Education',\n        province: 'ON',\n        isActive: true,\n        lastScanDate: null,\n        documentCount: curriculumDiscoveryService.getDocumentsByFilter({ province: 'ON' }).length,\n      },\n      {\n        id: 'bc-gov',\n        name: 'British Columbia Ministry of Education',\n        province: 'BC',\n        isActive: true,\n        lastScanDate: null,\n        documentCount: curriculumDiscoveryService.getDocumentsByFilter({ province: 'BC' }).length,\n      },\n    ];\n\n    res.json({\n      success: true,\n      data: {\n        sources,\n        totalSources: sources.length,\n        activeSources: sources.filter((s) => s.isActive).length,\n      },\n    });\n  } catch (error) {\n    console.error('Get sources error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve discovery sources',\n    });\n  }\n});\n\n/**\n * Batch operations for multiple documents\n * POST /api/curriculum-discovery/batch\n */\nrouter.post('/batch', authMiddleware, async (req, res) => {\n  try {\n    const { operation, documentIds } = z\n      .object({\n        operation: z.enum(['download', 'process', 'download-and-process', 'verify']),\n        documentIds: z.array(z.string().min(1)).min(1).max(10), // Limit batch size\n      })\n      .parse(req.body);\n\n    const userId = Number(req.user!.id);\n    const results: Array<{\n      documentId: string;\n      success: boolean;\n      data?: unknown;\n      error?: string;\n    }> = [];\n\n    for (const documentId of documentIds) {\n      try {\n        let result: { success: boolean; [key: string]: unknown };\n\n        switch (operation) {\n          case 'download':\n            result = await curriculumDiscoveryService.downloadDocument(documentId);\n            break;\n          case 'process':\n            result = await curriculumDiscoveryService.processDocument(documentId, userId);\n            break;\n          case 'download-and-process': {\n            const downloadResult = await curriculumDiscoveryService.downloadDocument(documentId);\n            if (downloadResult.success) {\n              result = await curriculumDiscoveryService.processDocument(documentId, userId);\n              result.filePath = downloadResult.filePath;\n            } else {\n              result = downloadResult;\n            }\n            break;\n          }\n          case 'verify': {\n            const isAvailable = await curriculumDiscoveryService.verifyDocument(documentId);\n            result = { success: true, isAvailable };\n            break;\n          }\n          default:\n            result = { success: false, error: 'Unknown operation' };\n        }\n\n        results.push({\n          documentId,\n          success: result.success,\n          data: result.success ? result : undefined,\n          error: result.success ? undefined : (result.error as string),\n        });\n      } catch (error) {\n        results.push({\n          documentId,\n          success: false,\n          error: error instanceof Error ? error.message : 'Unknown error',\n        });\n      }\n\n      // Add delay between batch operations to avoid overwhelming sources\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    }\n\n    const successCount = results.filter((r) => r.success).length;\n    const failureCount = results.length - successCount;\n\n    res.json({\n      success: true,\n      data: {\n        operation,\n        results,\n        summary: {\n          total: results.length,\n          successful: successCount,\n          failed: failureCount,\n        },\n      },\n    });\n  } catch (error) {\n    console.error('Batch operation error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to perform batch operation',\n    });\n  }\n});\n\nexport default router;\n"],"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","ignoreList":[]}