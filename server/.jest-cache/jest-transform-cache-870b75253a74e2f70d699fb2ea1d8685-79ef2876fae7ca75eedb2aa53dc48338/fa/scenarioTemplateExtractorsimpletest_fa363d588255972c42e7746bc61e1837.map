{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/unit/scenarioTemplateExtractor.simple.test.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/unit/scenarioTemplateExtractor.simple.test.ts"],"sourcesContent":["import { describe, it, expect } from '@jest/globals';\nimport { \n  getScenarioById, \n  generateScenarioContent \n} from '../../src/services/scenarioTemplateExtractor';\n\ndescribe('ScenarioTemplateExtractor - Pure Functions', () => {\n  describe('getScenarioById', () => {\n    it('should return correct scenario by ID', () => {\n      const scenario = getScenarioById('technology_failure');\n\n      expect(scenario).toBeDefined();\n      expect(scenario?.id).toBe('technology_failure');\n      expect(scenario?.name).toBe('Technology Failure Plan');\n      expect(scenario?.procedures).toContain('Do not attempt to fix technical equipment');\n      expect(scenario?.materials).toContain('Printed worksheets and activities (in blue folder)');\n    });\n\n    it('should return lockdown scenario with security procedures', () => {\n      const scenario = getScenarioById('lockdown');\n\n      expect(scenario).toBeDefined();\n      expect(scenario?.id).toBe('lockdown');\n      expect(scenario?.name).toBe('Lockdown/Security Plan');\n      expect(scenario?.procedures).toContain('Follow school lockdown procedures immediately');\n      expect(scenario?.procedures).toContain('Lock classroom door and turn off lights');\n      expect(scenario?.template).toContain('LOCKDOWN PROCEDURES');\n    });\n\n    it('should return severe weather scenario', () => {\n      const scenario = getScenarioById('severe_weather');\n\n      expect(scenario).toBeDefined();\n      expect(scenario?.id).toBe('severe_weather');\n      expect(scenario?.name).toBe('Severe Weather Plan');\n      expect(scenario?.procedures).toContain('Monitor weather announcements throughout the day');\n      expect(scenario?.modifications.schedule).toContain('Cancel any outdoor activities or field trips');\n    });\n\n    it('should return staff shortage scenario', () => {\n      const scenario = getScenarioById('staff_shortage');\n\n      expect(scenario).toBeDefined();\n      expect(scenario?.id).toBe('staff_shortage');\n      expect(scenario?.name).toBe('Staff Shortage Plan');\n      expect(scenario?.procedures).toContain('Check with office for class combinations or room changes');\n      expect(scenario?.materials).toContain('Large group activity supplies');\n    });\n\n    it('should return undefined for non-existent scenario', () => {\n      const scenario = getScenarioById('non_existent_scenario');\n      expect(scenario).toBeUndefined();\n    });\n  });\n\n  describe('generateScenarioContent', () => {\n    it('should replace template variables correctly', () => {\n      const scenario = getScenarioById('general_emergency');\n      expect(scenario).toBeDefined();\n\n      const content = generateScenarioContent(\n        scenario!,\n        'Ms. Johnson',\n        'Grade 3A'\n      );\n\n      expect(content).toContain('Ms. Johnson');\n      expect(content).toContain('Grade 3A');\n      expect(content).toContain(new Date().toLocaleDateString());\n      expect(content).toContain('EMERGENCY SUBSTITUTE PLAN');\n    });\n\n    it('should handle missing teacher name and class name', () => {\n      const scenario = getScenarioById('general_emergency');\n      expect(scenario).toBeDefined();\n\n      const content = generateScenarioContent(scenario!);\n\n      expect(content).toContain('[Teacher Name]');\n      expect(content).toContain('[Class Name]');\n      expect(content).toContain(new Date().toLocaleDateString());\n    });\n\n    it('should generate technology failure template correctly', () => {\n      const scenario = getScenarioById('technology_failure');\n      expect(scenario).toBeDefined();\n\n      const content = generateScenarioContent(\n        scenario!,\n        'Mr. Smith',\n        'Grade 5B'\n      );\n\n      expect(content).toContain('TECHNOLOGY FAILURE SUBSTITUTE PLAN');\n      expect(content).toContain('Mr. Smith');\n      expect(content).toContain('Grade 5B');\n      expect(content).toContain('TECHNOLOGY ALERT');\n      expect(content).toContain('Do NOT attempt to fix any technology');\n    });\n\n    it('should generate severe weather template correctly', () => {\n      const scenario = getScenarioById('severe_weather');\n      expect(scenario).toBeDefined();\n\n      const content = generateScenarioContent(\n        scenario!,\n        'Ms. Brown',\n        'Kindergarten'\n      );\n\n      expect(content).toContain('SEVERE WEATHER SUBSTITUTE PLAN');\n      expect(content).toContain('Ms. Brown');\n      expect(content).toContain('Kindergarten');\n      expect(content).toContain('WEATHER ALERT');\n      expect(content).toContain('Keep students away from windows');\n    });\n\n    it('should generate lockdown template correctly', () => {\n      const scenario = getScenarioById('lockdown');\n      expect(scenario).toBeDefined();\n\n      const content = generateScenarioContent(scenario!);\n\n      expect(content).toContain('LOCKDOWN PROCEDURES');\n      expect(content).toContain('THIS IS A LOCKDOWN SITUATION');\n      expect(content).toContain('Lock door, turn off lights');\n      expect(content).toContain('DO NOT:');\n      expect(content).toContain('Open door for anyone');\n    });\n\n    it('should generate staff shortage template correctly', () => {\n      const scenario = getScenarioById('staff_shortage');\n      expect(scenario).toBeDefined();\n\n      const content = generateScenarioContent(scenario!);\n\n      expect(content).toContain('STAFF SHORTAGE SUBSTITUTE PLAN');\n      expect(content).toContain('MULTIPLE STAFF ABSENT');\n      expect(content).toContain('LARGE GROUP MANAGEMENT');\n      expect(content).toContain('Higher supervision needed');\n    });\n  });\n\n  describe('Scenario Content Validation', () => {\n    it('should ensure all scenarios have required properties', () => {\n      const scenarios = [\n        'general_emergency',\n        'technology_failure',\n        'severe_weather',\n        'lockdown',\n        'staff_shortage'\n      ];\n\n      scenarios.forEach(scenarioId => {\n        const scenario = getScenarioById(scenarioId);\n        expect(scenario).toBeDefined();\n        expect(scenario).toHaveProperty('id');\n        expect(scenario).toHaveProperty('name');\n        expect(scenario).toHaveProperty('description');\n        expect(scenario).toHaveProperty('procedures');\n        expect(scenario).toHaveProperty('materials');\n        expect(scenario).toHaveProperty('contacts');\n        expect(scenario).toHaveProperty('modifications');\n        expect(scenario).toHaveProperty('template');\n\n        // Validate procedures array\n        expect(scenario!.procedures).toBeInstanceOf(Array);\n        expect(scenario!.procedures.length).toBeGreaterThan(0);\n\n        // Validate materials array\n        expect(scenario!.materials).toBeInstanceOf(Array);\n        expect(scenario!.materials.length).toBeGreaterThan(0);\n\n        // Validate contacts array\n        expect(scenario!.contacts).toBeInstanceOf(Array);\n        expect(scenario!.contacts.length).toBeGreaterThan(0);\n\n        // Validate modifications structure\n        expect(scenario!.modifications).toHaveProperty('schedule');\n        expect(scenario!.modifications).toHaveProperty('activities');\n        expect(scenario!.modifications).toHaveProperty('safety');\n        expect(scenario!.modifications.schedule).toBeInstanceOf(Array);\n        expect(scenario!.modifications.activities).toBeInstanceOf(Array);\n        expect(scenario!.modifications.safety).toBeInstanceOf(Array);\n\n        // Validate template is non-empty string\n        expect(typeof scenario!.template).toBe('string');\n        expect(scenario!.template.length).toBeGreaterThan(0);\n      });\n    });\n\n    it('should ensure emergency contacts include 911', () => {\n      const scenarios = [\n        'general_emergency',\n        'technology_failure',\n        'severe_weather',\n        'lockdown',\n        'staff_shortage'\n      ];\n\n      scenarios.forEach(scenarioId => {\n        const scenario = getScenarioById(scenarioId);\n        const hasEmergencyContact = scenario!.contacts.some(\n          contact => contact.number === '911' || contact.role.toLowerCase().includes('emergency')\n        );\n        expect(hasEmergencyContact).toBe(true);\n      });\n    });\n  });\n});"],"version":3}