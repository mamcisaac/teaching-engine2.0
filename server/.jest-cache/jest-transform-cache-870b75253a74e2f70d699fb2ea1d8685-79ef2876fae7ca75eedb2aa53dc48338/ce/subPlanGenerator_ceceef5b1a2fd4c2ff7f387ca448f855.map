{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/subPlanGenerator.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/subPlanGenerator.ts"],"sourcesContent":["import PDFDocument from 'pdfkit';\nimport type * as PDFKit from 'pdfkit';\n\nexport interface DaySchedule {\n  time: string;\n  activity: string;\n}\n\nexport interface UpcomingOverview {\n  date: string;\n  summary: string;\n}\n\nexport interface SubPlanInput {\n  today: DaySchedule[];\n  upcoming: UpcomingOverview[];\n  procedures: string;\n  studentNotes: string;\n  emergencyContacts: string;\n  curriculumOutcomes?: Array<{\n    code: string;\n    description: string;\n    subject: string;\n  }>;\n  goals?: Array<{\n    id: number;\n    text: string;\n    status: string;\n    studentName?: string;\n  }>;\n  routines?: Array<{\n    id: number;\n    title: string;\n    description: string;\n    category: string;\n    timeOfDay?: string;\n  }>;\n  fallbackPlan?: string;\n}\n\n/**\n * Generate a PDF buffer for an emergency substitute plan.\n */\nexport function generateSubPlanPDF(\n  data: SubPlanInput,\n  doc?: PDFKit.PDFDocument,\n): Promise<Buffer | void> {\n  return new Promise((resolve) => {\n    const d = doc ?? new PDFDocument();\n    const chunks: Buffer[] = [];\n    if (!doc) {\n      d.on('data', (chunk: Buffer) => chunks.push(chunk));\n      d.on('end', () => resolve(Buffer.concat(chunks)));\n    }\n\n    d.fontSize(16).text('Emergency Sub Plan', { align: 'center' });\n    d.moveDown();\n\n    d.fontSize(12).text('Today', { underline: true });\n    data.today.forEach((item) => {\n      d.text(`${item.time} - ${item.activity}`);\n    });\n    d.moveDown();\n\n    d.text('Next 3 Days', { underline: true });\n    data.upcoming.forEach((day) => {\n      d.text(`${day.date}: ${day.summary}`);\n    });\n    d.moveDown();\n\n    d.text('Classroom Procedures', { underline: true });\n    d.text(data.procedures);\n    d.moveDown();\n\n    d.text('Student Notes', { underline: true });\n    d.text(data.studentNotes);\n    d.moveDown();\n\n    d.text('Emergency Contacts', { underline: true });\n    d.text(data.emergencyContacts);\n    d.moveDown();\n\n    // Add class routines section if available\n    if (data.routines && data.routines.length > 0) {\n      d.text('Class Routines', { underline: true });\n      \n      // Group routines by category\n      const byCategory: Record<string, typeof data.routines> = {};\n      data.routines.forEach((routine) => {\n        if (!byCategory[routine.category]) {\n          byCategory[routine.category] = [];\n        }\n        byCategory[routine.category].push(routine);\n      });\n\n      // Print routines by category\n      Object.entries(byCategory).forEach(([category, routines]) => {\n        d.font('Helvetica-Bold').text(category.charAt(0).toUpperCase() + category.slice(1));\n        d.font('Helvetica');\n\n        routines.forEach((routine) => {\n          const timeStr = routine.timeOfDay ? ` (${routine.timeOfDay})` : '';\n          d.text(`• ${routine.title}${timeStr}`, {\n            indent: 20,\n            continued: true,\n          });\n          d.text(` - ${routine.description}`, {\n            indent: 30,\n            continued: false,\n          });\n        });\n        d.moveDown(0.5);\n      });\n      d.moveDown();\n    }\n\n    // Add student goals section if available\n    if (data.goals && data.goals.length > 0) {\n      d.text('Current Student Goals', { underline: true });\n      data.goals.forEach((goal) => {\n        const studentStr = goal.studentName ? `${goal.studentName}: ` : '';\n        d.text(`• ${studentStr}${goal.text}`, {\n          indent: 20,\n          continued: false,\n        });\n      });\n      d.moveDown();\n    }\n\n    // Add curriculum outcomes section if available\n    if (data.curriculumOutcomes && data.curriculumOutcomes.length > 0) {\n      d.text('Learning Goals (Curriculum Outcomes)', { underline: true });\n\n      // Group outcomes by subject\n      const bySubject: Record<string, Array<{ code: string; description: string }>> = {};\n      data.curriculumOutcomes.forEach((outcome) => {\n        if (!bySubject[outcome.subject]) {\n          bySubject[outcome.subject] = [];\n        }\n        bySubject[outcome.subject].push({\n          code: outcome.code,\n          description: outcome.description,\n        });\n      });\n\n      // Print outcomes by subject\n      Object.entries(bySubject).forEach(([subject, outcomes]) => {\n        d.font('Helvetica-Bold').text(subject);\n        d.font('Helvetica');\n\n        outcomes.forEach((outcome) => {\n          d.text(`• ${outcome.code} – ${outcome.description}`, {\n            indent: 20,\n            continued: false,\n          });\n        });\n        d.moveDown(0.5);\n      });\n      d.moveDown();\n    }\n\n    // Add fallback plan section if available\n    if (data.fallbackPlan) {\n      d.text('Emergency Fallback Plan', { underline: true });\n      d.text(data.fallbackPlan);\n      d.moveDown();\n    }\n\n    if (!doc) {\n      d.end();\n    } else {\n      resolve();\n    }\n  });\n}\n"],"version":3}