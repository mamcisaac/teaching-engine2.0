38fafd980a1c3546baf11c36d3147f18
/* istanbul ignore next */
function cov_piy7dyy4j() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/validation.ts";
  var hash = "db17a826543fcf07d3d8a83767db23d6940461da";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/validation.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 7,
          column: 2
        }
      },
      "1": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 23,
          column: 1
        }
      },
      "2": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 64
        }
      },
      "3": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 74
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 22,
          column: 6
        }
      },
      "5": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 34,
          column: 2
        }
      },
      "6": {
        start: {
          line: 35,
          column: 37
        },
        end: {
          line: 38,
          column: 2
        }
      },
      "7": {
        start: {
          line: 35,
          column: 74
        },
        end: {
          line: 35,
          column: 161
        }
      },
      "8": {
        start: {
          line: 39,
          column: 37
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "9": {
        start: {
          line: 42,
          column: 22
        },
        end: {
          line: 42,
          column: 109
        }
      },
      "10": {
        start: {
          line: 46,
          column: 36
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "11": {
        start: {
          line: 58,
          column: 36
        },
        end: {
          line: 58,
          column: 94
        }
      },
      "12": {
        start: {
          line: 59,
          column: 37
        },
        end: {
          line: 62,
          column: 2
        }
      },
      "13": {
        start: {
          line: 63,
          column: 39
        },
        end: {
          line: 65,
          column: 2
        }
      },
      "14": {
        start: {
          line: 66,
          column: 36
        },
        end: {
          line: 71,
          column: 2
        }
      },
      "15": {
        start: {
          line: 72,
          column: 40
        },
        end: {
          line: 79,
          column: 2
        }
      },
      "16": {
        start: {
          line: 80,
          column: 38
        },
        end: {
          line: 85,
          column: 2
        }
      },
      "17": {
        start: {
          line: 86,
          column: 38
        },
        end: {
          line: 86,
          column: 70
        }
      },
      "18": {
        start: {
          line: 87,
          column: 37
        },
        end: {
          line: 98,
          column: 2
        }
      },
      "19": {
        start: {
          line: 94,
          column: 26
        },
        end: {
          line: 94,
          column: 54
        }
      },
      "20": {
        start: {
          line: 99,
          column: 37
        },
        end: {
          line: 110,
          column: 2
        }
      },
      "21": {
        start: {
          line: 104,
          column: 26
        },
        end: {
          line: 104,
          column: 54
        }
      },
      "22": {
        start: {
          line: 111,
          column: 47
        },
        end: {
          line: 115,
          column: 2
        }
      },
      "23": {
        start: {
          line: 116,
          column: 47
        },
        end: {
          line: 120,
          column: 2
        }
      },
      "24": {
        start: {
          line: 121,
          column: 44
        },
        end: {
          line: 127,
          column: 2
        }
      },
      "25": {
        start: {
          line: 128,
          column: 44
        },
        end: {
          line: 132,
          column: 2
        }
      },
      "26": {
        start: {
          line: 133,
          column: 31
        },
        end: {
          line: 140,
          column: 2
        }
      },
      "27": {
        start: {
          line: 141,
          column: 40
        },
        end: {
          line: 144,
          column: 2
        }
      },
      "28": {
        start: {
          line: 141,
          column: 80
        },
        end: {
          line: 141,
          column: 130
        }
      },
      "29": {
        start: {
          line: 145,
          column: 40
        },
        end: {
          line: 150,
          column: 2
        }
      },
      "30": {
        start: {
          line: 147,
          column: 22
        },
        end: {
          line: 147,
          column: 109
        }
      },
      "31": {
        start: {
          line: 151,
          column: 41
        },
        end: {
          line: 158,
          column: 2
        }
      },
      "32": {
        start: {
          line: 159,
          column: 41
        },
        end: {
          line: 159,
          column: 76
        }
      },
      "33": {
        start: {
          line: 160,
          column: 35
        },
        end: {
          line: 162,
          column: 2
        }
      },
      "34": {
        start: {
          line: 163,
          column: 39
        },
        end: {
          line: 169,
          column: 2
        }
      },
      "35": {
        start: {
          line: 170,
          column: 39
        },
        end: {
          line: 176,
          column: 2
        }
      },
      "36": {
        start: {
          line: 177,
          column: 45
        },
        end: {
          line: 185,
          column: 2
        }
      },
      "37": {
        start: {
          line: 187,
          column: 26
        },
        end: {
          line: 187,
          column: 88
        }
      },
      "38": {
        start: {
          line: 187,
          column: 32
        },
        end: {
          line: 187,
          column: 88
        }
      },
      "39": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 198,
          column: 6
        }
      },
      "40": {
        start: {
          line: 192,
          column: 23
        },
        end: {
          line: 192,
          column: 49
        }
      },
      "41": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "42": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 76
        }
      },
      "43": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 31
        }
      },
      "44": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 9,
            column: 25
          }
        },
        loc: {
          start: {
            line: 9,
            column: 66
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 64
          },
          end: {
            line: 35,
            column: 65
          }
        },
        loc: {
          start: {
            line: 35,
            column: 74
          },
          end: {
            line: 35,
            column: 161
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        loc: {
          start: {
            line: 42,
            column: 22
          },
          end: {
            line: 42,
            column: 109
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        },
        loc: {
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 94,
            column: 54
          }
        },
        line: 94
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 104,
            column: 17
          }
        },
        loc: {
          start: {
            line: 104,
            column: 26
          },
          end: {
            line: 104,
            column: 54
          }
        },
        line: 104
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 141,
            column: 70
          },
          end: {
            line: 141,
            column: 71
          }
        },
        loc: {
          start: {
            line: 141,
            column: 80
          },
          end: {
            line: 141,
            column: 130
          }
        },
        line: 141
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        loc: {
          start: {
            line: 147,
            column: 22
          },
          end: {
            line: 147,
            column: 109
          }
        },
        line: 147
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 187,
            column: 26
          },
          end: {
            line: 187,
            column: 27
          }
        },
        loc: {
          start: {
            line: 187,
            column: 32
          },
          end: {
            line: 187,
            column: 88
          }
        },
        line: 187
      },
      "8": {
        name: "validate",
        decl: {
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 188,
            column: 24
          }
        },
        loc: {
          start: {
            line: 188,
            column: 33
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 188
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 189,
            column: 11
          },
          end: {
            line: 189,
            column: 12
          }
        },
        loc: {
          start: {
            line: 189,
            column: 31
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 189
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 36
          },
          end: {
            line: 9,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 47
          },
          end: {
            line: 9,
            column: 52
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 10,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 34
          },
          end: {
            line: 10,
            column: 51
          }
        }, {
          start: {
            line: 10,
            column: 54
          },
          end: {
            line: 10,
            column: 64
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 19
          },
          end: {
            line: 11,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 11,
            column: 34
          },
          end: {
            line: 11,
            column: 61
          }
        }, {
          start: {
            line: 11,
            column: 64
          },
          end: {
            line: 11,
            column: 74
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 13,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 13,
            column: 38
          }
        }, {
          start: {
            line: 13,
            column: 41
          },
          end: {
            line: 13,
            column: 58
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 16,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 16,
            column: 29
          }
        }, {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 16,
            column: 41
          }
        }],
        line: 16
      },
      "5": {
        loc: {
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 20,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 20,
            column: 29
          }
        }, {
          start: {
            line: 20,
            column: 33
          },
          end: {
            line: 20,
            column: 41
          }
        }],
        line: 20
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 74
          },
          end: {
            line: 35,
            column: 161
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 74
          },
          end: {
            line: 35,
            column: 107
          }
        }, {
          start: {
            line: 35,
            column: 111
          },
          end: {
            line: 35,
            column: 161
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 76
          },
          end: {
            line: 35,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 76
          },
          end: {
            line: 35,
            column: 90
          }
        }, {
          start: {
            line: 35,
            column: 94
          },
          end: {
            line: 35,
            column: 106
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 42,
            column: 22
          },
          end: {
            line: 42,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 22
          },
          end: {
            line: 42,
            column: 55
          }
        }, {
          start: {
            line: 42,
            column: 59
          },
          end: {
            line: 42,
            column: 109
          }
        }],
        line: 42
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 38
          }
        }, {
          start: {
            line: 42,
            column: 42
          },
          end: {
            line: 42,
            column: 54
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 147,
            column: 22
          },
          end: {
            line: 147,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 22
          },
          end: {
            line: 147,
            column: 55
          }
        }, {
          start: {
            line: 147,
            column: 59
          },
          end: {
            line: 147,
            column: 109
          }
        }],
        line: 147
      },
      "11": {
        loc: {
          start: {
            line: 147,
            column: 24
          },
          end: {
            line: 147,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 24
          },
          end: {
            line: 147,
            column: 38
          }
        }, {
          start: {
            line: 147,
            column: 42
          },
          end: {
            line: 147,
            column: 54
          }
        }],
        line: 147
      },
      "12": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/validation.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/validation.ts"],
      sourcesContent: ["import { z, ZodSchema } from 'zod';\nimport { Request, Response, NextFunction } from 'express';\n// import { ALLOWED_TEMPLATES } from './services/newsletterGenerator';\n\nexport const subjectSchema = z.object({\n  name: z.string().min(1),\n  nameEn: z.string().optional(),\n  nameFr: z.string().optional(),\n});\n\n// Helper function to create bilingual fields\nconst bilingualString = (fieldName: string, required = false, options?: { max?: number }) => {\n  const baseSchema = required ? z.string().min(1) : z.string();\n  const schema = options?.max ? baseSchema.max(options.max) : baseSchema;\n  return {\n    [fieldName]: required ? schema : schema.optional(),\n    [`${fieldName}En`]: z\n      .string()\n      .max(options?.max || Infinity)\n      .optional(),\n    [`${fieldName}Fr`]: z\n      .string()\n      .max(options?.max || Infinity)\n      .optional(),\n  };\n};\n\n// Create base schema without refinement for update\nconst baseMilestoneSchema = z.object({\n  ...bilingualString('title', true),\n  subjectId: z.number(),\n  targetDate: z.string().datetime().optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  estHours: z.number().int().optional(),\n  ...bilingualString('description', false, { max: 10000 }),\n  expectations: z.array(z.string()).optional(),\n});\n\nexport const milestoneCreateSchema = baseMilestoneSchema.refine(\n  (data) => !(data.startDate && data.endDate) || new Date(data.startDate) <= new Date(data.endDate),\n  {\n    message: 'End date must be after or equal to start date',\n    path: ['endDate'],\n  },\n);\n\nexport const milestoneUpdateSchema = baseMilestoneSchema\n  .omit({ subjectId: true })\n  .partial()\n  .refine(\n    (data) =>\n      !(data.startDate && data.endDate) || new Date(data.startDate) <= new Date(data.endDate),\n    {\n      message: 'End date must be after or equal to start date',\n      path: ['endDate'],\n    },\n  );\n\nexport const activityCreateSchema = z.object({\n  ...bilingualString('title', true),\n  milestoneId: z.number(),\n  activityType: z.enum(['LESSON', 'ASSESSMENT']).optional(),\n  durationMins: z.number().int().optional(),\n  ...bilingualString('privateNote'),\n  ...bilingualString('publicNote'),\n  ...bilingualString('materialsText', false, { max: 500 }),\n  completedAt: z.string().datetime().optional(),\n  tags: z.array(z.string()).optional(),\n  expectations: z.array(z.string()).optional(),\n});\n\nexport const activityUpdateSchema = activityCreateSchema.omit({ milestoneId: true }).partial();\n\nexport const activityReorderSchema = z.object({\n  milestoneId: z.number(),\n  activityIds: z.array(z.number()),\n});\n\nexport const activityMaterialsSchema = z.object({\n  materialsText: z.string().max(500).optional(),\n});\n\nexport const timetableEntrySchema = z.object({\n  day: z.number().int().min(0).max(6),\n  startMin: z.number().int().min(0).max(1440),\n  endMin: z.number().int().min(1).max(1440),\n  subjectId: z.number().int().optional().nullable(),\n});\n\nexport const newsletterGenerateSchema = z.object({\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  template: z.string().optional(), // Legacy newsletter templates disabled\n  includePhotos: z.boolean().optional(),\n  useLLM: z.boolean().optional(),\n  language: z.enum(['en', 'fr', 'both']).optional(),\n});\n\nexport const newsletterCreateSchema = z.object({\n  ...bilingualString('title', true),\n  ...bilingualString('content', true),\n  ...bilingualString('rawDraft'),\n  ...bilingualString('polishedDraft'),\n});\n\nexport const newsletterUpdateSchema = newsletterCreateSchema.partial();\n\nexport const smartGoalCreateSchema = z.object({\n  outcomeId: z.string(),\n  milestoneId: z.number().optional(),\n  description: z.string().min(1).max(1000),\n  targetDate: z\n    .string()\n    .datetime()\n    .refine((date) => new Date(date) >= new Date(), {\n      message: 'Target date must be today or in the future',\n    }),\n  targetValue: z.number().int().min(0).max(100),\n});\n\nexport const smartGoalUpdateSchema = z.object({\n  description: z.string().min(1).max(1000).optional(),\n  targetDate: z\n    .string()\n    .datetime()\n    .refine((date) => new Date(date) >= new Date(), {\n      message: 'Target date must be today or in the future',\n    })\n    .optional(),\n  targetValue: z.number().int().min(0).max(100).optional(),\n  observedValue: z.number().int().min(0).max(100).optional(),\n});\n\nexport const oralRoutineTemplateCreateSchema = z.object({\n  ...bilingualString('title', true, { max: 200 }),\n  ...bilingualString('description', false, { max: 1000 }),\n  expectations: z.array(z.string()).optional(),\n});\n\nexport const oralRoutineTemplateUpdateSchema = z.object({\n  ...bilingualString('title', false, { max: 200 }),\n  ...bilingualString('description', false, { max: 1000 }),\n  expectations: z.array(z.string()).optional(),\n});\n\nexport const dailyOralRoutineCreateSchema = z.object({\n  date: z.string().datetime(),\n  templateId: z.number().int().positive(),\n  completed: z.boolean().optional(),\n  notes: z.string().max(500).optional(),\n  participation: z.number().int().min(0).max(100).optional(),\n});\n\nexport const dailyOralRoutineUpdateSchema = z.object({\n  completed: z.boolean().optional(),\n  notes: z.string().max(500).optional(),\n  participation: z.number().int().min(0).max(100).optional(),\n});\n\nconst baseThematicUnitSchema = z.object({\n  ...bilingualString('title', true, { max: 200 }),\n  ...bilingualString('description', false, { max: 2000 }),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  expectations: z.array(z.string()).optional(),\n  activities: z.array(z.number().int()).optional(),\n});\n\nexport const thematicUnitCreateSchema = baseThematicUnitSchema.refine(\n  (data) => new Date(data.startDate) <= new Date(data.endDate),\n  {\n    message: 'End date must be after or equal to start date',\n    path: ['endDate'],\n  },\n);\n\nexport const thematicUnitUpdateSchema = baseThematicUnitSchema\n  .partial()\n  .refine(\n    (data) =>\n      !(data.startDate && data.endDate) || new Date(data.startDate) <= new Date(data.endDate),\n    {\n      message: 'End date must be after or equal to start date',\n      path: ['endDate'],\n    },\n  );\n\nexport const parentMessageCreateSchema = z.object({\n  ...bilingualString('title', true, { max: 200 }),\n  timeframe: z.string().min(1).max(100),\n  contentFr: z.string().min(1),\n  contentEn: z.string().min(1),\n  linkedOutcomeIds: z.array(z.string()).optional(),\n  linkedActivityIds: z.array(z.number().int()).optional(),\n});\n\nexport const parentMessageUpdateSchema = parentMessageCreateSchema.partial();\n\nexport const studentCreateSchema = z.object({\n  name: z.string().min(1).max(200),\n});\n\nexport const studentGoalCreateSchema = z.object({\n  text: z.string().min(1).max(500),\n  outcomeId: z.string().optional(),\n  // themeId removed - ThematicUnit model archived\n  unitPlanId: z.string().optional(),\n  status: z.enum(['active', 'completed', 'abandoned']).default('active'),\n});\n\nexport const studentGoalUpdateSchema = z.object({\n  text: z.string().min(1).max(500).optional(),\n  outcomeId: z.string().optional(),\n  // themeId removed - ThematicUnit model archived\n  unitPlanId: z.string().optional(),\n  status: z.enum(['active', 'completed', 'abandoned']).optional(),\n});\n\nexport const studentReflectionCreateSchema = z.object({\n  date: z.string().datetime().optional(),\n  text: z.string().max(1000).optional(),\n  emoji: z.string().max(10).optional(),\n  voicePath: z.string().max(500).optional(),\n  outcomeId: z.string().optional(),\n  // themeId removed - ThematicUnit model archived\n  unitPlanId: z.string().optional(),\n});\n\n// CUID validation helper - matches Prisma @default(cuid()) format\nexport const cuidSchema = () => z.string().regex(/^c[0-9a-z]{24}$/, 'Invalid ID format');\n\nexport function validate(schema: ZodSchema) {\n  return (req: Request, res: Response, next: NextFunction) => {\n    // For now, always validate req.body directly\n    // The schemas should not wrap body in an object\n    const result = schema.safeParse(req.body);\n\n    if (!result.success) {\n      return res.status(400).json({ errors: result.error.flatten() });\n    }\n\n    req.body = result.data;\n    next();\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "db17a826543fcf07d3d8a83767db23d6940461da"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_piy7dyy4j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_piy7dyy4j();
import { z } from 'zod';
// import { ALLOWED_TEMPLATES } from './services/newsletterGenerator';
export const subjectSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[0]++, z.object({
  name: z.string().min(1),
  nameEn: z.string().optional(),
  nameFr: z.string().optional()
}));
// Helper function to create bilingual fields
/* istanbul ignore next */
cov_piy7dyy4j().s[1]++;
const bilingualString = (fieldName, required =
/* istanbul ignore next */
(cov_piy7dyy4j().b[0][0]++, false), options) => {
  /* istanbul ignore next */
  cov_piy7dyy4j().f[0]++;
  const baseSchema =
  /* istanbul ignore next */
  (cov_piy7dyy4j().s[2]++, required ?
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[1][0]++, z.string().min(1)) :
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[1][1]++, z.string()));
  const schema =
  /* istanbul ignore next */
  (cov_piy7dyy4j().s[3]++, options?.max ?
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[2][0]++, baseSchema.max(options.max)) :
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[2][1]++, baseSchema));
  /* istanbul ignore next */
  cov_piy7dyy4j().s[4]++;
  return {
    [fieldName]: required ?
    /* istanbul ignore next */
    (cov_piy7dyy4j().b[3][0]++, schema) :
    /* istanbul ignore next */
    (cov_piy7dyy4j().b[3][1]++, schema.optional()),
    [`${fieldName}En`]: z.string().max(
    /* istanbul ignore next */
    (cov_piy7dyy4j().b[4][0]++, options?.max) ||
    /* istanbul ignore next */
    (cov_piy7dyy4j().b[4][1]++, Infinity)).optional(),
    [`${fieldName}Fr`]: z.string().max(
    /* istanbul ignore next */
    (cov_piy7dyy4j().b[5][0]++, options?.max) ||
    /* istanbul ignore next */
    (cov_piy7dyy4j().b[5][1]++, Infinity)).optional()
  };
};
// Create base schema without refinement for update
const baseMilestoneSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[5]++, z.object({
  ...bilingualString('title', true),
  subjectId: z.number(),
  targetDate: z.string().datetime().optional(),
  startDate: z.string().datetime().optional(),
  endDate: z.string().datetime().optional(),
  estHours: z.number().int().optional(),
  ...bilingualString('description', false, {
    max: 10000
  }),
  expectations: z.array(z.string()).optional()
}));
export const milestoneCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[6]++, baseMilestoneSchema.refine(data => {
  /* istanbul ignore next */
  cov_piy7dyy4j().f[1]++;
  cov_piy7dyy4j().s[7]++;
  return /* istanbul ignore next */(cov_piy7dyy4j().b[6][0]++, !(
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[7][0]++, data.startDate) &&
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[7][1]++, data.endDate))) ||
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[6][1]++, new Date(data.startDate) <= new Date(data.endDate));
}, {
  message: 'End date must be after or equal to start date',
  path: ['endDate']
}));
export const milestoneUpdateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[8]++, baseMilestoneSchema.omit({
  subjectId: true
}).partial().refine(data => {
  /* istanbul ignore next */
  cov_piy7dyy4j().f[2]++;
  cov_piy7dyy4j().s[9]++;
  return /* istanbul ignore next */(cov_piy7dyy4j().b[8][0]++, !(
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[9][0]++, data.startDate) &&
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[9][1]++, data.endDate))) ||
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[8][1]++, new Date(data.startDate) <= new Date(data.endDate));
}, {
  message: 'End date must be after or equal to start date',
  path: ['endDate']
}));
export const activityCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[10]++, z.object({
  ...bilingualString('title', true),
  milestoneId: z.number(),
  activityType: z.enum(['LESSON', 'ASSESSMENT']).optional(),
  durationMins: z.number().int().optional(),
  ...bilingualString('privateNote'),
  ...bilingualString('publicNote'),
  ...bilingualString('materialsText', false, {
    max: 500
  }),
  completedAt: z.string().datetime().optional(),
  tags: z.array(z.string()).optional(),
  expectations: z.array(z.string()).optional()
}));
export const activityUpdateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[11]++, activityCreateSchema.omit({
  milestoneId: true
}).partial());
export const activityReorderSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[12]++, z.object({
  milestoneId: z.number(),
  activityIds: z.array(z.number())
}));
export const activityMaterialsSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[13]++, z.object({
  materialsText: z.string().max(500).optional()
}));
export const timetableEntrySchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[14]++, z.object({
  day: z.number().int().min(0).max(6),
  startMin: z.number().int().min(0).max(1440),
  endMin: z.number().int().min(1).max(1440),
  subjectId: z.number().int().optional().nullable()
}));
export const newsletterGenerateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[15]++, z.object({
  startDate: z.string().datetime(),
  endDate: z.string().datetime(),
  template: z.string().optional(),
  // Legacy newsletter templates disabled
  includePhotos: z.boolean().optional(),
  useLLM: z.boolean().optional(),
  language: z.enum(['en', 'fr', 'both']).optional()
}));
export const newsletterCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[16]++, z.object({
  ...bilingualString('title', true),
  ...bilingualString('content', true),
  ...bilingualString('rawDraft'),
  ...bilingualString('polishedDraft')
}));
export const newsletterUpdateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[17]++, newsletterCreateSchema.partial());
export const smartGoalCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[18]++, z.object({
  outcomeId: z.string(),
  milestoneId: z.number().optional(),
  description: z.string().min(1).max(1000),
  targetDate: z.string().datetime().refine(date => {
    /* istanbul ignore next */
    cov_piy7dyy4j().f[3]++;
    cov_piy7dyy4j().s[19]++;
    return new Date(date) >= new Date();
  }, {
    message: 'Target date must be today or in the future'
  }),
  targetValue: z.number().int().min(0).max(100)
}));
export const smartGoalUpdateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[20]++, z.object({
  description: z.string().min(1).max(1000).optional(),
  targetDate: z.string().datetime().refine(date => {
    /* istanbul ignore next */
    cov_piy7dyy4j().f[4]++;
    cov_piy7dyy4j().s[21]++;
    return new Date(date) >= new Date();
  }, {
    message: 'Target date must be today or in the future'
  }).optional(),
  targetValue: z.number().int().min(0).max(100).optional(),
  observedValue: z.number().int().min(0).max(100).optional()
}));
export const oralRoutineTemplateCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[22]++, z.object({
  ...bilingualString('title', true, {
    max: 200
  }),
  ...bilingualString('description', false, {
    max: 1000
  }),
  expectations: z.array(z.string()).optional()
}));
export const oralRoutineTemplateUpdateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[23]++, z.object({
  ...bilingualString('title', false, {
    max: 200
  }),
  ...bilingualString('description', false, {
    max: 1000
  }),
  expectations: z.array(z.string()).optional()
}));
export const dailyOralRoutineCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[24]++, z.object({
  date: z.string().datetime(),
  templateId: z.number().int().positive(),
  completed: z.boolean().optional(),
  notes: z.string().max(500).optional(),
  participation: z.number().int().min(0).max(100).optional()
}));
export const dailyOralRoutineUpdateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[25]++, z.object({
  completed: z.boolean().optional(),
  notes: z.string().max(500).optional(),
  participation: z.number().int().min(0).max(100).optional()
}));
const baseThematicUnitSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[26]++, z.object({
  ...bilingualString('title', true, {
    max: 200
  }),
  ...bilingualString('description', false, {
    max: 2000
  }),
  startDate: z.string().datetime(),
  endDate: z.string().datetime(),
  expectations: z.array(z.string()).optional(),
  activities: z.array(z.number().int()).optional()
}));
export const thematicUnitCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[27]++, baseThematicUnitSchema.refine(data => {
  /* istanbul ignore next */
  cov_piy7dyy4j().f[5]++;
  cov_piy7dyy4j().s[28]++;
  return new Date(data.startDate) <= new Date(data.endDate);
}, {
  message: 'End date must be after or equal to start date',
  path: ['endDate']
}));
export const thematicUnitUpdateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[29]++, baseThematicUnitSchema.partial().refine(data => {
  /* istanbul ignore next */
  cov_piy7dyy4j().f[6]++;
  cov_piy7dyy4j().s[30]++;
  return /* istanbul ignore next */(cov_piy7dyy4j().b[10][0]++, !(
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[11][0]++, data.startDate) &&
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[11][1]++, data.endDate))) ||
  /* istanbul ignore next */
  (cov_piy7dyy4j().b[10][1]++, new Date(data.startDate) <= new Date(data.endDate));
}, {
  message: 'End date must be after or equal to start date',
  path: ['endDate']
}));
export const parentMessageCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[31]++, z.object({
  ...bilingualString('title', true, {
    max: 200
  }),
  timeframe: z.string().min(1).max(100),
  contentFr: z.string().min(1),
  contentEn: z.string().min(1),
  linkedOutcomeIds: z.array(z.string()).optional(),
  linkedActivityIds: z.array(z.number().int()).optional()
}));
export const parentMessageUpdateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[32]++, parentMessageCreateSchema.partial());
export const studentCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[33]++, z.object({
  name: z.string().min(1).max(200)
}));
export const studentGoalCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[34]++, z.object({
  text: z.string().min(1).max(500),
  outcomeId: z.string().optional(),
  // themeId removed - ThematicUnit model archived
  unitPlanId: z.string().optional(),
  status: z.enum(['active', 'completed', 'abandoned']).default('active')
}));
export const studentGoalUpdateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[35]++, z.object({
  text: z.string().min(1).max(500).optional(),
  outcomeId: z.string().optional(),
  // themeId removed - ThematicUnit model archived
  unitPlanId: z.string().optional(),
  status: z.enum(['active', 'completed', 'abandoned']).optional()
}));
export const studentReflectionCreateSchema =
/* istanbul ignore next */
(cov_piy7dyy4j().s[36]++, z.object({
  date: z.string().datetime().optional(),
  text: z.string().max(1000).optional(),
  emoji: z.string().max(10).optional(),
  voicePath: z.string().max(500).optional(),
  outcomeId: z.string().optional(),
  // themeId removed - ThematicUnit model archived
  unitPlanId: z.string().optional()
}));
// CUID validation helper - matches Prisma @default(cuid()) format
/* istanbul ignore next */
cov_piy7dyy4j().s[37]++;
export const cuidSchema = () => {
  /* istanbul ignore next */
  cov_piy7dyy4j().f[7]++;
  cov_piy7dyy4j().s[38]++;
  return z.string().regex(/^c[0-9a-z]{24}$/, 'Invalid ID format');
};
export function validate(schema) {
  /* istanbul ignore next */
  cov_piy7dyy4j().f[8]++;
  cov_piy7dyy4j().s[39]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_piy7dyy4j().f[9]++;
    // For now, always validate req.body directly
    // The schemas should not wrap body in an object
    const result =
    /* istanbul ignore next */
    (cov_piy7dyy4j().s[40]++, schema.safeParse(req.body));
    /* istanbul ignore next */
    cov_piy7dyy4j().s[41]++;
    if (!result.success) {
      /* istanbul ignore next */
      cov_piy7dyy4j().b[12][0]++;
      cov_piy7dyy4j().s[42]++;
      return res.status(400).json({
        errors: result.error.flatten()
      });
    } else
    /* istanbul ignore next */
    {
      cov_piy7dyy4j().b[12][1]++;
    }
    cov_piy7dyy4j().s[43]++;
    req.body = result.data;
    /* istanbul ignore next */
    cov_piy7dyy4j().s[44]++;
    next();
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,