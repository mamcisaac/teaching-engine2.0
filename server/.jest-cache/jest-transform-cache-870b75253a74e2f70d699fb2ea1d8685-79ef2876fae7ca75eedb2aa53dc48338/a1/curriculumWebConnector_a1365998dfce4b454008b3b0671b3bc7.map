{"version":3,"names":["BaseConnector","cheerio","CurriculumWebConnector","sites","cov_9uiotcp0y","s","name","baseUrl","searchUrl","query","grade","f","baseSearch","encodeURIComponent","b","parseResults","html","$","results","each","i","elem","$elem","title","find","text","trim","url","attr","description","gradeMatch","match","undefined","push","startsWith","type","constructor","search","params","searchPromises","map","site","siteActivities","gradeLevel","fetchWithRetryAndTimeout","headers","console","error","load","siteResults","result","activityDetails","fetchActivityDetails","transformToExternalActivity","externalId","generateIdFromUrl","source","sourceName","activityType","inferActivityTypeFromContent","gradeMin","parseInt","gradeMax","subject","language","materials","duration","groupSize","pedagogicalApproach","approach","curriculumAlignments","alignments","createdBy","license","resourceUrls","resources","allResults","Promise","all","flat","getActivityDetails","getUrlFromId","author","details","first","subjectKeywords","keyword","toLowerCase","includes","charAt","toUpperCase","slice","href","URL","toString","materialsSection","split","m","filter","length","content","Buffer","from","replace","substring","_externalId"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/connectors/curriculumWebConnector.ts"],"sourcesContent":["import { BaseConnector } from './baseConnector';\nimport { SearchParams } from '../activityDiscoveryService';\nimport { ExternalActivity } from '@teaching-engine/database';\nimport * as cheerio from 'cheerio';\n\ninterface CurriculumSite {\n  name: string;\n  baseUrl: string;\n  searchUrl: (query: string, grade?: number) => string;\n  parseResults: (html: string, $: cheerio.CheerioAPI) => CurriculumActivity[];\n}\n\ninterface CurriculumActivity {\n  title: string;\n  url: string;\n  description?: string;\n  grade?: string;\n  subject?: string;\n  type?: string;\n}\n\nexport class CurriculumWebConnector extends BaseConnector {\n  private sites: CurriculumSite[] = [\n    {\n      name: 'PEI Curriculum',\n      baseUrl: 'https://www.princeedwardisland.ca',\n      searchUrl: (query: string, grade?: number) => {\n        const baseSearch = `https://www.princeedwardisland.ca/en/search/site/${encodeURIComponent(query)}`;\n        if (grade) {\n          return `${baseSearch}+grade+${grade}`;\n        }\n        return baseSearch;\n      },\n      parseResults: (html: string, $: cheerio.CheerioAPI): CurriculumActivity[] => {\n        const results: CurriculumActivity[] = [];\n\n        // Parse PEI government search results\n        $('.search-result').each((i, elem) => {\n          const $elem = $(elem);\n          const title = $elem.find('.search-result-title a').text().trim();\n          const url = $elem.find('.search-result-title a').attr('href');\n          const description = $elem.find('.search-result-snippet').text().trim();\n\n          if (title && url) {\n            // Extract grade and subject from title or description\n            const gradeMatch = (title + ' ' + description).match(/grade\\s+(\\d+)/i);\n            const grade = gradeMatch ? gradeMatch[1] : undefined;\n\n            results.push({\n              title,\n              url: url.startsWith('http') ? url : `https://www.princeedwardisland.ca${url}`,\n              description,\n              grade,\n              type: 'document',\n            });\n          }\n        });\n\n        return results;\n      },\n    },\n    {\n      name: 'Ontario Curriculum',\n      baseUrl: 'https://www.dcp.edu.gov.on.ca',\n      searchUrl: (query: string, grade?: number) => {\n        return `https://www.dcp.edu.gov.on.ca/en/search?q=${encodeURIComponent(query)}${grade ? `+grade+${grade}` : ''}`;\n      },\n      parseResults: (html: string, $: cheerio.CheerioAPI): CurriculumActivity[] => {\n        const results: CurriculumActivity[] = [];\n\n        // Parse Ontario curriculum search results\n        $('.search-results-item').each((i, elem) => {\n          const $elem = $(elem);\n          const title = $elem.find('h3 a').text().trim();\n          const url = $elem.find('h3 a').attr('href');\n          const description = $elem.find('.description').text().trim();\n\n          if (title && url) {\n            results.push({\n              title,\n              url: url.startsWith('http') ? url : `https://www.dcp.edu.gov.on.ca${url}`,\n              description,\n              type: 'curriculum_doc',\n            });\n          }\n        });\n\n        return results;\n      },\n    },\n  ];\n\n  constructor() {\n    super('CurriculumWeb');\n  }\n\n  async search(\n    params: SearchParams,\n  ): Promise<Omit<ExternalActivity, 'id' | 'createdAt' | 'updatedAt'>[]> {\n    // Search each curriculum site\n    const searchPromises = this.sites.map(async (site) => {\n      const siteActivities: Omit<ExternalActivity, 'id' | 'createdAt' | 'updatedAt'>[] = [];\n      \n      try {\n        const searchUrl = site.searchUrl(params.query, params.gradeLevel);\n        const html = await this.fetchWithRetryAndTimeout(searchUrl, {\n          headers: {\n            'User-Agent': 'Teaching Engine 2.0 Educational Resource Bot (+https://teaching-engine.ca/bot)',\n            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n            'Accept-Language': 'en-US,en;q=0.9,fr;q=0.8',\n          },\n        }, 3, 30000, 2000); // 3 retries, 30s timeout, 2s base delay\n        \n        if (!html) {\n          console.error(`Failed to fetch from ${site.name}`);\n          return siteActivities;\n        }\n        const $ = cheerio.load(html);\n        const siteResults = site.parseResults(html, $);\n\n        // Convert to ExternalActivity format\n        for (const result of siteResults) {\n          // Fetch additional details from the activity page\n          const activityDetails = await this.fetchActivityDetails(result.url);\n\n          siteActivities.push(\n            this.transformToExternalActivity({\n              externalId: this.generateIdFromUrl(result.url),\n              source: this.sourceName,\n              url: result.url,\n              title: result.title,\n              description: activityDetails?.description || result.description,\n              activityType: this.inferActivityTypeFromContent(result, activityDetails),\n              gradeMin: params.gradeLevel || (result.grade ? parseInt(result.grade) : 1),\n              gradeMax: params.gradeLevel || (result.grade ? parseInt(result.grade) : 8),\n              subject: params.subject || activityDetails?.subject || 'General',\n              language: params.language || 'en',\n              materials: activityDetails?.materials || [],\n              duration: activityDetails?.duration || 45,\n              groupSize: activityDetails?.groupSize || 'whole class',\n              pedagogicalApproach: activityDetails?.approach || ['inquiry-based'],\n              curriculumAlignments: activityDetails?.alignments || [],\n              createdBy: site.name,\n              license: 'Government of Canada - Open Government Licence',\n              resourceUrls: activityDetails?.resources || [],\n            }),\n          );\n        }\n      } catch (error) {\n        console.error(`Error searching ${site.name}:`, error);\n      }\n      \n      return siteActivities;\n    });\n\n    const allResults = await Promise.all(searchPromises);\n    return allResults.flat();\n  }\n\n  async getActivityDetails(\n    externalId: string,\n  ): Promise<Omit<ExternalActivity, 'id' | 'createdAt' | 'updatedAt'> | null> {\n    // Reconstruct URL from external ID\n    const url = this.getUrlFromId(externalId);\n    if (!url) return null;\n\n    const activityDetails = await this.fetchActivityDetails(url);\n    if (!activityDetails) return null;\n\n    return this.transformToExternalActivity({\n      externalId,\n      source: this.sourceName,\n      url,\n      title: activityDetails.title,\n      description: activityDetails.description,\n      activityType: activityDetails.type || 'document',\n      gradeMin: activityDetails.gradeMin || 1,\n      gradeMax: activityDetails.gradeMax || 8,\n      subject: activityDetails.subject || 'General',\n      language: activityDetails.language || 'en',\n      materials: activityDetails.materials || [],\n      duration: activityDetails.duration || 45,\n      groupSize: activityDetails.groupSize || 'whole class',\n      pedagogicalApproach: activityDetails.approach || ['direct-instruction'],\n      curriculumAlignments: activityDetails.alignments || [],\n      createdBy: activityDetails.author || 'Unknown',\n      license: 'Government of Canada - Open Government Licence',\n      resourceUrls: activityDetails.resources || [],\n    });\n  }\n\n  private async fetchActivityDetails(url: string): Promise<{\n    title?: string;\n    description?: string;\n    resources?: Array<{ url: string; title: string }>;\n    gradeMin?: number;\n    gradeMax?: number;\n    subject?: string;\n    type?: string;\n    materials?: string[];\n    alignments?: string[];\n    language?: string;\n    duration?: number;\n    groupSize?: string;\n    approach?: string[];\n    author?: string;\n  } | null> {\n    try {\n      const html = await this.fetchWithRetryAndTimeout(url, {\n        headers: {\n          'User-Agent': 'Teaching Engine 2.0 Educational Resource Bot (+https://teaching-engine.ca/bot)',\n          'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n          'Accept-Language': 'en-US,en;q=0.9,fr;q=0.8',\n        },\n      }, 3, 30000, 1000); // 3 retries, 30s timeout, 1s base delay\n      \n      if (!html) {\n        return null;\n      }\n      const $ = cheerio.load(html);\n\n      // Extract common patterns from curriculum pages\n      const details: {\n        title?: string;\n        description?: string;\n        resources: Array<{ url: string; title: string }>;\n        gradeMin?: number;\n        gradeMax?: number;\n        subject?: string;\n        type?: string;\n        materials?: string[];\n        alignments?: string[];\n        language?: string;\n        duration?: number;\n        groupSize?: string;\n        approach?: string[];\n        author?: string;\n      } = {\n        title: $('h1').first().text().trim() || $('title').text().trim(),\n        description:\n          $('meta[name=\"description\"]').attr('content') ||\n          $('.content-description').text().trim() ||\n          $('p').first().text().trim(),\n        resources: [],\n      };\n\n      // Look for grade information\n      const gradeMatch = html.match(/grade\\s+(\\d+)(?:\\s*-\\s*(\\d+))?/i);\n      if (gradeMatch) {\n        details.gradeMin = parseInt(gradeMatch[1]);\n        details.gradeMax = gradeMatch[2] ? parseInt(gradeMatch[2]) : details.gradeMin;\n      }\n\n      // Look for subject information\n      const subjectKeywords = [\n        'mathematics',\n        'math',\n        'science',\n        'english',\n        'french',\n        'social studies',\n        'physical education',\n        'arts',\n        'music',\n      ];\n      for (const keyword of subjectKeywords) {\n        if (html.toLowerCase().includes(keyword)) {\n          details.subject = keyword.charAt(0).toUpperCase() + keyword.slice(1);\n          break;\n        }\n      }\n\n      // Look for PDF links and other resources\n      $('a[href$=\".pdf\"], a[href*=\"/download/\"], a[href*=\"/resource/\"]').each((i, elem) => {\n        const href = $(elem).attr('href');\n        const text = $(elem).text().trim();\n        if (href) {\n          details.resources.push({\n            url: href.startsWith('http') ? href : new URL(href, url).toString(),\n            title: text || 'Resource',\n          });\n        }\n      });\n\n      // Look for activity type indicators\n      if (html.toLowerCase().includes('lesson plan')) {\n        details.type = 'lesson_plan';\n      } else if (html.toLowerCase().includes('worksheet')) {\n        details.type = 'worksheet';\n      } else if (html.toLowerCase().includes('activity')) {\n        details.type = 'handson';\n      } else if (html.toLowerCase().includes('assessment')) {\n        details.type = 'assessment';\n      }\n\n      // Look for materials list\n      const materialsSection = $('.materials, .required-materials, #materials').text();\n      if (materialsSection) {\n        details.materials = materialsSection\n          .split(/[,\\n]/)\n          .map((m) => m.trim())\n          .filter((m) => m.length > 0);\n      }\n\n      // Look for curriculum alignments\n      const alignments: string[] = [];\n      $('.curriculum-expectation, .learning-outcome, .standard').each((i, elem) => {\n        const text = $(elem).text().trim();\n        if (text) alignments.push(text);\n      });\n      if (alignments.length > 0) {\n        details.alignments = alignments;\n      }\n\n      return details;\n    } catch (error) {\n      console.error('Error fetching activity details:', error);\n      return null;\n    }\n  }\n\n  private inferActivityTypeFromContent(\n    result: CurriculumActivity,\n    details: {\n      description?: string;\n    } | null,\n  ): string {\n    const content = (\n      result.title +\n      ' ' +\n      result.description +\n      ' ' +\n      (details?.description || '')\n    ).toLowerCase();\n\n    if (content.includes('worksheet') || content.includes('printable')) {\n      return 'worksheet';\n    } else if (content.includes('lesson plan') || content.includes('teaching plan')) {\n      return 'lesson_plan';\n    } else if (content.includes('experiment') || content.includes('lab')) {\n      return 'experiment';\n    } else if (content.includes('game') || content.includes('play')) {\n      return 'game';\n    } else if (content.includes('project')) {\n      return 'project';\n    } else if (\n      content.includes('assessment') ||\n      content.includes('test') ||\n      content.includes('quiz')\n    ) {\n      return 'assessment';\n    } else if (content.includes('activity') || content.includes('hands-on')) {\n      return 'handson';\n    }\n\n    return 'document';\n  }\n\n  private generateIdFromUrl(url: string): string {\n    // Create a unique ID from the URL\n    return Buffer.from(url)\n      .toString('base64')\n      .replace(/[^a-zA-Z0-9]/g, '')\n      .substring(0, 20);\n  }\n\n  private getUrlFromId(_externalId: string): string | null {\n    // This is a simplified reconstruction - in production, we'd store the mapping\n    // For now, return null as we'd need to look up the original URL\n    return null;\n  }\n}\n"],"mappingsaAAa,QAAQ,iBAAiB;AAG/C,OAAO,KAAKC,OAAO,MAAM,SAAS;AAkBlC,OAAM,MAAOC,sBAAuB,SAAQF,aAAa;EAC/CG,KAAK;EAAA;EAAA,CAAAC,aAAA,GAAAC,CAAA,OAAqB,CAChC;IACEC,IAAI,EAAE,gBAAgB;IACtBC,OAAO,EAAE,mCAAmC;IAC5CC,SAAS,EAAEA,CAACC,KAAa,EAAEC,KAAc,KAAI;MAAA;MAAAN,aAAA,GAAAO,CAAA;MAC3C,MAAMC,UAAU;MAAA;MAAA,CAAAR,aAAA,GAAAC,CAAA,OAAG,oDAAoDQ,kBAAkB,CAACJ,KAAK,CAAC,EAAE;MAAC;MAAAL,aAAA,GAAAC,CAAA;MACnG,IAAIK,KAAK,EAAE;QAAA;QAAAN,aAAA,GAAAU,CAAA;QAAAV,aAAA,GAAAC,CAAA;QACT,OAAO,GAAGO,UAAU,UAAUF,KAAK,EAAE;MACvC,CAAC;MAAA;MAAA;QAAAN,aAAA,GAAAU,CAAA;MAAA;MAAAV,aAAA,GAAAC,CAAA;MACD,OAAOO,UAAU;IACnB,CAAC;IACDG,YAAY,EAAEA,CAACC,IAAY,EAAEC,CAAqB,KAA0B;MAAA;MAAAb,aAAA,GAAAO,CAAA;MAC1E,MAAMO,OAAO;MAAA;MAAA,CAAAd,aAAA,GAAAC,CAAA,OAAyB,EAAE;MAExC;MAAA;MAAAD,aAAA,GAAAC,CAAA;MACAY,CAAC,CAAC,gBAAgB,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,IAAI,KAAI;QAAA;QAAAjB,aAAA,GAAAO,CAAA;QACnC,MAAMW,KAAK;QAAA;QAAA,CAAAlB,aAAA,GAAAC,CAAA,OAAGY,CAAC,CAACI,IAAI,CAAC;QACrB,MAAME,KAAK;QAAA;QAAA,CAAAnB,aAAA,GAAAC,CAAA,OAAGiB,KAAK,CAACE,IAAI,CAAC,wBAAwB,CAAC,CAACC,IAAI,EAAE,CAACC,IAAI,EAAE;QAChE,MAAMC,GAAG;QAAA;QAAA,CAAAvB,aAAA,GAAAC,CAAA,OAAGiB,KAAK,CAACE,IAAI,CAAC,wBAAwB,CAAC,CAACI,IAAI,CAAC,MAAM,CAAC;QAC7D,MAAMC,WAAW;QAAA;QAAA,CAAAzB,aAAA,GAAAC,CAAA,QAAGiB,KAAK,CAACE,IAAI,CAAC,wBAAwB,CAAC,CAACC,IAAI,EAAE,CAACC,IAAI,EAAE;QAAC;QAAAtB,aAAA,GAAAC,CAAA;QAEvE;QAAI;QAAA,CAAAD,aAAA,GAAAU,CAAA,UAAAS,KAAK;QAAA;QAAA,CAAAnB,aAAA,GAAAU,CAAA,UAAIa,GAAG,GAAE;UAAA;UAAAvB,aAAA,GAAAU,CAAA;UAChB;UACA,MAAMgB,UAAU;UAAA;UAAA,CAAA1B,aAAA,GAAAC,CAAA,QAAG,CAACkB,KAAK,GAAG,GAAG,GAAGM,WAAW,EAAEE,KAAK,CAAC,gBAAgB,CAAC;UACtE,MAAMrB,KAAK;UAAA;UAAA,CAAAN,aAAA,GAAAC,CAAA,QAAGyB,UAAU;UAAA;UAAA,CAAA1B,aAAA,GAAAU,CAAA,UAAGgB,UAAU,CAAC,CAAC,CAAC;UAAA;UAAA,CAAA1B,aAAA,GAAAU,CAAA,UAAGkB,SAAS;UAAC;UAAA5B,aAAA,GAAAC,CAAA;UAErDa,OAAO,CAACe,IAAI,CAAC;YACXV,KAAK;YACLI,GAAG,EAAEA,GAAG,CAACO,UAAU,CAAC,MAAM,CAAC;YAAA;YAAA,CAAA9B,aAAA,GAAAU,CAAA,UAAGa,GAAG;YAAA;YAAA,CAAAvB,aAAA,GAAAU,CAAA,UAAG,oCAAoCa,GAAG,EAAE;YAC7EE,WAAW;YACXnB,KAAK;YACLyB,IAAI,EAAE;WACP,CAAC;QACJ,CAAC;QAAA;QAAA;UAAA/B,aAAA,GAAAU,CAAA;QAAA;MACH,CAAC,CAAC;MAAC;MAAAV,aAAA,GAAAC,CAAA;MAEH,OAAOa,OAAO;IAChB;GACD,EACD;IACEZ,IAAI,EAAE,oBAAoB;IAC1BC,OAAO,EAAE,+BAA+B;IACxCC,SAAS,EAAEA,CAACC,KAAa,EAAEC,KAAc,KAAI;MAAA;MAAAN,aAAA,GAAAO,CAAA;MAAAP,aAAA,GAAAC,CAAA;MAC3C,OAAO,6CAA6CQ,kBAAkB,CAACJ,KAAK,CAAC,GAAGC,KAAK;MAAA;MAAA,CAAAN,aAAA,GAAAU,CAAA,UAAG,UAAUJ,KAAK,EAAE;MAAA;MAAA,CAAAN,aAAA,GAAAU,CAAA,UAAG,EAAE,GAAE;IAClH,CAAC;IACDC,YAAY,EAAEA,CAACC,IAAY,EAAEC,CAAqB,KAA0B;MAAA;MAAAb,aAAA,GAAAO,CAAA;MAC1E,MAAMO,OAAO;MAAA;MAAA,CAAAd,aAAA,GAAAC,CAAA,QAAyB,EAAE;MAExC;MAAA;MAAAD,aAAA,GAAAC,CAAA;MACAY,CAAC,CAAC,sBAAsB,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,IAAI,KAAI;QAAA;QAAAjB,aAAA,GAAAO,CAAA;QACzC,MAAMW,KAAK;QAAA;QAAA,CAAAlB,aAAA,GAAAC,CAAA,QAAGY,CAAC,CAACI,IAAI,CAAC;QACrB,MAAME,KAAK;QAAA;QAAA,CAAAnB,aAAA,GAAAC,CAAA,QAAGiB,KAAK,CAACE,IAAI,CAAC,MAAM,CAAC,CAACC,IAAI,EAAE,CAACC,IAAI,EAAE;QAC9C,MAAMC,GAAG;QAAA;QAAA,CAAAvB,aAAA,GAAAC,CAAA,QAAGiB,KAAK,CAACE,IAAI,CAAC,MAAM,CAAC,CAACI,IAAI,CAAC,MAAM,CAAC;QAC3C,MAAMC,WAAW;QAAA;QAAA,CAAAzB,aAAA,GAAAC,CAAA,QAAGiB,KAAK,CAACE,IAAI,CAAC,cAAc,CAAC,CAACC,IAAI,EAAE,CAACC,IAAI,EAAE;QAAC;QAAAtB,aAAA,GAAAC,CAAA;QAE7D;QAAI;QAAA,CAAAD,aAAA,GAAAU,CAAA,UAAAS,KAAK;QAAA;QAAA,CAAAnB,aAAA,GAAAU,CAAA,UAAIa,GAAG,GAAE;UAAA;UAAAvB,aAAA,GAAAU,CAAA;UAAAV,aAAA,GAAAC,CAAA;UAChBa,OAAO,CAACe,IAAI,CAAC;YACXV,KAAK;YACLI,GAAG,EAAEA,GAAG,CAACO,UAAU,CAAC,MAAM,CAAC;YAAA;YAAA,CAAA9B,aAAA,GAAAU,CAAA,UAAGa,GAAG;YAAA;YAAA,CAAAvB,aAAA,GAAAU,CAAA,UAAG,gCAAgCa,GAAG,EAAE;YACzEE,WAAW;YACXM,IAAI,EAAE;WACP,CAAC;QACJ,CAAC;QAAA;QAAA;UAAA/B,aAAA,GAAAU,CAAA;QAAA;MACH,CAAC,CAAC;MAAC;MAAAV,aAAA,GAAAC,CAAA;MAEH,OAAOa,OAAO;IAChB;GACD,CACF;EAEDkB,YAAA;IAAA;IAAAhC,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAC,CAAA;IACE,KAAK,CAAC,eAAe,CAAC;EACxB;EAEA,MAAMgC,MAAMA,CACVC,MAAoB;IAAA;IAAAlC,aAAA,GAAAO,CAAA;IAEpB;IACA,MAAM4B,cAAc;IAAA;IAAA,CAAAnC,aAAA,GAAAC,CAAA,QAAG,IAAI,CAACF,KAAK,CAACqC,GAAG,CAAC,MAAOC,IAAI,IAAI;MAAA;MAAArC,aAAA,GAAAO,CAAA;MACnD,MAAM+B,cAAc;MAAA;MAAA,CAAAtC,aAAA,GAAAC,CAAA,QAA+D,EAAE;MAAC;MAAAD,aAAA,GAAAC,CAAA;MAEtF,IAAI;QACF,MAAMG,SAAS;QAAA;QAAA,CAAAJ,aAAA,GAAAC,CAAA,QAAGoC,IAAI,CAACjC,SAAS,CAAC8B,MAAM,CAAC7B,KAAK,EAAE6B,MAAM,CAACK,UAAU,CAAC;QACjE,MAAM3B,IAAI;QAAA;QAAA,CAAAZ,aAAA,GAAAC,CAAA,QAAG,MAAM,IAAI,CAACuC,wBAAwB,CAACpC,SAAS,EAAE;UAC1DqC,OAAO,EAAE;YACP,YAAY,EAAE,gFAAgF;YAC9F,QAAQ,EAAE,iEAAiE;YAC3E,iBAAiB,EAAE;;SAEtB,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,EAAC,CAAC;QAAA;QAAAzC,aAAA,GAAAC,CAAA;QAEpB,IAAI,CAACW,IAAI,EAAE;UAAA;UAAAZ,aAAA,GAAAU,CAAA;UAAAV,aAAA,GAAAC,CAAA;UACTyC,OAAO,CAACC,KAAK,CAAC,wBAAwBN,IAAI,CAACnC,IAAI,EAAE,CAAC;UAAC;UAAAF,aAAA,GAAAC,CAAA;UACnD,OAAOqC,cAAc;QACvB,CAAC;QAAA;QAAA;UAAAtC,aAAA,GAAAU,CAAA;QAAA;QACD,MAAMG,CAAC;QAAA;QAAA,CAAAb,aAAA,GAAAC,CAAA,QAAGJ,OAAO,CAAC+C,IAAI,CAAChC,IAAI,CAAC;QAC5B,MAAMiC,WAAW;QAAA;QAAA,CAAA7C,aAAA,GAAAC,CAAA,QAAGoC,IAAI,CAAC1B,YAAY,CAACC,IAAI,EAAEC,CAAC,CAAC;QAE9C;QAAA;QAAAb,aAAA,GAAAC,CAAA;QACA,KAAK,MAAM6C,MAAM,IAAID,WAAW,EAAE;UAChC;UACA,MAAME,eAAe;UAAA;UAAA,CAAA/C,aAAA,GAAAC,CAAA,QAAG,MAAM,IAAI,CAAC+C,oBAAoB,CAACF,MAAM,CAACvB,GAAG,CAAC;UAAC;UAAAvB,aAAA,GAAAC,CAAA;UAEpEqC,cAAc,CAACT,IAAI,CACjB,IAAI,CAACoB,2BAA2B,CAAC;YAC/BC,UAAU,EAAE,IAAI,CAACC,iBAAiB,CAACL,MAAM,CAACvB,GAAG,CAAC;YAC9C6B,MAAM,EAAE,IAAI,CAACC,UAAU;YACvB9B,GAAG,EAAEuB,MAAM,CAACvB,GAAG;YACfJ,KAAK,EAAE2B,MAAM,CAAC3B,KAAK;YACnBM,WAAW;YAAE;YAAA,CAAAzB,aAAA,GAAAU,CAAA,WAAAqC,eAAe,EAAEtB,WAAW;YAAA;YAAA,CAAAzB,aAAA,GAAAU,CAAA,WAAIoC,MAAM,CAACrB,WAAW;YAC/D6B,YAAY,EAAE,IAAI,CAACC,4BAA4B,CAACT,MAAM,EAAEC,eAAe,CAAC;YACxES,QAAQ;YAAE;YAAA,CAAAxD,aAAA,GAAAU,CAAA,WAAAwB,MAAM,CAACK,UAAU;YAAA;YAAA,CAAAvC,aAAA,GAAAU,CAAA,WAAKoC,MAAM,CAACxC,KAAK;YAAA;YAAA,CAAAN,aAAA,GAAAU,CAAA,WAAG+C,QAAQ,CAACX,MAAM,CAACxC,KAAK,CAAC;YAAA;YAAA,CAAAN,aAAA,GAAAU,CAAA,WAAG,CAAC,EAAC;YAC1EgD,QAAQ;YAAE;YAAA,CAAA1D,aAAA,GAAAU,CAAA,WAAAwB,MAAM,CAACK,UAAU;YAAA;YAAA,CAAAvC,aAAA,GAAAU,CAAA,WAAKoC,MAAM,CAACxC,KAAK;YAAA;YAAA,CAAAN,aAAA,GAAAU,CAAA,WAAG+C,QAAQ,CAACX,MAAM,CAACxC,KAAK,CAAC;YAAA;YAAA,CAAAN,aAAA,GAAAU,CAAA,WAAG,CAAC,EAAC;YAC1EiD,OAAO;YAAE;YAAA,CAAA3D,aAAA,GAAAU,CAAA,WAAAwB,MAAM,CAACyB,OAAO;YAAA;YAAA,CAAA3D,aAAA,GAAAU,CAAA,WAAIqC,eAAe,EAAEY,OAAO;YAAA;YAAA,CAAA3D,aAAA,GAAAU,CAAA,WAAI,SAAS;YAChEkD,QAAQ;YAAE;YAAA,CAAA5D,aAAA,GAAAU,CAAA,WAAAwB,MAAM,CAAC0B,QAAQ;YAAA;YAAA,CAAA5D,aAAA,GAAAU,CAAA,WAAI,IAAI;YACjCmD,SAAS;YAAE;YAAA,CAAA7D,aAAA,GAAAU,CAAA,WAAAqC,eAAe,EAAEc,SAAS;YAAA;YAAA,CAAA7D,aAAA,GAAAU,CAAA,WAAI,EAAE;YAC3CoD,QAAQ;YAAE;YAAA,CAAA9D,aAAA,GAAAU,CAAA,WAAAqC,eAAe,EAAEe,QAAQ;YAAA;YAAA,CAAA9D,aAAA,GAAAU,CAAA,WAAI,EAAE;YACzCqD,SAAS;YAAE;YAAA,CAAA/D,aAAA,GAAAU,CAAA,WAAAqC,eAAe,EAAEgB,SAAS;YAAA;YAAA,CAAA/D,aAAA,GAAAU,CAAA,WAAI,aAAa;YACtDsD,mBAAmB;YAAE;YAAA,CAAAhE,aAAA,GAAAU,CAAA,WAAAqC,eAAe,EAAEkB,QAAQ;YAAA;YAAA,CAAAjE,aAAA,GAAAU,CAAA,WAAI,CAAC,eAAe,CAAC;YACnEwD,oBAAoB;YAAE;YAAA,CAAAlE,aAAA,GAAAU,CAAA,WAAAqC,eAAe,EAAEoB,UAAU;YAAA;YAAA,CAAAnE,aAAA,GAAAU,CAAA,WAAI,EAAE;YACvD0D,SAAS,EAAE/B,IAAI,CAACnC,IAAI;YACpBmE,OAAO,EAAE,gDAAgD;YACzDC,YAAY;YAAE;YAAA,CAAAtE,aAAA,GAAAU,CAAA,WAAAqC,eAAe,EAAEwB,SAAS;YAAA;YAAA,CAAAvE,aAAA,GAAAU,CAAA,WAAI,EAAE;WAC/C,CAAC,CACH;QACH;MACF,CAAC,CAAC,OAAOiC,KAAK,EAAE;QAAA;QAAA3C,aAAA,GAAAC,CAAA;QACdyC,OAAO,CAACC,KAAK,CAAC,mBAAmBN,IAAI,CAACnC,IAAI,GAAG,EAAEyC,KAAK,CAAC;MACvD;MAAC;MAAA3C,aAAA,GAAAC,CAAA;MAED,OAAOqC,cAAc;IACvB,CAAC,CAAC;IAEF,MAAMkC,UAAU;IAAA;IAAA,CAAAxE,aAAA,GAAAC,CAAA,QAAG,MAAMwE,OAAO,CAACC,GAAG,CAACvC,cAAc,CAAC;IAAC;IAAAnC,aAAA,GAAAC,CAAA;IACrD,OAAOuE,UAAU,CAACG,IAAI,EAAE;EAC1B;EAEA,MAAMC,kBAAkBA,CACtB1B,UAAkB;IAAA;IAAAlD,aAAA,GAAAO,CAAA;IAElB;IACA,MAAMgB,GAAG;IAAA;IAAA,CAAAvB,aAAA,GAAAC,CAAA,QAAG,IAAI,CAAC4E,YAAY,CAAC3B,UAAU,CAAC;IAAC;IAAAlD,aAAA,GAAAC,CAAA;IAC1C,IAAI,CAACsB,GAAG,EAAE;MAAA;MAAAvB,aAAA,GAAAU,CAAA;MAAAV,aAAA,GAAAC,CAAA;MAAA,OAAO,IAAI;IAAA,CAAC;IAAA;IAAA;MAAAD,aAAA,GAAAU,CAAA;IAAA;IAEtB,MAAMqC,eAAe;IAAA;IAAA,CAAA/C,aAAA,GAAAC,CAAA,QAAG,MAAM,IAAI,CAAC+C,oBAAoB,CAACzB,GAAG,CAAC;IAAC;IAAAvB,aAAA,GAAAC,CAAA;IAC7D,IAAI,CAAC8C,eAAe,EAAE;MAAA;MAAA/C,aAAA,GAAAU,CAAA;MAAAV,aAAA,GAAAC,CAAA;MAAA,OAAO,IAAI;IAAA,CAAC;IAAA;IAAA;MAAAD,aAAA,GAAAU,CAAA;IAAA;IAAAV,aAAA,GAAAC,CAAA;IAElC,OAAO,IAAI,CAACgD,2BAA2B,CAAC;MACtCC,UAAU;MACVE,MAAM,EAAE,IAAI,CAACC,UAAU;MACvB9B,GAAG;MACHJ,KAAK,EAAE4B,eAAe,CAAC5B,KAAK;MAC5BM,WAAW,EAAEsB,eAAe,CAACtB,WAAW;MACxC6B,YAAY;MAAE;MAAA,CAAAtD,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAAChB,IAAI;MAAA;MAAA,CAAA/B,aAAA,GAAAU,CAAA,WAAI,UAAU;MAChD8C,QAAQ;MAAE;MAAA,CAAAxD,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAACS,QAAQ;MAAA;MAAA,CAAAxD,aAAA,GAAAU,CAAA,WAAI,CAAC;MACvCgD,QAAQ;MAAE;MAAA,CAAA1D,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAACW,QAAQ;MAAA;MAAA,CAAA1D,aAAA,GAAAU,CAAA,WAAI,CAAC;MACvCiD,OAAO;MAAE;MAAA,CAAA3D,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAACY,OAAO;MAAA;MAAA,CAAA3D,aAAA,GAAAU,CAAA,WAAI,SAAS;MAC7CkD,QAAQ;MAAE;MAAA,CAAA5D,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAACa,QAAQ;MAAA;MAAA,CAAA5D,aAAA,GAAAU,CAAA,WAAI,IAAI;MAC1CmD,SAAS;MAAE;MAAA,CAAA7D,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAACc,SAAS;MAAA;MAAA,CAAA7D,aAAA,GAAAU,CAAA,WAAI,EAAE;MAC1CoD,QAAQ;MAAE;MAAA,CAAA9D,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAACe,QAAQ;MAAA;MAAA,CAAA9D,aAAA,GAAAU,CAAA,WAAI,EAAE;MACxCqD,SAAS;MAAE;MAAA,CAAA/D,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAACgB,SAAS;MAAA;MAAA,CAAA/D,aAAA,GAAAU,CAAA,WAAI,aAAa;MACrDsD,mBAAmB;MAAE;MAAA,CAAAhE,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAACkB,QAAQ;MAAA;MAAA,CAAAjE,aAAA,GAAAU,CAAA,WAAI,CAAC,oBAAoB,CAAC;MACvEwD,oBAAoB;MAAE;MAAA,CAAAlE,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAACoB,UAAU;MAAA;MAAA,CAAAnE,aAAA,GAAAU,CAAA,WAAI,EAAE;MACtD0D,SAAS;MAAE;MAAA,CAAApE,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAAC+B,MAAM;MAAA;MAAA,CAAA9E,aAAA,GAAAU,CAAA,WAAI,SAAS;MAC9C2D,OAAO,EAAE,gDAAgD;MACzDC,YAAY;MAAE;MAAA,CAAAtE,aAAA,GAAAU,CAAA,WAAAqC,eAAe,CAACwB,SAAS;MAAA;MAAA,CAAAvE,aAAA,GAAAU,CAAA,WAAI,EAAE;KAC9C,CAAC;EACJ;EAEQ,MAAMsC,oBAAoBA,CAACzB,GAAW;IAAA;IAAAvB,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAC,CAAA;IAgB5C,IAAI;MACF,MAAMW,IAAI;MAAA;MAAA,CAAAZ,aAAA,GAAAC,CAAA,QAAG,MAAM,IAAI,CAACuC,wBAAwB,CAACjB,GAAG,EAAE;QACpDkB,OAAO,EAAE;UACP,YAAY,EAAE,gFAAgF;UAC9F,QAAQ,EAAE,iEAAiE;UAC3E,iBAAiB,EAAE;;OAEtB,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,EAAC,CAAC;MAAA;MAAAzC,aAAA,GAAAC,CAAA;MAEpB,IAAI,CAACW,IAAI,EAAE;QAAA;QAAAZ,aAAA,GAAAU,CAAA;QAAAV,aAAA,GAAAC,CAAA;QACT,OAAO,IAAI;MACb,CAAC;MAAA;MAAA;QAAAD,aAAA,GAAAU,CAAA;MAAA;MACD,MAAMG,CAAC;MAAA;MAAA,CAAAb,aAAA,GAAAC,CAAA,QAAGJ,OAAO,CAAC+C,IAAI,CAAChC,IAAI,CAAC;MAE5B;MACA,MAAMmE,OAAO;MAAA;MAAA,CAAA/E,aAAA,GAAAC,CAAA,QAeT;QACFkB,KAAK;QAAE;QAAA,CAAAnB,aAAA,GAAAU,CAAA,WAAAG,CAAC,CAAC,IAAI,CAAC,CAACmE,KAAK,EAAE,CAAC3D,IAAI,EAAE,CAACC,IAAI,EAAE;QAAA;QAAA,CAAAtB,aAAA,GAAAU,CAAA,WAAIG,CAAC,CAAC,OAAO,CAAC,CAACQ,IAAI,EAAE,CAACC,IAAI,EAAE;QAChEG,WAAW;QACT;QAAA,CAAAzB,aAAA,GAAAU,CAAA,WAAAG,CAAC,CAAC,0BAA0B,CAAC,CAACW,IAAI,CAAC,SAAS,CAAC;QAAA;QAAA,CAAAxB,aAAA,GAAAU,CAAA,WAC7CG,CAAC,CAAC,sBAAsB,CAAC,CAACQ,IAAI,EAAE,CAACC,IAAI,EAAE;QAAA;QAAA,CAAAtB,aAAA,GAAAU,CAAA,WACvCG,CAAC,CAAC,GAAG,CAAC,CAACmE,KAAK,EAAE,CAAC3D,IAAI,EAAE,CAACC,IAAI,EAAE;QAC9BiD,SAAS,EAAE;OACZ;MAED;MACA,MAAM7C,UAAU;MAAA;MAAA,CAAA1B,aAAA,GAAAC,CAAA,QAAGW,IAAI,CAACe,KAAK,CAAC,iCAAiC,CAAC;MAAC;MAAA3B,aAAA,GAAAC,CAAA;MACjE,IAAIyB,UAAU,EAAE;QAAA;QAAA1B,aAAA,GAAAU,CAAA;QAAAV,aAAA,GAAAC,CAAA;QACd8E,OAAO,CAACvB,QAAQ,GAAGC,QAAQ,CAAC/B,UAAU,CAAC,CAAC,CAAC,CAAC;QAAC;QAAA1B,aAAA,GAAAC,CAAA;QAC3C8E,OAAO,CAACrB,QAAQ,GAAGhC,UAAU,CAAC,CAAC,CAAC;QAAA;QAAA,CAAA1B,aAAA,GAAAU,CAAA,WAAG+C,QAAQ,CAAC/B,UAAU,CAAC,CAAC,CAAC,CAAC;QAAA;QAAA,CAAA1B,aAAA,GAAAU,CAAA,WAAGqE,OAAO,CAACvB,QAAQ;MAC/E,CAAC;MAAA;MAAA;QAAAxD,aAAA,GAAAU,CAAA;MAAA;MAED;MACA,MAAMuE,eAAe;MAAA;MAAA,CAAAjF,aAAA,GAAAC,CAAA,QAAG,CACtB,aAAa,EACb,MAAM,EACN,SAAS,EACT,SAAS,EACT,QAAQ,EACR,gBAAgB,EAChB,oBAAoB,EACpB,MAAM,EACN,OAAO,CACR;MAAC;MAAAD,aAAA,GAAAC,CAAA;MACF,KAAK,MAAMiF,OAAO,IAAID,eAAe,EAAE;QAAA;QAAAjF,aAAA,GAAAC,CAAA;QACrC,IAAIW,IAAI,CAACuE,WAAW,EAAE,CAACC,QAAQ,CAACF,OAAO,CAAC,EAAE;UAAA;UAAAlF,aAAA,GAAAU,CAAA;UAAAV,aAAA,GAAAC,CAAA;UACxC8E,OAAO,CAACpB,OAAO,GAAGuB,OAAO,CAACG,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGJ,OAAO,CAACK,KAAK,CAAC,CAAC,CAAC;UAAC;UAAAvF,aAAA,GAAAC,CAAA;UACrE;QACF,CAAC;QAAA;QAAA;UAAAD,aAAA,GAAAU,CAAA;QAAA;MACH;MAEA;MAAA;MAAAV,aAAA,GAAAC,CAAA;MACAY,CAAC,CAAC,+DAA+D,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,IAAI,KAAI;QAAA;QAAAjB,aAAA,GAAAO,CAAA;QAClF,MAAMiF,IAAI;QAAA;QAAA,CAAAxF,aAAA,GAAAC,CAAA,QAAGY,CAAC,CAACI,IAAI,CAAC,CAACO,IAAI,CAAC,MAAM,CAAC;QACjC,MAAMH,IAAI;QAAA;QAAA,CAAArB,aAAA,GAAAC,CAAA,QAAGY,CAAC,CAACI,IAAI,CAAC,CAACI,IAAI,EAAE,CAACC,IAAI,EAAE;QAAC;QAAAtB,aAAA,GAAAC,CAAA;QACnC,IAAIuF,IAAI,EAAE;UAAA;UAAAxF,aAAA,GAAAU,CAAA;UAAAV,aAAA,GAAAC,CAAA;UACR8E,OAAO,CAACR,SAAS,CAAC1C,IAAI,CAAC;YACrBN,GAAG,EAAEiE,IAAI,CAAC1D,UAAU,CAAC,MAAM,CAAC;YAAA;YAAA,CAAA9B,aAAA,GAAAU,CAAA,WAAG8E,IAAI;YAAA;YAAA,CAAAxF,aAAA,GAAAU,CAAA,WAAG,IAAI+E,GAAG,CAACD,IAAI,EAAEjE,GAAG,CAAC,CAACmE,QAAQ,EAAE;YACnEvE,KAAK;YAAE;YAAA,CAAAnB,aAAA,GAAAU,CAAA,WAAAW,IAAI;YAAA;YAAA,CAAArB,aAAA,GAAAU,CAAA,WAAI,UAAU;WAC1B,CAAC;QACJ,CAAC;QAAA;QAAA;UAAAV,aAAA,GAAAU,CAAA;QAAA;MACH,CAAC,CAAC;MAEF;MAAA;MAAAV,aAAA,GAAAC,CAAA;MACA,IAAIW,IAAI,CAACuE,WAAW,EAAE,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAE;QAAA;QAAApF,aAAA,GAAAU,CAAA;QAAAV,aAAA,GAAAC,CAAA;QAC9C8E,OAAO,CAAChD,IAAI,GAAG,aAAa;MAC9B,CAAC,MAAM;QAAA;QAAA/B,aAAA,GAAAU,CAAA;QAAAV,aAAA,GAAAC,CAAA;QAAA,IAAIW,IAAI,CAACuE,WAAW,EAAE,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;UAAA;UAAApF,aAAA,GAAAU,CAAA;UAAAV,aAAA,GAAAC,CAAA;UACnD8E,OAAO,CAAChD,IAAI,GAAG,WAAW;QAC5B,CAAC,MAAM;UAAA;UAAA/B,aAAA,GAAAU,CAAA;UAAAV,aAAA,GAAAC,CAAA;UAAA,IAAIW,IAAI,CAACuE,WAAW,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAAA;YAAApF,aAAA,GAAAU,CAAA;YAAAV,aAAA,GAAAC,CAAA;YAClD8E,OAAO,CAAChD,IAAI,GAAG,SAAS;UAC1B,CAAC,MAAM;YAAA;YAAA/B,aAAA,GAAAU,CAAA;YAAAV,aAAA,GAAAC,CAAA;YAAA,IAAIW,IAAI,CAACuE,WAAW,EAAE,CAACC,QAAQ,CAAC,YAAY,CAAC,EAAE;cAAA;cAAApF,aAAA,GAAAU,CAAA;cAAAV,aAAA,GAAAC,CAAA;cACpD8E,OAAO,CAAChD,IAAI,GAAG,YAAY;YAC7B,CAAC;YAAA;YAAA;cAAA/B,aAAA,GAAAU,CAAA;YAAA;UAAD;QAAA;MAAA;MAEA;MACA,MAAMiF,gBAAgB;MAAA;MAAA,CAAA3F,aAAA,GAAAC,CAAA,QAAGY,CAAC,CAAC,6CAA6C,CAAC,CAACQ,IAAI,EAAE;MAAC;MAAArB,aAAA,GAAAC,CAAA;MACjF,IAAI0F,gBAAgB,EAAE;QAAA;QAAA3F,aAAA,GAAAU,CAAA;QAAAV,aAAA,GAAAC,CAAA;QACpB8E,OAAO,CAAClB,SAAS,GAAG8B,gBAAgB,CACjCC,KAAK,CAAC,OAAO,CAAC,CACdxD,GAAG,CAAEyD,CAAC,IAAK;UAAA;UAAA7F,aAAA,GAAAO,CAAA;UAAAP,aAAA,GAAAC,CAAA;UAAA,OAAA4F,CAAC,CAACvE,IAAI,EAAE;QAAF,CAAE,CAAC,CACpBwE,MAAM,CAAED,CAAC,IAAK;UAAA;UAAA7F,aAAA,GAAAO,CAAA;UAAAP,aAAA,GAAAC,CAAA;UAAA,OAAA4F,CAAC,CAACE,MAAM,GAAG,CAAC;QAAD,CAAC,CAAC;MAChC,CAAC;MAAA;MAAA;QAAA/F,aAAA,GAAAU,CAAA;MAAA;MAED;MACA,MAAMyD,UAAU;MAAA;MAAA,CAAAnE,aAAA,GAAAC,CAAA,QAAa,EAAE;MAAC;MAAAD,aAAA,GAAAC,CAAA;MAChCY,CAAC,CAAC,uDAAuD,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,IAAI,KAAI;QAAA;QAAAjB,aAAA,GAAAO,CAAA;QAC1E,MAAMc,IAAI;QAAA;QAAA,CAAArB,aAAA,GAAAC,CAAA,QAAGY,CAAC,CAACI,IAAI,CAAC,CAACI,IAAI,EAAE,CAACC,IAAI,EAAE;QAAC;QAAAtB,aAAA,GAAAC,CAAA;QACnC,IAAIoB,IAAI,EAAE;UAAA;UAAArB,aAAA,GAAAU,CAAA;UAAAV,aAAA,GAAAC,CAAA;UAAAkE,UAAU,CAACtC,IAAI,CAACR,IAAI,CAAC;QAAA,CAAC;QAAA;QAAA;UAAArB,aAAA,GAAAU,CAAA;QAAA;MAClC,CAAC,CAAC;MAAC;MAAAV,aAAA,GAAAC,CAAA;MACH,IAAIkE,UAAU,CAAC4B,MAAM,GAAG,CAAC,EAAE;QAAA;QAAA/F,aAAA,GAAAU,CAAA;QAAAV,aAAA,GAAAC,CAAA;QACzB8E,OAAO,CAACZ,UAAU,GAAGA,UAAU;MACjC,CAAC;MAAA;MAAA;QAAAnE,aAAA,GAAAU,CAAA;MAAA;MAAAV,aAAA,GAAAC,CAAA;MAED,OAAO8E,OAAO;IAChB,CAAC,CAAC,OAAOpC,KAAK,EAAE;MAAA;MAAA3C,aAAA,GAAAC,CAAA;MACdyC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAAC;MAAA3C,aAAA,GAAAC,CAAA;MACzD,OAAO,IAAI;IACb;EACF;EAEQsD,4BAA4BA,CAClCT,MAA0B,EAC1BiC,OAEQ;IAAA;IAAA/E,aAAA,GAAAO,CAAA;IAER,MAAMyF,OAAO;IAAA;IAAA,CAAAhG,aAAA,GAAAC,CAAA,QAAG,CACd6C,MAAM,CAAC3B,KAAK,GACZ,GAAG,GACH2B,MAAM,CAACrB,WAAW,GAClB,GAAG;IACF;IAAA,CAAAzB,aAAA,GAAAU,CAAA,WAAAqE,OAAO,EAAEtD,WAAW;IAAA;IAAA,CAAAzB,aAAA,GAAAU,CAAA,WAAI,EAAE,EAAC,EAC5ByE,WAAW,EAAE;IAAC;IAAAnF,aAAA,GAAAC,CAAA;IAEhB;IAAI;IAAA,CAAAD,aAAA,GAAAU,CAAA,WAAAsF,OAAO,CAACZ,QAAQ,CAAC,WAAW,CAAC;IAAA;IAAA,CAAApF,aAAA,GAAAU,CAAA,WAAIsF,OAAO,CAACZ,QAAQ,CAAC,WAAW,CAAC,GAAE;MAAA;MAAApF,aAAA,GAAAU,CAAA;MAAAV,aAAA,GAAAC,CAAA;MAClE,OAAO,WAAW;IACpB,CAAC,MAAM;MAAA;MAAAD,aAAA,GAAAU,CAAA;MAAAV,aAAA,GAAAC,CAAA;MAAA;MAAI;MAAA,CAAAD,aAAA,GAAAU,CAAA,WAAAsF,OAAO,CAACZ,QAAQ,CAAC,aAAa,CAAC;MAAA;MAAA,CAAApF,aAAA,GAAAU,CAAA,WAAIsF,OAAO,CAACZ,QAAQ,CAAC,eAAe,CAAC,GAAE;QAAA;QAAApF,aAAA,GAAAU,CAAA;QAAAV,aAAA,GAAAC,CAAA;QAC/E,OAAO,aAAa;MACtB,CAAC,MAAM;QAAA;QAAAD,aAAA,GAAAU,CAAA;QAAAV,aAAA,GAAAC,CAAA;QAAA;QAAI;QAAA,CAAAD,aAAA,GAAAU,CAAA,WAAAsF,OAAO,CAACZ,QAAQ,CAAC,YAAY,CAAC;QAAA;QAAA,CAAApF,aAAA,GAAAU,CAAA,WAAIsF,OAAO,CAACZ,QAAQ,CAAC,KAAK,CAAC,GAAE;UAAA;UAAApF,aAAA,GAAAU,CAAA;UAAAV,aAAA,GAAAC,CAAA;UACpE,OAAO,YAAY;QACrB,CAAC,MAAM;UAAA;UAAAD,aAAA,GAAAU,CAAA;UAAAV,aAAA,GAAAC,CAAA;UAAA;UAAI;UAAA,CAAAD,aAAA,GAAAU,CAAA,WAAAsF,OAAO,CAACZ,QAAQ,CAAC,MAAM,CAAC;UAAA;UAAA,CAAApF,aAAA,GAAAU,CAAA,WAAIsF,OAAO,CAACZ,QAAQ,CAAC,MAAM,CAAC,GAAE;YAAA;YAAApF,aAAA,GAAAU,CAAA;YAAAV,aAAA,GAAAC,CAAA;YAC/D,OAAO,MAAM;UACf,CAAC,MAAM;YAAA;YAAAD,aAAA,GAAAU,CAAA;YAAAV,aAAA,GAAAC,CAAA;YAAA,IAAI+F,OAAO,CAACZ,QAAQ,CAAC,SAAS,CAAC,EAAE;cAAA;cAAApF,aAAA,GAAAU,CAAA;cAAAV,aAAA,GAAAC,CAAA;cACtC,OAAO,SAAS;YAClB,CAAC,MAAM;cAAA;cAAAD,aAAA,GAAAU,CAAA;cAAAV,aAAA,GAAAC,CAAA;cAAA;cACL;cAAA,CAAAD,aAAA,GAAAU,CAAA,WAAAsF,OAAO,CAACZ,QAAQ,CAAC,YAAY,CAAC;cAAA;cAAA,CAAApF,aAAA,GAAAU,CAAA,WAC9BsF,OAAO,CAACZ,QAAQ,CAAC,MAAM,CAAC;cAAA;cAAA,CAAApF,aAAA,GAAAU,CAAA,WACxBsF,OAAO,CAACZ,QAAQ,CAAC,MAAM,CAAC,GACxB;gBAAA;gBAAApF,aAAA,GAAAU,CAAA;gBAAAV,aAAA,GAAAC,CAAA;gBACA,OAAO,YAAY;cACrB,CAAC,MAAM;gBAAA;gBAAAD,aAAA,GAAAU,CAAA;gBAAAV,aAAA,GAAAC,CAAA;gBAAA;gBAAI;gBAAA,CAAAD,aAAA,GAAAU,CAAA,WAAAsF,OAAO,CAACZ,QAAQ,CAAC,UAAU,CAAC;gBAAA;gBAAA,CAAApF,aAAA,GAAAU,CAAA,WAAIsF,OAAO,CAACZ,QAAQ,CAAC,UAAU,CAAC,GAAE;kBAAA;kBAAApF,aAAA,GAAAU,CAAA;kBAAAV,aAAA,GAAAC,CAAA;kBACvE,OAAO,SAAS;gBAClB,CAAC;gBAAA;gBAAA;kBAAAD,aAAA,GAAAU,CAAA;gBAAA;cAAD;YAAA;UAAA;QAAA;MAAA;IAAA;IAAC;IAAAV,aAAA,GAAAC,CAAA;IAED,OAAO,UAAU;EACnB;EAEQkD,iBAAiBA,CAAC5B,GAAW;IAAA;IAAAvB,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAC,CAAA;IACnC;IACA,OAAOgG,MAAM,CAACC,IAAI,CAAC3E,GAAG,CAAC,CACpBmE,QAAQ,CAAC,QAAQ,CAAC,CAClBS,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAC5BC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;EACrB;EAEQvB,YAAYA,CAACwB,WAAmB;IAAA;IAAArG,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAC,CAAA;IACtC;IACA;IACA,OAAO,IAAI;EACb","ignoreList":[]}