{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/unit/weeklyPlanExtractor.simple.test.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/unit/weeklyPlanExtractor.simple.test.ts"],"sourcesContent":["import { jest, describe, it, expect } from '@jest/globals';\n\n// Mock the weeklyPlanExtractor module completely to avoid Prisma dependency issues\njest.mock('../../src/services/weeklyPlanExtractor', () => ({\n  extractWeeklyPlan: jest.fn().mockResolvedValue({\n    startDate: '2024-01-15',\n    endDate: '2024-01-17',\n    days: [\n      {\n        date: '2024-01-15',\n        schedule: [{ time: '09:00', activity: 'Mathematics', note: 'Addition practice' }],\n        pullOuts: [],\n        contacts: { 'Principal': 'Ext. 100' },\n        procedures: 'Test procedures',\n        outcomes: [{ code: 'M1.1', description: 'Add numbers to 20', subject: 'Mathematics' }],\n        materials: ['Worksheets', 'Manipulatives'],\n        routines: [],\n        specialInstructions: 'Test instructions'\n      }\n    ],\n    weeklyOverview: {\n      subjects: [{ name: 'Mathematics', totalMinutes: 180, topics: ['Addition'] }],\n      unitPlans: [],\n      assessments: [],\n      specialEvents: [],\n      milestones: []\n    },\n    continuityNotes: ['Mathematics: Continue addition practice'],\n    emergencyBackupPlans: [{ subject: 'Mathematics', activities: ['Worksheets'] }]\n  }),\n}));\n\ndescribe('WeeklyPlanExtractor - Simple Tests', () => {\n  it('should be mockable and return expected structure', async () => {\n    const { extractWeeklyPlan } = await import('../../src/services/weeklyPlanExtractor');\n    \n    const result = await extractWeeklyPlan('2024-01-15', 3, { userId: 1 });\n\n    expect(result).toHaveProperty('startDate', '2024-01-15');\n    expect(result).toHaveProperty('endDate', '2024-01-17');\n    expect(result).toHaveProperty('days');\n    expect(result.days).toHaveLength(1);\n    expect(result).toHaveProperty('weeklyOverview');\n    expect(result).toHaveProperty('continuityNotes');\n    expect(result).toHaveProperty('emergencyBackupPlans');\n    \n    // Verify the mock was called\n    expect(extractWeeklyPlan).toHaveBeenCalledWith('2024-01-15', 3, { userId: 1 });\n  });\n\n  it('should handle different date ranges', async () => {\n    const { extractWeeklyPlan } = await import('../../src/services/weeklyPlanExtractor');\n    \n    const result = await extractWeeklyPlan('2024-02-01', 5, { userId: 2 });\n\n    expect(result).toBeDefined();\n    expect(result.startDate).toBe('2024-01-15'); // Mock returns fixed data\n    expect(extractWeeklyPlan).toHaveBeenCalledWith('2024-02-01', 5, { userId: 2 });\n  });\n\n  it('should handle options parameter', async () => {\n    const { extractWeeklyPlan } = await import('../../src/services/weeklyPlanExtractor');\n    \n    const options = { \n      userId: 3, \n      includePlans: true, \n      includeRoutines: false \n    };\n    \n    const result = await extractWeeklyPlan('2024-03-01', 1, options);\n\n    expect(result).toBeDefined();\n    expect(extractWeeklyPlan).toHaveBeenCalledWith('2024-03-01', 1, options);\n  });\n});"],"version":3}