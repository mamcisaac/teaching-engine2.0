{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/integration/substituteInfo.test.ts","mappings":"AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAC;AACtC,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AAEpD,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,IAAI,MAA8C,CAAC;IACnD,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IAE9B,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,GAAG,mBAAmB,EAAE,CAAC;QAC/B,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;QACnB,MAAM,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;QACzC,MAAM,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QAC/B,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACvB,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE;SAC5D,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,KAAK,IAAI,EAAE;QAClB,MAAM,MAAM,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;QACzC,MAAM,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QAC/B,MAAM,MAAM,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;QACxC,MAAM,MAAM,GAAG,MAAM,IAAI;aACtB,IAAI,CAAC,sBAAsB,CAAC;aAC5B,IAAI,CAAC,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC,CAAC;QAC5D,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChC,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACnD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/C,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/integration/substituteInfo.test.ts"],"sourcesContent":["import { app } from '../../src/index';\nimport { authRequest } from '../test-auth-helper';\nimport { getTestPrismaClient } from '../jest.setup';\n\ndescribe('substitute info API', () => {\n  let prisma: ReturnType<typeof getTestPrismaClient>;\n  const auth = authRequest(app);\n\n  beforeAll(async () => {\n    prisma = getTestPrismaClient();\n    await auth.setup();\n    await prisma.substituteInfo.deleteMany();\n    await prisma.user.deleteMany();\n    await prisma.user.create({\n      data: { id: 1, email: 't@e.com', password: 'x', name: 'T' },\n    });\n  });\n\n  afterAll(async () => {\n    await prisma.substituteInfo.deleteMany();\n    await prisma.user.deleteMany();\n    await prisma.$disconnect();\n  });\n\n  it('saves and retrieves info', async () => {\n    const create = await auth\n      .post('/api/substitute-info')\n      .send({ procedures: 'Fire drill', allergies: 'Peanuts' });\n    expect(create.status).toBe(201);\n    const get = await auth.get('/api/substitute-info');\n    expect(get.status).toBe(200);\n    expect(get.body.procedures).toBe('Fire drill');\n    expect(get.body.allergies).toBe('Peanuts');\n  });\n});\n"],"version":3}