74aa24f3d40875b8eb5b07ad3e956869
import { app } from '../../src/index';
import { authRequest } from '../test-auth-helper';
import { getTestPrismaClient } from '../jest.setup';
describe('substitute info API', () => {
    let prisma;
    const auth = authRequest(app);
    beforeAll(async () => {
        prisma = getTestPrismaClient();
        await auth.setup();
        await prisma.substituteInfo.deleteMany();
        await prisma.user.deleteMany();
        await prisma.user.create({
            data: { id: 1, email: 't@e.com', password: 'x', name: 'T' },
        });
    });
    afterAll(async () => {
        await prisma.substituteInfo.deleteMany();
        await prisma.user.deleteMany();
        await prisma.$disconnect();
    });
    it('saves and retrieves info', async () => {
        const create = await auth
            .post('/api/substitute-info')
            .send({ procedures: 'Fire drill', allergies: 'Peanuts' });
        expect(create.status).toBe(201);
        const get = await auth.get('/api/substitute-info');
        expect(get.status).toBe(200);
        expect(get.body.procedures).toBe('Fire drill');
        expect(get.body.allergies).toBe('Peanuts');
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL21pY2hhZWxtY2lzYWFjL0dpdEh1Yi90ZWFjaGluZy1lbmdpbmUyLjAvc2VydmVyL3Rlc3RzL2ludGVncmF0aW9uL3N1YnN0aXR1dGVJbmZvLnRlc3QudHMiLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3RDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFcEQsUUFBUSxDQUFDLHFCQUFxQixFQUFFLEdBQUcsRUFBRTtJQUNuQyxJQUFJLE1BQThDLENBQUM7SUFDbkQsTUFBTSxJQUFJLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRTlCLFNBQVMsQ0FBQyxLQUFLLElBQUksRUFBRTtRQUNuQixNQUFNLEdBQUcsbUJBQW1CLEVBQUUsQ0FBQztRQUMvQixNQUFNLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNuQixNQUFNLE1BQU0sQ0FBQyxjQUFjLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDekMsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQy9CLE1BQU0sTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7WUFDdkIsSUFBSSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRTtTQUM1RCxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyxLQUFLLElBQUksRUFBRTtRQUNsQixNQUFNLE1BQU0sQ0FBQyxjQUFjLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDekMsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQy9CLE1BQU0sTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzdCLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLDBCQUEwQixFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ3hDLE1BQU0sTUFBTSxHQUFHLE1BQU0sSUFBSTthQUN0QixJQUFJLENBQUMsc0JBQXNCLENBQUM7YUFDNUIsSUFBSSxDQUFDLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztRQUM1RCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoQyxNQUFNLEdBQUcsR0FBRyxNQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNuRCxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM3QixNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDL0MsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzdDLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL21pY2hhZWxtY2lzYWFjL0dpdEh1Yi90ZWFjaGluZy1lbmdpbmUyLjAvc2VydmVyL3Rlc3RzL2ludGVncmF0aW9uL3N1YnN0aXR1dGVJbmZvLnRlc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXBwIH0gZnJvbSAnLi4vLi4vc3JjL2luZGV4JztcbmltcG9ydCB7IGF1dGhSZXF1ZXN0IH0gZnJvbSAnLi4vdGVzdC1hdXRoLWhlbHBlcic7XG5pbXBvcnQgeyBnZXRUZXN0UHJpc21hQ2xpZW50IH0gZnJvbSAnLi4vamVzdC5zZXR1cCc7XG5cbmRlc2NyaWJlKCdzdWJzdGl0dXRlIGluZm8gQVBJJywgKCkgPT4ge1xuICBsZXQgcHJpc21hOiBSZXR1cm5UeXBlPHR5cGVvZiBnZXRUZXN0UHJpc21hQ2xpZW50PjtcbiAgY29uc3QgYXV0aCA9IGF1dGhSZXF1ZXN0KGFwcCk7XG5cbiAgYmVmb3JlQWxsKGFzeW5jICgpID0+IHtcbiAgICBwcmlzbWEgPSBnZXRUZXN0UHJpc21hQ2xpZW50KCk7XG4gICAgYXdhaXQgYXV0aC5zZXR1cCgpO1xuICAgIGF3YWl0IHByaXNtYS5zdWJzdGl0dXRlSW5mby5kZWxldGVNYW55KCk7XG4gICAgYXdhaXQgcHJpc21hLnVzZXIuZGVsZXRlTWFueSgpO1xuICAgIGF3YWl0IHByaXNtYS51c2VyLmNyZWF0ZSh7XG4gICAgICBkYXRhOiB7IGlkOiAxLCBlbWFpbDogJ3RAZS5jb20nLCBwYXNzd29yZDogJ3gnLCBuYW1lOiAnVCcgfSxcbiAgICB9KTtcbiAgfSk7XG5cbiAgYWZ0ZXJBbGwoYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IHByaXNtYS5zdWJzdGl0dXRlSW5mby5kZWxldGVNYW55KCk7XG4gICAgYXdhaXQgcHJpc21hLnVzZXIuZGVsZXRlTWFueSgpO1xuICAgIGF3YWl0IHByaXNtYS4kZGlzY29ubmVjdCgpO1xuICB9KTtcblxuICBpdCgnc2F2ZXMgYW5kIHJldHJpZXZlcyBpbmZvJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGNyZWF0ZSA9IGF3YWl0IGF1dGhcbiAgICAgIC5wb3N0KCcvYXBpL3N1YnN0aXR1dGUtaW5mbycpXG4gICAgICAuc2VuZCh7IHByb2NlZHVyZXM6ICdGaXJlIGRyaWxsJywgYWxsZXJnaWVzOiAnUGVhbnV0cycgfSk7XG4gICAgZXhwZWN0KGNyZWF0ZS5zdGF0dXMpLnRvQmUoMjAxKTtcbiAgICBjb25zdCBnZXQgPSBhd2FpdCBhdXRoLmdldCgnL2FwaS9zdWJzdGl0dXRlLWluZm8nKTtcbiAgICBleHBlY3QoZ2V0LnN0YXR1cykudG9CZSgyMDApO1xuICAgIGV4cGVjdChnZXQuYm9keS5wcm9jZWR1cmVzKS50b0JlKCdGaXJlIGRyaWxsJyk7XG4gICAgZXhwZWN0KGdldC5ib2R5LmFsbGVyZ2llcykudG9CZSgnUGVhbnV0cycpO1xuICB9KTtcbn0pO1xuIl0sInZlcnNpb24iOjN9