{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/contactExtractor.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/contactExtractor.ts"],"sourcesContent":["export interface ContactInfo {\n  id: string;\n  name: string;\n  role: string;\n  phone: string;\n  extension?: string;\n  email?: string;\n  location?: string;\n  availability: string;\n  priority: 'emergency' | 'urgent' | 'normal' | 'info';\n  category: 'administration' | 'support' | 'medical' | 'safety' | 'technical' | 'transportation';\n}\n\nexport interface ExtractedContacts {\n  emergency: ContactInfo[];\n  administration: ContactInfo[];\n  support: ContactInfo[];\n  technical: ContactInfo[];\n  medical: ContactInfo[];\n  transportation: ContactInfo[];\n  custom: ContactInfo[];\n}\n\n/**\n * Extract and organize all relevant contact information for substitute teachers\n */\nexport async function extractSchoolContacts(_userId: number = 1): Promise<ExtractedContacts> {\n  // Get school information if available\n  const schoolInfo = await getSchoolInformation();\n\n  // Get custom contacts from class routines (emergency contacts)\n  // TODO: Implement custom contact storage in ClassRoutine or User model\n  const customContacts: ContactInfo[] = [];\n\n  // Combine default school contacts with custom ones\n  const allContacts = [...getDefaultSchoolContacts(), ...schoolInfo.contacts, ...customContacts];\n\n  // Organize contacts by category\n  const organizedContacts: ExtractedContacts = {\n    emergency: allContacts.filter((c) => c.priority === 'emergency'),\n    administration: allContacts.filter((c) => c.category === 'administration'),\n    support: allContacts.filter((c) => c.category === 'support'),\n    technical: allContacts.filter((c) => c.category === 'technical'),\n    medical: allContacts.filter((c) => c.category === 'medical'),\n    transportation: allContacts.filter((c) => c.category === 'transportation'),\n    custom: customContacts,\n  };\n\n  return organizedContacts;\n}\n\n/**\n * Generate formatted contact list for substitute plans\n */\nexport function formatContactsForSubPlan(contacts: ExtractedContacts): string {\n  const sections = [];\n\n  // Emergency contacts first\n  if (contacts.emergency.length > 0) {\n    sections.push('🚨 EMERGENCY CONTACTS:');\n    contacts.emergency.forEach((contact) => {\n      sections.push(formatContact(contact));\n    });\n    sections.push('');\n  }\n\n  // Administration\n  if (contacts.administration.length > 0) {\n    sections.push('👥 ADMINISTRATION:');\n    contacts.administration.forEach((contact) => {\n      sections.push(formatContact(contact));\n    });\n    sections.push('');\n  }\n\n  // Support staff\n  if (contacts.support.length > 0) {\n    sections.push('🤝 SUPPORT STAFF:');\n    contacts.support.forEach((contact) => {\n      sections.push(formatContact(contact));\n    });\n    sections.push('');\n  }\n\n  // Technical support\n  if (contacts.technical.length > 0) {\n    sections.push('💻 TECHNICAL SUPPORT:');\n    contacts.technical.forEach((contact) => {\n      sections.push(formatContact(contact));\n    });\n    sections.push('');\n  }\n\n  // Medical\n  if (contacts.medical.length > 0) {\n    sections.push('🏥 MEDICAL:');\n    contacts.medical.forEach((contact) => {\n      sections.push(formatContact(contact));\n    });\n    sections.push('');\n  }\n\n  // Transportation\n  if (contacts.transportation.length > 0) {\n    sections.push('🚌 TRANSPORTATION:');\n    contacts.transportation.forEach((contact) => {\n      sections.push(formatContact(contact));\n    });\n    sections.push('');\n  }\n\n  // Custom contacts\n  if (contacts.custom.length > 0) {\n    sections.push('📞 ADDITIONAL CONTACTS:');\n    contacts.custom.forEach((contact) => {\n      sections.push(formatContact(contact));\n    });\n  }\n\n  return sections.join('\\n');\n}\n\n/**\n * Get emergency contacts only (for quick reference)\n */\nexport function getEmergencyContactsList(contacts: ExtractedContacts): string {\n  const emergencyContacts = [\n    ...contacts.emergency,\n    ...contacts.administration.filter((c) => c.priority === 'urgent'),\n    ...contacts.medical,\n  ];\n\n  if (emergencyContacts.length === 0) {\n    return 'No emergency contacts configured. Contact main office.';\n  }\n\n  return emergencyContacts\n    .map(\n      (contact) =>\n        `${contact.role}: ${contact.phone}${contact.extension ? ` ext. ${contact.extension}` : ''}`,\n    )\n    .join('\\n');\n}\n\n/**\n * Update teacher's custom contacts\n */\nexport async function updateTeacherContacts(\n  _userId: number,\n  _contacts: Array<{ name: string; role: string; phone: string; notes?: string }>,\n): Promise<void> {\n  // TODO: Implement custom contact storage\n  // Options:\n  // 1. Store in User model as JSON field\n  // 2. Store in ClassRoutine with category 'EMERGENCY_CONTACT'\n  // 3. Create a new ContactInfo model\n\n  console.warn('updateTeacherContacts is disabled - teacherPreferences model archived');\n}\n\n/**\n * Get school information from various sources\n */\nasync function getSchoolInformation(): Promise<{ contacts: ContactInfo[] }> {\n  // In a real implementation, this might:\n  // - Query a school directory database\n  // - Pull from a district API\n  // - Read from configuration files\n  // - Import from school management system\n\n  // For now, return a basic structure that can be extended\n  return {\n    contacts: [\n      // These would be dynamically loaded in a real system\n    ],\n  };\n}\n\n/**\n * Extract custom contacts from teacher preferences\n */\nfunction _extractCustomContacts(subPlanContacts: unknown): ContactInfo[] {\n  if (!subPlanContacts || typeof subPlanContacts !== 'object') {\n    return [];\n  }\n\n  const contacts: ContactInfo[] = [];\n\n  Object.entries(subPlanContacts as Record<string, string>).forEach(([role, info]) => {\n    const contact = parseContactString(role, info);\n    if (contact) {\n      contacts.push(contact);\n    }\n  });\n\n  return contacts;\n}\n\n/**\n * Parse contact string to extract information\n */\nfunction parseContactString(role: string, info: string): ContactInfo | null {\n  if (!info || typeof info !== 'string') return null;\n\n  // Try to extract phone number\n  const phoneMatch = info.match(/(\\d{3}[-.\\s]?\\d{3}[-.\\s]?\\d{4})/);\n  const extMatch = info.match(/ext\\.?\\s*(\\d+)/i);\n\n  if (!phoneMatch) return null;\n\n  const phone = phoneMatch[1];\n  const extension = extMatch ? extMatch[1] : undefined;\n\n  // Extract name (text before the phone number)\n  const namePart = info\n    .substring(0, phoneMatch.index || 0)\n    .replace(/[-\\s]+$/, '')\n    .trim();\n  const name = namePart || role;\n\n  return {\n    id: `custom-${role.toLowerCase().replace(/\\s+/g, '-')}`,\n    name,\n    role,\n    phone,\n    extension,\n    availability: 'School hours',\n    priority: determinePriority(role),\n    category: determineCategory(role),\n  };\n}\n\n/**\n * Determine contact priority based on role\n */\nfunction determinePriority(role: string): 'emergency' | 'urgent' | 'normal' | 'info' {\n  const lowerRole = role.toLowerCase();\n\n  if (lowerRole.includes('emergency') || lowerRole.includes('911')) {\n    return 'emergency';\n  }\n  if (\n    lowerRole.includes('principal') ||\n    lowerRole.includes('nurse') ||\n    lowerRole.includes('security')\n  ) {\n    return 'urgent';\n  }\n  if (\n    lowerRole.includes('office') ||\n    lowerRole.includes('secretary') ||\n    lowerRole.includes('admin')\n  ) {\n    return 'urgent';\n  }\n\n  return 'normal';\n}\n\n/**\n * Determine contact category based on role\n */\nfunction determineCategory(role: string): ContactInfo['category'] {\n  const lowerRole = role.toLowerCase();\n\n  if (\n    lowerRole.includes('principal') ||\n    lowerRole.includes('vice') ||\n    lowerRole.includes('admin')\n  ) {\n    return 'administration';\n  }\n  if (\n    lowerRole.includes('nurse') ||\n    lowerRole.includes('health') ||\n    lowerRole.includes('medical')\n  ) {\n    return 'medical';\n  }\n  if (lowerRole.includes('security') || lowerRole.includes('safety')) {\n    return 'safety';\n  }\n  if (lowerRole.includes('it') || lowerRole.includes('tech') || lowerRole.includes('computer')) {\n    return 'technical';\n  }\n  if (lowerRole.includes('bus') || lowerRole.includes('transport')) {\n    return 'transportation';\n  }\n  if (\n    lowerRole.includes('custodian') ||\n    lowerRole.includes('maintenance') ||\n    lowerRole.includes('secretary')\n  ) {\n    return 'support';\n  }\n\n  return 'support';\n}\n\n/**\n * Format a single contact for display\n */\nfunction formatContact(contact: ContactInfo): string {\n  let formatted = `${contact.role}: ${contact.name}`;\n\n  if (contact.phone) {\n    formatted += ` - ${contact.phone}`;\n    if (contact.extension) {\n      formatted += ` ext. ${contact.extension}`;\n    }\n  }\n\n  if (contact.location) {\n    formatted += ` (${contact.location})`;\n  }\n\n  if (contact.availability !== 'School hours') {\n    formatted += ` [${contact.availability}]`;\n  }\n\n  return formatted;\n}\n\n/**\n * Get default school contacts that every school should have\n */\nfunction getDefaultSchoolContacts(): ContactInfo[] {\n  return [\n    {\n      id: 'office-main',\n      name: 'School Office',\n      role: 'Main Office',\n      phone: 'Contact office for number',\n      extension: '101',\n      availability: 'School hours',\n      priority: 'urgent',\n      category: 'administration',\n    },\n    {\n      id: 'principal',\n      name: 'Principal',\n      role: 'Principal',\n      phone: 'Contact office for number',\n      extension: '100',\n      availability: 'School hours',\n      priority: 'urgent',\n      category: 'administration',\n    },\n    {\n      id: 'vice-principal',\n      name: 'Vice Principal',\n      role: 'Vice Principal',\n      phone: 'Contact office for number',\n      extension: '102',\n      availability: 'School hours',\n      priority: 'urgent',\n      category: 'administration',\n    },\n    {\n      id: 'nurse',\n      name: 'School Nurse',\n      role: 'Nurse',\n      phone: 'Contact office for number',\n      extension: '105',\n      availability: 'School hours',\n      priority: 'urgent',\n      category: 'medical',\n    },\n    {\n      id: 'emergency',\n      name: 'Emergency Services',\n      role: 'Emergency (Fire/Police/Ambulance)',\n      phone: '911',\n      availability: '24/7',\n      priority: 'emergency',\n      category: 'safety',\n    },\n    {\n      id: 'custodian',\n      name: 'Custodial Staff',\n      role: 'Custodian',\n      phone: 'Contact office for number',\n      extension: '110',\n      availability: 'School hours',\n      priority: 'normal',\n      category: 'support',\n    },\n    {\n      id: 'it-support',\n      name: 'IT Support',\n      role: 'Technology Support',\n      phone: 'Contact office for number',\n      extension: '150',\n      availability: 'School hours',\n      priority: 'normal',\n      category: 'technical',\n    },\n  ];\n}\n\n/**\n * Generate contact card for emergency situations\n */\nexport function generateEmergencyContactCard(contacts: ExtractedContacts): string {\n  const emergencyList = getEmergencyContactsList(contacts);\n\n  return `\n┌─────────────────────────────────────┐\n│         EMERGENCY CONTACTS          │\n├─────────────────────────────────────┤\n│ ${emergencyList.split('\\n').join('\\n│ ')}\n│                                     │\n│ FOR IMMEDIATE EMERGENCIES CALL 911  │\n└─────────────────────────────────────┘\n\nKeep this card visible at all times during your substitute assignment.\n  `.trim();\n}\n"],"version":3}