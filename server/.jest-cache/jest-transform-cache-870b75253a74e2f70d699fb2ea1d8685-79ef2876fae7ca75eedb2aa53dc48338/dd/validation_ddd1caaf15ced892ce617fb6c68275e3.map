{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/validation.ts","mappings":"AAAA,OAAO,EAAE,CAAC,EAAa,MAAM,KAAK,CAAC;AAEnC,sEAAsE;AAEtE,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,CAAC,MAAM,CAAC;IACpC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACvB,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC7B,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC9B,CAAC,CAAC;AAEH,6CAA6C;AAC7C,MAAM,eAAe,GAAG,CAAC,SAAiB,EAAE,QAAQ,GAAG,KAAK,EAAE,OAA0B,EAAE,EAAE;IAC1F,MAAM,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;IAC7D,MAAM,MAAM,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;IACvE,OAAO;QACL,CAAC,SAAS,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE;QAClD,CAAC,GAAG,SAAS,IAAI,CAAC,EAAE,CAAC;aAClB,MAAM,EAAE;aACR,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,QAAQ,CAAC;aAC7B,QAAQ,EAAE;QACb,CAAC,GAAG,SAAS,IAAI,CAAC,EAAE,CAAC;aAClB,MAAM,EAAE;aACR,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,QAAQ,CAAC;aAC7B,QAAQ,EAAE;KACd,CAAC;AACJ,CAAC,CAAC;AAEF,mDAAmD;AACnD,MAAM,mBAAmB,GAAG,CAAC,CAAC,MAAM,CAAC;IACnC,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC;IACjC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE;IACrB,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;IAC5C,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;IAC3C,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;IACzC,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IACrC,GAAG,eAAe,CAAC,aAAa,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;IACxD,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC7C,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,qBAAqB,GAAG,mBAAmB,CAAC,MAAM,CAC7D,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EACjG;IACE,OAAO,EAAE,+CAA+C;IACxD,IAAI,EAAE,CAAC,SAAS,CAAC;CAClB,CACF,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,mBAAmB;KACrD,IAAI,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;KACzB,OAAO,EAAE;KACT,MAAM,CACL,CAAC,IAAI,EAAE,EAAE,CACP,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EACzF;IACE,OAAO,EAAE,+CAA+C;IACxD,IAAI,EAAE,CAAC,SAAS,CAAC;CAClB,CACF,CAAC;AAEJ,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC3C,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC;IACjC,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE;IACvB,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC,QAAQ,EAAE;IACzD,YAAY,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IACzC,GAAG,eAAe,CAAC,aAAa,CAAC;IACjC,GAAG,eAAe,CAAC,YAAY,CAAC;IAChC,GAAG,eAAe,CAAC,eAAe,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IACxD,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;IAC7C,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACpC,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC7C,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,oBAAoB,GAAG,oBAAoB,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;AAE/F,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC5C,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE;IACvB,WAAW,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;CACjC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC9C,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;CAC9C,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC3C,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;IAC3C,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;IACzC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;CAClD,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC/C,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC9B,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,EAAE,uCAAuC;IACxE,aAAa,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IACrC,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IAC9B,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE;CAClD,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC7C,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC;IACjC,GAAG,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC;IACnC,GAAG,eAAe,CAAC,UAAU,CAAC;IAC9B,GAAG,eAAe,CAAC,eAAe,CAAC;CACpC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,sBAAsB,GAAG,sBAAsB,CAAC,OAAO,EAAE,CAAC;AAEvE,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC5C,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE;IACrB,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAClC,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;IACxC,UAAU,EAAE,CAAC;SACV,MAAM,EAAE;SACR,QAAQ,EAAE;SACV,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,EAAE;QAC9C,OAAO,EAAE,4CAA4C;KACtD,CAAC;IACJ,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;CAC9C,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC5C,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE;IACnD,UAAU,EAAE,CAAC;SACV,MAAM,EAAE;SACR,QAAQ,EAAE;SACV,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE,EAAE;QAC9C,OAAO,EAAE,4CAA4C;KACtD,CAAC;SACD,QAAQ,EAAE;IACb,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;IACxD,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;CAC3D,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,+BAA+B,GAAG,CAAC,CAAC,MAAM,CAAC;IACtD,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC/C,GAAG,eAAe,CAAC,aAAa,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IACvD,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC7C,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,+BAA+B,GAAG,CAAC,CAAC,MAAM,CAAC;IACtD,GAAG,eAAe,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAChD,GAAG,eAAe,CAAC,aAAa,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IACvD,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;CAC7C,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,CAAC,MAAM,CAAC;IACnD,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC3B,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IACvC,SAAS,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IACjC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;IACrC,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;CAC3D,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,CAAC,MAAM,CAAC;IACnD,SAAS,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE;IACjC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;IACrC,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;CAC3D,CAAC,CAAC;AAEH,MAAM,sBAAsB,GAAG,CAAC,CAAC,MAAM,CAAC;IACtC,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC/C,GAAG,eAAe,CAAC,aAAa,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;IACvD,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC9B,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC5C,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE;CACjD,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,wBAAwB,GAAG,sBAAsB,CAAC,MAAM,CACnE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAC5D;IACE,OAAO,EAAE,+CAA+C;IACxD,IAAI,EAAE,CAAC,SAAS,CAAC;CAClB,CACF,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,sBAAsB;KAC3D,OAAO,EAAE;KACT,MAAM,CACL,CAAC,IAAI,EAAE,EAAE,CACP,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EACzF;IACE,OAAO,EAAE,+CAA+C;IACxD,IAAI,EAAE,CAAC,SAAS,CAAC;CAClB,CACF,CAAC;AAEJ,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,CAAC,MAAM,CAAC;IAChD,GAAG,eAAe,CAAC,OAAO,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC/C,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IACrC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B,gBAAgB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAChD,iBAAiB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,EAAE;CACxD,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,yBAAyB,GAAG,yBAAyB,CAAC,OAAO,EAAE,CAAC;AAE7E,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC1C,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;CACjC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC9C,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;IAChC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,gDAAgD;IAChD,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;CACvE,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC9C,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;IAC3C,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,gDAAgD;IAChD,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACjC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE;CAChE,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,6BAA6B,GAAG,CAAC,CAAC,MAAM,CAAC;IACpD,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;IACtC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE;IACrC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE;IACpC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;IACzC,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAChC,gDAAgD;IAChD,UAAU,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAClC,CAAC,CAAC;AAEH,MAAM,UAAU,QAAQ,CAAC,MAAiB;IACxC,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;QACzD,6CAA6C;QAC7C,gDAAgD;QAChD,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAE1C,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YACpB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAClE,CAAC;QAED,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACvB,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;AACJ,CAAC","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/validation.ts"],"sourcesContent":["import { z, ZodSchema } from 'zod';\nimport { Request, Response, NextFunction } from 'express';\n// import { ALLOWED_TEMPLATES } from './services/newsletterGenerator';\n\nexport const subjectSchema = z.object({\n  name: z.string().min(1),\n  nameEn: z.string().optional(),\n  nameFr: z.string().optional(),\n});\n\n// Helper function to create bilingual fields\nconst bilingualString = (fieldName: string, required = false, options?: { max?: number }) => {\n  const baseSchema = required ? z.string().min(1) : z.string();\n  const schema = options?.max ? baseSchema.max(options.max) : baseSchema;\n  return {\n    [fieldName]: required ? schema : schema.optional(),\n    [`${fieldName}En`]: z\n      .string()\n      .max(options?.max || Infinity)\n      .optional(),\n    [`${fieldName}Fr`]: z\n      .string()\n      .max(options?.max || Infinity)\n      .optional(),\n  };\n};\n\n// Create base schema without refinement for update\nconst baseMilestoneSchema = z.object({\n  ...bilingualString('title', true),\n  subjectId: z.number(),\n  targetDate: z.string().datetime().optional(),\n  startDate: z.string().datetime().optional(),\n  endDate: z.string().datetime().optional(),\n  estHours: z.number().int().optional(),\n  ...bilingualString('description', false, { max: 10000 }),\n  expectations: z.array(z.string()).optional(),\n});\n\nexport const milestoneCreateSchema = baseMilestoneSchema.refine(\n  (data) => !(data.startDate && data.endDate) || new Date(data.startDate) <= new Date(data.endDate),\n  {\n    message: 'End date must be after or equal to start date',\n    path: ['endDate'],\n  },\n);\n\nexport const milestoneUpdateSchema = baseMilestoneSchema\n  .omit({ subjectId: true })\n  .partial()\n  .refine(\n    (data) =>\n      !(data.startDate && data.endDate) || new Date(data.startDate) <= new Date(data.endDate),\n    {\n      message: 'End date must be after or equal to start date',\n      path: ['endDate'],\n    },\n  );\n\nexport const activityCreateSchema = z.object({\n  ...bilingualString('title', true),\n  milestoneId: z.number(),\n  activityType: z.enum(['LESSON', 'ASSESSMENT']).optional(),\n  durationMins: z.number().int().optional(),\n  ...bilingualString('privateNote'),\n  ...bilingualString('publicNote'),\n  ...bilingualString('materialsText', false, { max: 500 }),\n  completedAt: z.string().datetime().optional(),\n  tags: z.array(z.string()).optional(),\n  expectations: z.array(z.string()).optional(),\n});\n\nexport const activityUpdateSchema = activityCreateSchema.omit({ milestoneId: true }).partial();\n\nexport const activityReorderSchema = z.object({\n  milestoneId: z.number(),\n  activityIds: z.array(z.number()),\n});\n\nexport const activityMaterialsSchema = z.object({\n  materialsText: z.string().max(500).optional(),\n});\n\nexport const timetableEntrySchema = z.object({\n  day: z.number().int().min(0).max(6),\n  startMin: z.number().int().min(0).max(1440),\n  endMin: z.number().int().min(1).max(1440),\n  subjectId: z.number().int().optional().nullable(),\n});\n\nexport const newsletterGenerateSchema = z.object({\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  template: z.string().optional(), // Legacy newsletter templates disabled\n  includePhotos: z.boolean().optional(),\n  useLLM: z.boolean().optional(),\n  language: z.enum(['en', 'fr', 'both']).optional(),\n});\n\nexport const newsletterCreateSchema = z.object({\n  ...bilingualString('title', true),\n  ...bilingualString('content', true),\n  ...bilingualString('rawDraft'),\n  ...bilingualString('polishedDraft'),\n});\n\nexport const newsletterUpdateSchema = newsletterCreateSchema.partial();\n\nexport const smartGoalCreateSchema = z.object({\n  outcomeId: z.string(),\n  milestoneId: z.number().optional(),\n  description: z.string().min(1).max(1000),\n  targetDate: z\n    .string()\n    .datetime()\n    .refine((date) => new Date(date) >= new Date(), {\n      message: 'Target date must be today or in the future',\n    }),\n  targetValue: z.number().int().min(0).max(100),\n});\n\nexport const smartGoalUpdateSchema = z.object({\n  description: z.string().min(1).max(1000).optional(),\n  targetDate: z\n    .string()\n    .datetime()\n    .refine((date) => new Date(date) >= new Date(), {\n      message: 'Target date must be today or in the future',\n    })\n    .optional(),\n  targetValue: z.number().int().min(0).max(100).optional(),\n  observedValue: z.number().int().min(0).max(100).optional(),\n});\n\nexport const oralRoutineTemplateCreateSchema = z.object({\n  ...bilingualString('title', true, { max: 200 }),\n  ...bilingualString('description', false, { max: 1000 }),\n  expectations: z.array(z.string()).optional(),\n});\n\nexport const oralRoutineTemplateUpdateSchema = z.object({\n  ...bilingualString('title', false, { max: 200 }),\n  ...bilingualString('description', false, { max: 1000 }),\n  expectations: z.array(z.string()).optional(),\n});\n\nexport const dailyOralRoutineCreateSchema = z.object({\n  date: z.string().datetime(),\n  templateId: z.number().int().positive(),\n  completed: z.boolean().optional(),\n  notes: z.string().max(500).optional(),\n  participation: z.number().int().min(0).max(100).optional(),\n});\n\nexport const dailyOralRoutineUpdateSchema = z.object({\n  completed: z.boolean().optional(),\n  notes: z.string().max(500).optional(),\n  participation: z.number().int().min(0).max(100).optional(),\n});\n\nconst baseThematicUnitSchema = z.object({\n  ...bilingualString('title', true, { max: 200 }),\n  ...bilingualString('description', false, { max: 2000 }),\n  startDate: z.string().datetime(),\n  endDate: z.string().datetime(),\n  expectations: z.array(z.string()).optional(),\n  activities: z.array(z.number().int()).optional(),\n});\n\nexport const thematicUnitCreateSchema = baseThematicUnitSchema.refine(\n  (data) => new Date(data.startDate) <= new Date(data.endDate),\n  {\n    message: 'End date must be after or equal to start date',\n    path: ['endDate'],\n  },\n);\n\nexport const thematicUnitUpdateSchema = baseThematicUnitSchema\n  .partial()\n  .refine(\n    (data) =>\n      !(data.startDate && data.endDate) || new Date(data.startDate) <= new Date(data.endDate),\n    {\n      message: 'End date must be after or equal to start date',\n      path: ['endDate'],\n    },\n  );\n\nexport const parentMessageCreateSchema = z.object({\n  ...bilingualString('title', true, { max: 200 }),\n  timeframe: z.string().min(1).max(100),\n  contentFr: z.string().min(1),\n  contentEn: z.string().min(1),\n  linkedOutcomeIds: z.array(z.string()).optional(),\n  linkedActivityIds: z.array(z.number().int()).optional(),\n});\n\nexport const parentMessageUpdateSchema = parentMessageCreateSchema.partial();\n\nexport const studentCreateSchema = z.object({\n  name: z.string().min(1).max(200),\n});\n\nexport const studentGoalCreateSchema = z.object({\n  text: z.string().min(1).max(500),\n  outcomeId: z.string().optional(),\n  // themeId removed - ThematicUnit model archived\n  unitPlanId: z.string().optional(),\n  status: z.enum(['active', 'completed', 'abandoned']).default('active'),\n});\n\nexport const studentGoalUpdateSchema = z.object({\n  text: z.string().min(1).max(500).optional(),\n  outcomeId: z.string().optional(),\n  // themeId removed - ThematicUnit model archived\n  unitPlanId: z.string().optional(),\n  status: z.enum(['active', 'completed', 'abandoned']).optional(),\n});\n\nexport const studentReflectionCreateSchema = z.object({\n  date: z.string().datetime().optional(),\n  text: z.string().max(1000).optional(),\n  emoji: z.string().max(10).optional(),\n  voicePath: z.string().max(500).optional(),\n  outcomeId: z.string().optional(),\n  // themeId removed - ThematicUnit model archived\n  unitPlanId: z.string().optional(),\n});\n\nexport function validate(schema: ZodSchema) {\n  return (req: Request, res: Response, next: NextFunction) => {\n    // For now, always validate req.body directly\n    // The schemas should not wrap body in an object\n    const result = schema.safeParse(req.body);\n\n    if (!result.success) {\n      return res.status(400).json({ errors: result.error.flatten() });\n    }\n\n    req.body = result.data;\n    next();\n  };\n}\n"],"version":3}