{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/curriculum-discovery.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/curriculum-discovery.ts"],"sourcesContent":["import { Router } from 'express';\nimport { z } from 'zod';\nimport { authMiddleware } from '../middleware/auth';\nimport { curriculumDiscoveryService } from '../services/curriculumDiscoveryService';\n\nconst router = Router();\n\n// Validation schemas\nconst DiscoveryFilterSchema = z.object({\n  province: z.string().optional(),\n  grade: z.coerce.number().int().min(0).max(12).optional(),\n  subject: z.string().optional(),\n  language: z.enum(['en', 'fr', 'both']).optional(),\n  documentType: z.enum(['curriculum', 'guideline', 'assessment', 'resource']).optional(),\n  downloadStatus: z.enum(['pending', 'downloaded', 'processed', 'failed']).optional(),\n});\n\nconst ProcessDocumentSchema = z.object({\n  documentId: z.string().min(1),\n  userId: z.coerce.number().int().positive().optional(),\n});\n\n/**\n * Start discovery process for curriculum documents\n * POST /api/curriculum-discovery/discover\n */\nrouter.post('/discover', authMiddleware, async (req, res) => {\n  try {\n    const userId = Number(req.user!.id);\n\n    res.json({\n      success: true,\n      message: 'Discovery process started',\n      data: {\n        status: 'initiated',\n        userId,\n        timestamp: new Date().toISOString(),\n      },\n    });\n\n    // Start discovery process in background\n    curriculumDiscoveryService\n      .discoverDocuments()\n      .then((documents) => {\n        console.log(`Discovery completed: ${documents.length} documents found`);\n      })\n      .catch((error) => {\n        console.error('Discovery process failed:', error);\n      });\n  } catch (error) {\n    console.error('Discovery initiation error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to start discovery process',\n    });\n  }\n});\n\n/**\n * Get discovered curriculum documents\n * GET /api/curriculum-discovery/documents\n */\nrouter.get('/documents', authMiddleware, async (req, res) => {\n  try {\n    const filterResult = DiscoveryFilterSchema.safeParse(req.query);\n\n    if (!filterResult.success) {\n      return res.status(400).json({\n        success: false,\n        error: 'Invalid filter parameters',\n        details: filterResult.error.errors,\n      });\n    }\n\n    const filter = filterResult.data;\n    const documents = curriculumDiscoveryService.getDocumentsByFilter(filter);\n\n    res.json({\n      success: true,\n      data: {\n        documents,\n        total: documents.length,\n        filter,\n      },\n    });\n  } catch (error) {\n    console.error('Get documents error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve discovered documents',\n    });\n  }\n});\n\n/**\n * Get discovery statistics\n * GET /api/curriculum-discovery/stats\n */\nrouter.get('/stats', authMiddleware, async (req, res) => {\n  try {\n    const stats = curriculumDiscoveryService.getDiscoveryStats();\n\n    res.json({\n      success: true,\n      data: stats,\n    });\n  } catch (error) {\n    console.error('Get stats error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve discovery statistics',\n    });\n  }\n});\n\n/**\n * Download a specific curriculum document\n * POST /api/curriculum-discovery/download\n */\nrouter.post('/download', authMiddleware, async (req, res) => {\n  try {\n    const { documentId } = z\n      .object({\n        documentId: z.string().min(1),\n      })\n      .parse(req.body);\n\n    const result = await curriculumDiscoveryService.downloadDocument(documentId);\n\n    if (result.success) {\n      res.json({\n        success: true,\n        data: {\n          documentId,\n          filePath: result.filePath,\n          message: 'Document downloaded successfully',\n        },\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        error: result.error || 'Download failed',\n        data: { documentId },\n      });\n    }\n  } catch (error) {\n    console.error('Download document error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to download document',\n    });\n  }\n});\n\n/**\n * Process a downloaded document into curriculum import\n * POST /api/curriculum-discovery/process\n */\nrouter.post('/process', authMiddleware, async (req, res) => {\n  try {\n    const parseResult = ProcessDocumentSchema.parse(req.body);\n    const userId = parseResult.userId || Number(req.user!.id);\n    const { documentId } = parseResult;\n\n    const result = await curriculumDiscoveryService.processDocument(documentId, userId);\n\n    if (result.success) {\n      res.json({\n        success: true,\n        data: {\n          documentId,\n          importId: result.importId,\n          message: 'Document processed successfully',\n        },\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        error: result.error || 'Processing failed',\n        data: { documentId },\n      });\n    }\n  } catch (error) {\n    console.error('Process document error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to process document',\n    });\n  }\n});\n\n/**\n * Download and process a document in one step\n * POST /api/curriculum-discovery/download-and-process\n */\nrouter.post('/download-and-process', authMiddleware, async (req, res) => {\n  try {\n    const { documentId } = z\n      .object({\n        documentId: z.string().min(1),\n      })\n      .parse(req.body);\n\n    const userId = Number(req.user!.id);\n\n    // Step 1: Download document\n    const downloadResult = await curriculumDiscoveryService.downloadDocument(documentId);\n    if (!downloadResult.success) {\n      return res.status(400).json({\n        success: false,\n        error: `Download failed: ${downloadResult.error}`,\n        data: { documentId, step: 'download' },\n      });\n    }\n\n    // Step 2: Process document\n    const processResult = await curriculumDiscoveryService.processDocument(documentId, userId);\n    if (!processResult.success) {\n      return res.status(400).json({\n        success: false,\n        error: `Processing failed: ${processResult.error}`,\n        data: { documentId, step: 'process' },\n      });\n    }\n\n    res.json({\n      success: true,\n      data: {\n        documentId,\n        importId: processResult.importId,\n        filePath: downloadResult.filePath,\n        message: 'Document downloaded and processed successfully',\n      },\n    });\n  } catch (error) {\n    console.error('Download and process error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to download and process document',\n    });\n  }\n});\n\n/**\n * Verify document availability\n * POST /api/curriculum-discovery/verify\n */\nrouter.post('/verify', authMiddleware, async (req, res) => {\n  try {\n    const { documentId } = z\n      .object({\n        documentId: z.string().min(1),\n      })\n      .parse(req.body);\n\n    const isAvailable = await curriculumDiscoveryService.verifyDocument(documentId);\n\n    res.json({\n      success: true,\n      data: {\n        documentId,\n        isAvailable,\n        verifiedAt: new Date().toISOString(),\n      },\n    });\n  } catch (error) {\n    console.error('Verify document error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to verify document',\n    });\n  }\n});\n\n/**\n * Remove a discovered document\n * DELETE /api/curriculum-discovery/documents/:documentId\n */\nrouter.delete('/documents/:documentId', authMiddleware, async (req, res) => {\n  try {\n    const { documentId } = req.params;\n\n    if (!documentId) {\n      return res.status(400).json({\n        success: false,\n        error: 'Document ID is required',\n      });\n    }\n\n    const removed = curriculumDiscoveryService.removeDiscoveredDocument(documentId);\n\n    if (removed) {\n      res.json({\n        success: true,\n        data: {\n          documentId,\n          message: 'Document removed from discovery results',\n        },\n      });\n    } else {\n      res.status(404).json({\n        success: false,\n        error: 'Document not found',\n        data: { documentId },\n      });\n    }\n  } catch (error) {\n    console.error('Remove document error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to remove document',\n    });\n  }\n});\n\n/**\n * Get discovery sources and their status\n * GET /api/curriculum-discovery/sources\n */\nrouter.get('/sources', authMiddleware, async (req, res) => {\n  try {\n    // This would be implemented if sources were stored in database\n    // For now, return static information about configured sources\n    const sources = [\n      {\n        id: 'pei-gov',\n        name: 'Prince Edward Island Department of Education',\n        province: 'PE',\n        isActive: true,\n        lastScanDate: null,\n        documentCount: curriculumDiscoveryService.getDocumentsByFilter({ province: 'PE' }).length,\n      },\n      {\n        id: 'ontario-edu',\n        name: 'Ontario Ministry of Education',\n        province: 'ON',\n        isActive: true,\n        lastScanDate: null,\n        documentCount: curriculumDiscoveryService.getDocumentsByFilter({ province: 'ON' }).length,\n      },\n      {\n        id: 'bc-gov',\n        name: 'British Columbia Ministry of Education',\n        province: 'BC',\n        isActive: true,\n        lastScanDate: null,\n        documentCount: curriculumDiscoveryService.getDocumentsByFilter({ province: 'BC' }).length,\n      },\n    ];\n\n    res.json({\n      success: true,\n      data: {\n        sources,\n        totalSources: sources.length,\n        activeSources: sources.filter((s) => s.isActive).length,\n      },\n    });\n  } catch (error) {\n    console.error('Get sources error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve discovery sources',\n    });\n  }\n});\n\n/**\n * Batch operations for multiple documents\n * POST /api/curriculum-discovery/batch\n */\nrouter.post('/batch', authMiddleware, async (req, res) => {\n  try {\n    const { operation, documentIds } = z\n      .object({\n        operation: z.enum(['download', 'process', 'download-and-process', 'verify']),\n        documentIds: z.array(z.string().min(1)).min(1).max(10), // Limit batch size\n      })\n      .parse(req.body);\n\n    const userId = Number(req.user!.id);\n    const results: Array<{\n      documentId: string;\n      success: boolean;\n      data?: unknown;\n      error?: string;\n    }> = [];\n\n    for (const documentId of documentIds) {\n      try {\n        let result: { success: boolean; [key: string]: unknown };\n\n        switch (operation) {\n          case 'download':\n            result = await curriculumDiscoveryService.downloadDocument(documentId);\n            break;\n          case 'process':\n            result = await curriculumDiscoveryService.processDocument(documentId, userId);\n            break;\n          case 'download-and-process': {\n            const downloadResult = await curriculumDiscoveryService.downloadDocument(documentId);\n            if (downloadResult.success) {\n              result = await curriculumDiscoveryService.processDocument(documentId, userId);\n              result.filePath = downloadResult.filePath;\n            } else {\n              result = downloadResult;\n            }\n            break;\n          }\n          case 'verify': {\n            const isAvailable = await curriculumDiscoveryService.verifyDocument(documentId);\n            result = { success: true, isAvailable };\n            break;\n          }\n          default:\n            result = { success: false, error: 'Unknown operation' };\n        }\n\n        results.push({\n          documentId,\n          success: result.success,\n          data: result.success ? result : undefined,\n          error: result.success ? undefined : (result.error as string),\n        });\n      } catch (error) {\n        results.push({\n          documentId,\n          success: false,\n          error: error instanceof Error ? error.message : 'Unknown error',\n        });\n      }\n\n      // Add delay between batch operations to avoid overwhelming sources\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    }\n\n    const successCount = results.filter((r) => r.success).length;\n    const failureCount = results.length - successCount;\n\n    res.json({\n      success: true,\n      data: {\n        operation,\n        results,\n        summary: {\n          total: results.length,\n          successful: successCount,\n          failed: failureCount,\n        },\n      },\n    });\n  } catch (error) {\n    console.error('Batch operation error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to perform batch operation',\n    });\n  }\n});\n\nexport default router;\n"],"version":3}