{"version":3,"names":["cov_1x53l90vy5","actualCoverage","Router","prisma","generateParentSummary","regenerateParentSummary","z","router","s","generateSummarySchema","object","studentId","number","int","positive","from","string","datetime","to","focus","array","optional","regenerateSummarySchema","originalFrench","min","originalEnglish","tone","enum","saveSummarySchema","dateFrom","dateTo","contentFr","contentEn","isDraft","boolean","post","req","res","_next","f","userId","user","id","b","status","json","error","validation","safeParse","body","success","details","flatten","data","student","findFirst","where","include","artifacts","createdAt","gte","Date","lte","reflections","summaryData","fromDate","toDate","focusAreas","err","console","summary","parentSummary","create","JSON","stringify","get","parseInt","params","summaries","findMany","orderBy","put","summaryId","existingSummary","update","delete","send"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/parentSummary.ts"],"sourcesContent":["import { Router, Request } from 'express';\nimport { prisma } from '../prisma';\nimport { generateParentSummary, regenerateParentSummary } from '../services/parentSummaryLLM';\nimport { z } from 'zod';\n\nconst router = Router();\n\n// Validation schemas\nconst generateSummarySchema = z.object({\n  studentId: z.number().int().positive(),\n  from: z.string().datetime(),\n  to: z.string().datetime(),\n  focus: z.array(z.string()).optional(),\n});\n\nconst regenerateSummarySchema = z.object({\n  originalFrench: z.string().min(1),\n  originalEnglish: z.string().min(1),\n  studentId: z.number().int().positive(),\n  from: z.string().datetime(),\n  to: z.string().datetime(),\n  focus: z.array(z.string()).optional(),\n  tone: z.enum(['formal', 'informal']).optional(),\n});\n\nconst saveSummarySchema = z.object({\n  studentId: z.number().int().positive(),\n  dateFrom: z.string().datetime(),\n  dateTo: z.string().datetime(),\n  focus: z.array(z.string()).optional(),\n  contentFr: z.string().min(1),\n  contentEn: z.string().min(1),\n  isDraft: z.boolean().optional(),\n});\n\n// Generate a new parent summary using AI\nrouter.post('/generate', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const validation = generateSummarySchema.safeParse(req.body);\n    if (!validation.success) {\n      return res.status(400).json({\n        error: 'Invalid request data',\n        details: validation.error.flatten(),\n      });\n    }\n\n    const { studentId, from, to, focus } = validation.data;\n\n    // Verify the student belongs to this teacher\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n      include: {\n        // parentContacts: true, // DISABLED: Legacy model removed\n        artifacts: {\n          where: {\n            createdAt: {\n              gte: new Date(from),\n              lte: new Date(to),\n            },\n          },\n        },\n        reflections: {\n          where: {\n            createdAt: {\n              gte: new Date(from),\n              lte: new Date(to),\n            },\n          },\n        },\n      },\n    });\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    // Generate the summary using AI\n    const summaryData = await generateParentSummary({\n      student: student,\n      fromDate: new Date(from),\n      toDate: new Date(to),\n      focusAreas: focus,\n    });\n\n    res.json(summaryData);\n  } catch (err) {\n    console.error('Error generating parent summary:', err);\n    _next(err);\n  }\n});\n\n// Regenerate an existing summary with variations\nrouter.post('/regenerate', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const validation = regenerateSummarySchema.safeParse(req.body);\n    if (!validation.success) {\n      return res.status(400).json({\n        error: 'Invalid request data',\n        details: validation.error.flatten(),\n      });\n    }\n\n    const { originalFrench, originalEnglish, studentId, from, to, focus, tone } = validation.data;\n\n    // Verify the student belongs to this teacher\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n    });\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    // Regenerate the summary with variations\n    const summaryData = await regenerateParentSummary({\n      originalFrench,\n      originalEnglish,\n      student,\n      fromDate: new Date(from),\n      toDate: new Date(to),\n      focusAreas: focus,\n      tone: tone || 'formal',\n    });\n\n    res.json(summaryData);\n  } catch (err) {\n    console.error('Error regenerating parent summary:', err);\n    _next(err);\n  }\n});\n\n// Save a summary to the database\nrouter.post('/save', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const validation = saveSummarySchema.safeParse(req.body);\n    if (!validation.success) {\n      return res.status(400).json({\n        error: 'Invalid request data',\n        details: validation.error.flatten(),\n      });\n    }\n\n    const { studentId, dateFrom, dateTo, focus, contentFr, contentEn, isDraft } = validation.data;\n\n    // Verify the student belongs to this teacher\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n    });\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    // Save the summary\n    const summary = await prisma.parentSummary.create({\n      data: {\n        studentId,\n        dateFrom: new Date(dateFrom),\n        dateTo: new Date(dateTo),\n        focus: JSON.stringify(focus || []),\n        contentFr,\n        contentEn,\n        isDraft: isDraft ?? true,\n      },\n    });\n\n    res.status(201).json(summary);\n  } catch (err) {\n    console.error('Error saving parent summary:', err);\n    _next(err);\n  }\n});\n\n// Get all summaries for a specific student\nrouter.get('/student/:studentId', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const studentId = parseInt(req.params.studentId);\n\n    // Verify the student belongs to this teacher\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n    });\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    const summaries = await prisma.parentSummary.findMany({\n      where: { studentId },\n      orderBy: { createdAt: 'desc' },\n    });\n\n    res.json(summaries);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Update a summary\nrouter.put('/:id', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const summaryId = parseInt(req.params.id);\n\n    // Verify the summary belongs to a student of this teacher\n    const existingSummary = await prisma.parentSummary.findFirst({\n      where: {\n        id: summaryId,\n        student: {\n          userId: userId,\n        },\n      },\n    });\n\n    if (!existingSummary) {\n      return res.status(404).json({ error: 'Summary not found' });\n    }\n\n    const summary = await prisma.parentSummary.update({\n      where: { id: summaryId },\n      data: req.body,\n    });\n\n    res.json(summary);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Delete a summary\nrouter.delete('/:id', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const summaryId = parseInt(req.params.id);\n\n    // Verify the summary belongs to a student of this teacher\n    const existingSummary = await prisma.parentSummary.findFirst({\n      where: {\n        id: summaryId,\n        student: {\n          userId: userId,\n        },\n      },\n    });\n\n    if (!existingSummary) {\n      return res.status(404).json({ error: 'Summary not found' });\n    }\n\n    await prisma.parentSummary.delete({\n      where: { id: summaryId },\n    });\n\n    res.status(204).send();\n  } catch (err) {\n    _next(err);\n  }\n});\n\nexport default router;\n"],"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","ignoreList":[]}