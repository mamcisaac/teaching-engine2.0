ae12103548e36fa10a099bc9b4ec6974
/* istanbul ignore next */
function cov_1x53l90vy5() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/parentSummary.ts";
  var hash = "fcca1ae681887ebe7ab123883b8372465f9fb549";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/parentSummary.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 23
        }
      },
      "1": {
        start: {
          line: 7,
          column: 30
        },
        end: {
          line: 12,
          column: 2
        }
      },
      "2": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "3": {
        start: {
          line: 22,
          column: 26
        },
        end: {
          line: 30,
          column: 2
        }
      },
      "4": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 88,
          column: 3
        }
      },
      "5": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "6": {
        start: {
          line: 34,
          column: 23
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "7": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "8": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 67
        }
      },
      "9": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 68
        }
      },
      "10": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "11": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "12": {
        start: {
          line: 45,
          column: 47
        },
        end: {
          line: 45,
          column: 62
        }
      },
      "13": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 71,
          column: 10
        }
      },
      "14": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "15": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 72
        }
      },
      "16": {
        start: {
          line: 76,
          column: 28
        },
        end: {
          line: 81,
          column: 10
        }
      },
      "17": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 30
        }
      },
      "18": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 63
        }
      },
      "19": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "20": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 130,
          column: 3
        }
      },
      "21": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "22": {
        start: {
          line: 92,
          column: 23
        },
        end: {
          line: 92,
          column: 35
        }
      },
      "23": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "24": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 67
        }
      },
      "25": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 96,
          column: 70
        }
      },
      "26": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "27": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "28": {
        start: {
          line: 103,
          column: 86
        },
        end: {
          line: 103,
          column: 101
        }
      },
      "29": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "30": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "31": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 72
        }
      },
      "32": {
        start: {
          line: 115,
          column: 28
        },
        end: {
          line: 123,
          column: 10
        }
      },
      "33": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 30
        }
      },
      "34": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 65
        }
      },
      "35": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 19
        }
      },
      "36": {
        start: {
          line: 132,
          column: 0
        },
        end: {
          line: 174,
          column: 3
        }
      },
      "37": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "38": {
        start: {
          line: 134,
          column: 23
        },
        end: {
          line: 134,
          column: 35
        }
      },
      "39": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "40": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 67
        }
      },
      "41": {
        start: {
          line: 138,
          column: 27
        },
        end: {
          line: 138,
          column: 64
        }
      },
      "42": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "43": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 143,
          column: 15
        }
      },
      "44": {
        start: {
          line: 145,
          column: 86
        },
        end: {
          line: 145,
          column: 101
        }
      },
      "45": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 152,
          column: 10
        }
      },
      "46": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "47": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 72
        }
      },
      "48": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 167,
          column: 10
        }
      },
      "49": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 38
        }
      },
      "50": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 59
        }
      },
      "51": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 19
        }
      },
      "52": {
        start: {
          line: 176,
          column: 0
        },
        end: {
          line: 202,
          column: 3
        }
      },
      "53": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 201,
          column: 5
        }
      },
      "54": {
        start: {
          line: 178,
          column: 23
        },
        end: {
          line: 178,
          column: 35
        }
      },
      "55": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "56": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 67
        }
      },
      "57": {
        start: {
          line: 182,
          column: 26
        },
        end: {
          line: 182,
          column: 56
        }
      },
      "58": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 189,
          column: 10
        }
      },
      "59": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "60": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 72
        }
      },
      "61": {
        start: {
          line: 193,
          column: 26
        },
        end: {
          line: 196,
          column: 10
        }
      },
      "62": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 28
        }
      },
      "63": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 19
        }
      },
      "64": {
        start: {
          line: 204,
          column: 0
        },
        end: {
          line: 232,
          column: 3
        }
      },
      "65": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "66": {
        start: {
          line: 206,
          column: 23
        },
        end: {
          line: 206,
          column: 35
        }
      },
      "67": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "68": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 67
        }
      },
      "69": {
        start: {
          line: 210,
          column: 26
        },
        end: {
          line: 210,
          column: 49
        }
      },
      "70": {
        start: {
          line: 212,
          column: 32
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "71": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "72": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 72
        }
      },
      "73": {
        start: {
          line: 223,
          column: 24
        },
        end: {
          line: 226,
          column: 10
        }
      },
      "74": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 26
        }
      },
      "75": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 19
        }
      },
      "76": {
        start: {
          line: 234,
          column: 0
        },
        end: {
          line: 261,
          column: 3
        }
      },
      "77": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 260,
          column: 5
        }
      },
      "78": {
        start: {
          line: 236,
          column: 23
        },
        end: {
          line: 236,
          column: 35
        }
      },
      "79": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 239,
          column: 9
        }
      },
      "80": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 67
        }
      },
      "81": {
        start: {
          line: 240,
          column: 26
        },
        end: {
          line: 240,
          column: 49
        }
      },
      "82": {
        start: {
          line: 242,
          column: 32
        },
        end: {
          line: 249,
          column: 10
        }
      },
      "83": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "84": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 72
        }
      },
      "85": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 255,
          column: 11
        }
      },
      "86": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 31
        }
      },
      "87": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 32,
            column: 26
          }
        },
        loc: {
          start: {
            line: 32,
            column: 52
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 32
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 90,
            column: 27
          },
          end: {
            line: 90,
            column: 28
          }
        },
        loc: {
          start: {
            line: 90,
            column: 54
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 90
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 132,
            column: 21
          },
          end: {
            line: 132,
            column: 22
          }
        },
        loc: {
          start: {
            line: 132,
            column: 48
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 132
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 176,
            column: 34
          },
          end: {
            line: 176,
            column: 35
          }
        },
        loc: {
          start: {
            line: 176,
            column: 61
          },
          end: {
            line: 202,
            column: 1
          }
        },
        line: 176
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 204,
            column: 19
          },
          end: {
            line: 204,
            column: 20
          }
        },
        loc: {
          start: {
            line: 204,
            column: 46
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 204
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 234,
            column: 22
          },
          end: {
            line: 234,
            column: 23
          }
        },
        loc: {
          start: {
            line: 234,
            column: 49
          },
          end: {
            line: 261,
            column: 1
          }
        },
        line: 234
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "6": {
        loc: {
          start: {
            line: 122,
            column: 18
          },
          end: {
            line: 122,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 18
          },
          end: {
            line: 122,
            column: 22
          }
        }, {
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 34
          }
        }],
        line: 122
      },
      "7": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "8": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "9": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "10": {
        loc: {
          start: {
            line: 162,
            column: 38
          },
          end: {
            line: 162,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 38
          },
          end: {
            line: 162,
            column: 43
          }
        }, {
          start: {
            line: 162,
            column: 47
          },
          end: {
            line: 162,
            column: 49
          }
        }],
        line: 162
      },
      "11": {
        loc: {
          start: {
            line: 165,
            column: 25
          },
          end: {
            line: 165,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 25
          },
          end: {
            line: 165,
            column: 32
          }
        }, {
          start: {
            line: 165,
            column: 36
          },
          end: {
            line: 165,
            column: 40
          }
        }],
        line: 165
      },
      "12": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "13": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "14": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "15": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "16": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 239,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "17": {
        loc: {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/parentSummary.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/parentSummary.ts"],
      sourcesContent: ["import { Router, Request } from 'express';\nimport { prisma } from '../prisma';\nimport { generateParentSummary, regenerateParentSummary } from '../services/parentSummaryLLM';\nimport { z } from 'zod';\n\nconst router = Router();\n\n// Validation schemas\nconst generateSummarySchema = z.object({\n  studentId: z.number().int().positive(),\n  from: z.string().datetime(),\n  to: z.string().datetime(),\n  focus: z.array(z.string()).optional(),\n});\n\nconst regenerateSummarySchema = z.object({\n  originalFrench: z.string().min(1),\n  originalEnglish: z.string().min(1),\n  studentId: z.number().int().positive(),\n  from: z.string().datetime(),\n  to: z.string().datetime(),\n  focus: z.array(z.string()).optional(),\n  tone: z.enum(['formal', 'informal']).optional(),\n});\n\nconst saveSummarySchema = z.object({\n  studentId: z.number().int().positive(),\n  dateFrom: z.string().datetime(),\n  dateTo: z.string().datetime(),\n  focus: z.array(z.string()).optional(),\n  contentFr: z.string().min(1),\n  contentEn: z.string().min(1),\n  isDraft: z.boolean().optional(),\n});\n\n// Generate a new parent summary using AI\nrouter.post('/generate', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const validation = generateSummarySchema.safeParse(req.body);\n    if (!validation.success) {\n      return res.status(400).json({\n        error: 'Invalid request data',\n        details: validation.error.flatten(),\n      });\n    }\n\n    const { studentId, from, to, focus } = validation.data;\n\n    // Verify the student belongs to this teacher\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n      include: {\n        // parentContacts: true, // DISABLED: Legacy model removed\n        artifacts: {\n          where: {\n            createdAt: {\n              gte: new Date(from),\n              lte: new Date(to),\n            },\n          },\n        },\n        reflections: {\n          where: {\n            createdAt: {\n              gte: new Date(from),\n              lte: new Date(to),\n            },\n          },\n        },\n      },\n    });\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    // Generate the summary using AI\n    const summaryData = await generateParentSummary({\n      student: student,\n      fromDate: new Date(from),\n      toDate: new Date(to),\n      focusAreas: focus,\n    });\n\n    res.json(summaryData);\n  } catch (err) {\n    console.error('Error generating parent summary:', err);\n    _next(err);\n  }\n});\n\n// Regenerate an existing summary with variations\nrouter.post('/regenerate', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const validation = regenerateSummarySchema.safeParse(req.body);\n    if (!validation.success) {\n      return res.status(400).json({\n        error: 'Invalid request data',\n        details: validation.error.flatten(),\n      });\n    }\n\n    const { originalFrench, originalEnglish, studentId, from, to, focus, tone } = validation.data;\n\n    // Verify the student belongs to this teacher\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n    });\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    // Regenerate the summary with variations\n    const summaryData = await regenerateParentSummary({\n      originalFrench,\n      originalEnglish,\n      student,\n      fromDate: new Date(from),\n      toDate: new Date(to),\n      focusAreas: focus,\n      tone: tone || 'formal',\n    });\n\n    res.json(summaryData);\n  } catch (err) {\n    console.error('Error regenerating parent summary:', err);\n    _next(err);\n  }\n});\n\n// Save a summary to the database\nrouter.post('/save', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const validation = saveSummarySchema.safeParse(req.body);\n    if (!validation.success) {\n      return res.status(400).json({\n        error: 'Invalid request data',\n        details: validation.error.flatten(),\n      });\n    }\n\n    const { studentId, dateFrom, dateTo, focus, contentFr, contentEn, isDraft } = validation.data;\n\n    // Verify the student belongs to this teacher\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n    });\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    // Save the summary\n    const summary = await prisma.parentSummary.create({\n      data: {\n        studentId,\n        dateFrom: new Date(dateFrom),\n        dateTo: new Date(dateTo),\n        focus: JSON.stringify(focus || []),\n        contentFr,\n        contentEn,\n        isDraft: isDraft ?? true,\n      },\n    });\n\n    res.status(201).json(summary);\n  } catch (err) {\n    console.error('Error saving parent summary:', err);\n    _next(err);\n  }\n});\n\n// Get all summaries for a specific student\nrouter.get('/student/:studentId', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const studentId = parseInt(req.params.studentId);\n\n    // Verify the student belongs to this teacher\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n    });\n\n    if (!student) {\n      return res.status(404).json({ error: 'Student not found' });\n    }\n\n    const summaries = await prisma.parentSummary.findMany({\n      where: { studentId },\n      orderBy: { createdAt: 'desc' },\n    });\n\n    res.json(summaries);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Update a summary\nrouter.put('/:id', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const summaryId = parseInt(req.params.id);\n\n    // Verify the summary belongs to a student of this teacher\n    const existingSummary = await prisma.parentSummary.findFirst({\n      where: {\n        id: summaryId,\n        student: {\n          userId: userId,\n        },\n      },\n    });\n\n    if (!existingSummary) {\n      return res.status(404).json({ error: 'Summary not found' });\n    }\n\n    const summary = await prisma.parentSummary.update({\n      where: { id: summaryId },\n      data: req.body,\n    });\n\n    res.json(summary);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Delete a summary\nrouter.delete('/:id', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const summaryId = parseInt(req.params.id);\n\n    // Verify the summary belongs to a student of this teacher\n    const existingSummary = await prisma.parentSummary.findFirst({\n      where: {\n        id: summaryId,\n        student: {\n          userId: userId,\n        },\n      },\n    });\n\n    if (!existingSummary) {\n      return res.status(404).json({ error: 'Summary not found' });\n    }\n\n    await prisma.parentSummary.delete({\n      where: { id: summaryId },\n    });\n\n    res.status(204).send();\n  } catch (err) {\n    _next(err);\n  }\n});\n\nexport default router;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fcca1ae681887ebe7ab123883b8372465f9fb549"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1x53l90vy5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1x53l90vy5();
import { Router } from 'express';
import { prisma } from '../prisma';
import { generateParentSummary, regenerateParentSummary } from '../services/parentSummaryLLM';
import { z } from 'zod';
const router =
/* istanbul ignore next */
(cov_1x53l90vy5().s[0]++, Router());
// Validation schemas
const generateSummarySchema =
/* istanbul ignore next */
(cov_1x53l90vy5().s[1]++, z.object({
  studentId: z.number().int().positive(),
  from: z.string().datetime(),
  to: z.string().datetime(),
  focus: z.array(z.string()).optional()
}));
const regenerateSummarySchema =
/* istanbul ignore next */
(cov_1x53l90vy5().s[2]++, z.object({
  originalFrench: z.string().min(1),
  originalEnglish: z.string().min(1),
  studentId: z.number().int().positive(),
  from: z.string().datetime(),
  to: z.string().datetime(),
  focus: z.array(z.string()).optional(),
  tone: z.enum(['formal', 'informal']).optional()
}));
const saveSummarySchema =
/* istanbul ignore next */
(cov_1x53l90vy5().s[3]++, z.object({
  studentId: z.number().int().positive(),
  dateFrom: z.string().datetime(),
  dateTo: z.string().datetime(),
  focus: z.array(z.string()).optional(),
  contentFr: z.string().min(1),
  contentEn: z.string().min(1),
  isDraft: z.boolean().optional()
}));
// Generate a new parent summary using AI
/* istanbul ignore next */
cov_1x53l90vy5().s[4]++;
router.post('/generate', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_1x53l90vy5().f[0]++;
  cov_1x53l90vy5().s[5]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[6]++, req.user?.id);
    /* istanbul ignore next */
    cov_1x53l90vy5().s[7]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[0][0]++;
      cov_1x53l90vy5().s[8]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[0][1]++;
    }
    const validation =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[9]++, generateSummarySchema.safeParse(req.body));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[10]++;
    if (!validation.success) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[1][0]++;
      cov_1x53l90vy5().s[11]++;
      return res.status(400).json({
        error: 'Invalid request data',
        details: validation.error.flatten()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[1][1]++;
    }
    const {
      studentId,
      from,
      to,
      focus
    } =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[12]++, validation.data);
    // Verify the student belongs to this teacher
    const student =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[13]++, await prisma.student.findFirst({
      where: {
        id: studentId,
        userId: userId
      },
      include: {
        // parentContacts: true, // DISABLED: Legacy model removed
        artifacts: {
          where: {
            createdAt: {
              gte: new Date(from),
              lte: new Date(to)
            }
          }
        },
        reflections: {
          where: {
            createdAt: {
              gte: new Date(from),
              lte: new Date(to)
            }
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[14]++;
    if (!student) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[2][0]++;
      cov_1x53l90vy5().s[15]++;
      return res.status(404).json({
        error: 'Student not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[2][1]++;
    }
    // Generate the summary using AI
    const summaryData =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[16]++, await generateParentSummary({
      student: student,
      fromDate: new Date(from),
      toDate: new Date(to),
      focusAreas: focus
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[17]++;
    res.json(summaryData);
  } catch (err) {
    /* istanbul ignore next */
    cov_1x53l90vy5().s[18]++;
    console.error('Error generating parent summary:', err);
    /* istanbul ignore next */
    cov_1x53l90vy5().s[19]++;
    _next(err);
  }
});
// Regenerate an existing summary with variations
/* istanbul ignore next */
cov_1x53l90vy5().s[20]++;
router.post('/regenerate', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_1x53l90vy5().f[1]++;
  cov_1x53l90vy5().s[21]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[22]++, req.user?.id);
    /* istanbul ignore next */
    cov_1x53l90vy5().s[23]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[3][0]++;
      cov_1x53l90vy5().s[24]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[3][1]++;
    }
    const validation =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[25]++, regenerateSummarySchema.safeParse(req.body));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[26]++;
    if (!validation.success) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[4][0]++;
      cov_1x53l90vy5().s[27]++;
      return res.status(400).json({
        error: 'Invalid request data',
        details: validation.error.flatten()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[4][1]++;
    }
    const {
      originalFrench,
      originalEnglish,
      studentId,
      from,
      to,
      focus,
      tone
    } =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[28]++, validation.data);
    // Verify the student belongs to this teacher
    const student =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[29]++, await prisma.student.findFirst({
      where: {
        id: studentId,
        userId: userId
      }
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[30]++;
    if (!student) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[5][0]++;
      cov_1x53l90vy5().s[31]++;
      return res.status(404).json({
        error: 'Student not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[5][1]++;
    }
    // Regenerate the summary with variations
    const summaryData =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[32]++, await regenerateParentSummary({
      originalFrench,
      originalEnglish,
      student,
      fromDate: new Date(from),
      toDate: new Date(to),
      focusAreas: focus,
      tone:
      /* istanbul ignore next */
      (cov_1x53l90vy5().b[6][0]++, tone) ||
      /* istanbul ignore next */
      (cov_1x53l90vy5().b[6][1]++, 'formal')
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[33]++;
    res.json(summaryData);
  } catch (err) {
    /* istanbul ignore next */
    cov_1x53l90vy5().s[34]++;
    console.error('Error regenerating parent summary:', err);
    /* istanbul ignore next */
    cov_1x53l90vy5().s[35]++;
    _next(err);
  }
});
// Save a summary to the database
/* istanbul ignore next */
cov_1x53l90vy5().s[36]++;
router.post('/save', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_1x53l90vy5().f[2]++;
  cov_1x53l90vy5().s[37]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[38]++, req.user?.id);
    /* istanbul ignore next */
    cov_1x53l90vy5().s[39]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[7][0]++;
      cov_1x53l90vy5().s[40]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[7][1]++;
    }
    const validation =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[41]++, saveSummarySchema.safeParse(req.body));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[42]++;
    if (!validation.success) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[8][0]++;
      cov_1x53l90vy5().s[43]++;
      return res.status(400).json({
        error: 'Invalid request data',
        details: validation.error.flatten()
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[8][1]++;
    }
    const {
      studentId,
      dateFrom,
      dateTo,
      focus,
      contentFr,
      contentEn,
      isDraft
    } =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[44]++, validation.data);
    // Verify the student belongs to this teacher
    const student =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[45]++, await prisma.student.findFirst({
      where: {
        id: studentId,
        userId: userId
      }
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[46]++;
    if (!student) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[9][0]++;
      cov_1x53l90vy5().s[47]++;
      return res.status(404).json({
        error: 'Student not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[9][1]++;
    }
    // Save the summary
    const summary =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[48]++, await prisma.parentSummary.create({
      data: {
        studentId,
        dateFrom: new Date(dateFrom),
        dateTo: new Date(dateTo),
        focus: JSON.stringify(
        /* istanbul ignore next */
        (cov_1x53l90vy5().b[10][0]++, focus) ||
        /* istanbul ignore next */
        (cov_1x53l90vy5().b[10][1]++, [])),
        contentFr,
        contentEn,
        isDraft:
        /* istanbul ignore next */
        (cov_1x53l90vy5().b[11][0]++, isDraft) ??
        /* istanbul ignore next */
        (cov_1x53l90vy5().b[11][1]++, true)
      }
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[49]++;
    res.status(201).json(summary);
  } catch (err) {
    /* istanbul ignore next */
    cov_1x53l90vy5().s[50]++;
    console.error('Error saving parent summary:', err);
    /* istanbul ignore next */
    cov_1x53l90vy5().s[51]++;
    _next(err);
  }
});
// Get all summaries for a specific student
/* istanbul ignore next */
cov_1x53l90vy5().s[52]++;
router.get('/student/:studentId', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_1x53l90vy5().f[3]++;
  cov_1x53l90vy5().s[53]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[54]++, req.user?.id);
    /* istanbul ignore next */
    cov_1x53l90vy5().s[55]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[12][0]++;
      cov_1x53l90vy5().s[56]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[12][1]++;
    }
    const studentId =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[57]++, parseInt(req.params.studentId));
    // Verify the student belongs to this teacher
    const student =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[58]++, await prisma.student.findFirst({
      where: {
        id: studentId,
        userId: userId
      }
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[59]++;
    if (!student) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[13][0]++;
      cov_1x53l90vy5().s[60]++;
      return res.status(404).json({
        error: 'Student not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[13][1]++;
    }
    const summaries =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[61]++, await prisma.parentSummary.findMany({
      where: {
        studentId
      },
      orderBy: {
        createdAt: 'desc'
      }
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[62]++;
    res.json(summaries);
  } catch (err) {
    /* istanbul ignore next */
    cov_1x53l90vy5().s[63]++;
    _next(err);
  }
});
// Update a summary
/* istanbul ignore next */
cov_1x53l90vy5().s[64]++;
router.put('/:id', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_1x53l90vy5().f[4]++;
  cov_1x53l90vy5().s[65]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[66]++, req.user?.id);
    /* istanbul ignore next */
    cov_1x53l90vy5().s[67]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[14][0]++;
      cov_1x53l90vy5().s[68]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[14][1]++;
    }
    const summaryId =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[69]++, parseInt(req.params.id));
    // Verify the summary belongs to a student of this teacher
    const existingSummary =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[70]++, await prisma.parentSummary.findFirst({
      where: {
        id: summaryId,
        student: {
          userId: userId
        }
      }
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[71]++;
    if (!existingSummary) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[15][0]++;
      cov_1x53l90vy5().s[72]++;
      return res.status(404).json({
        error: 'Summary not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[15][1]++;
    }
    const summary =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[73]++, await prisma.parentSummary.update({
      where: {
        id: summaryId
      },
      data: req.body
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[74]++;
    res.json(summary);
  } catch (err) {
    /* istanbul ignore next */
    cov_1x53l90vy5().s[75]++;
    _next(err);
  }
});
// Delete a summary
/* istanbul ignore next */
cov_1x53l90vy5().s[76]++;
router.delete('/:id', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_1x53l90vy5().f[5]++;
  cov_1x53l90vy5().s[77]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[78]++, req.user?.id);
    /* istanbul ignore next */
    cov_1x53l90vy5().s[79]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[16][0]++;
      cov_1x53l90vy5().s[80]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[16][1]++;
    }
    const summaryId =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[81]++, parseInt(req.params.id));
    // Verify the summary belongs to a student of this teacher
    const existingSummary =
    /* istanbul ignore next */
    (cov_1x53l90vy5().s[82]++, await prisma.parentSummary.findFirst({
      where: {
        id: summaryId,
        student: {
          userId: userId
        }
      }
    }));
    /* istanbul ignore next */
    cov_1x53l90vy5().s[83]++;
    if (!existingSummary) {
      /* istanbul ignore next */
      cov_1x53l90vy5().b[17][0]++;
      cov_1x53l90vy5().s[84]++;
      return res.status(404).json({
        error: 'Summary not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1x53l90vy5().b[17][1]++;
    }
    cov_1x53l90vy5().s[85]++;
    await prisma.parentSummary.delete({
      where: {
        id: summaryId
      }
    });
    /* istanbul ignore next */
    cov_1x53l90vy5().s[86]++;
    res.status(204).send();
  } catch (err) {
    /* istanbul ignore next */
    cov_1x53l90vy5().s[87]++;
    _next(err);
  }
});
export default router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,