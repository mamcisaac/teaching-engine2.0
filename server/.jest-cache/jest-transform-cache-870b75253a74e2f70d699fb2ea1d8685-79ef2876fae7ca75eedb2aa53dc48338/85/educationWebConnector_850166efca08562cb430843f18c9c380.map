{"version":3,"names":["cov_1lmb97r746","actualCoverage","BaseConnector","cheerio","EducationWebConnector","sites","s","id","name","baseUrl","language","isActive","crawlDelay","searchUrl","query","params","f","searchParams","URLSearchParams","search","sort","grade","b","append","subject","subjectMap","khanSubject","toLowerCase","toString","parseResults","html","$","activities","each","_","element","$element","title","find","text","trim","url","attr","description","thumbnail","push","startsWith","type","isFree","q","first","gradeText","subjectText","_params","encodeURIComponent","inferTypeFromTitle","constructor","sitesToSearch","filter","site","console","log","fetchWithRetry","load","siteResults","result","activity","transformToExternalActivity","externalId","generateIdFromUrl","source","sourceName","thumbnailUrl","duration","estimateDuration","activityType","inferActivityType","gradeMin","extractGradeFromText","min","gradeMax","max","normalizeSubject","inferSubject","materials","extractMaterials","sourceRating","rating","license","delay","error","length","getActivityDetails","_externalId","maxRetries","headers","fetchWithRetryAndTimeout","hash","Buffer","from","replace","substring","gradeMatch","match","grade1","parseInt","grade2","Math","lowerText","includes","lowerTitle","durationMatch","value","unit"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/connectors/educationWebConnector.ts"],"sourcesContent":["import { BaseConnector } from './baseConnector';\nimport { SearchParams } from '../activityDiscoveryService';\nimport { ExternalActivity } from '@teaching-engine/database';\nimport * as cheerio from 'cheerio';\n\ninterface EducationalSite {\n  id: string;\n  name: string;\n  baseUrl: string;\n  searchUrl: (query: string, params: SearchParams) => string;\n  parseResults: (html: string, $: cheerio.CheerioAPI, site: EducationalSite) => EducationalActivity[];\n  isActive: boolean;\n  language: 'en' | 'fr' | 'both';\n  crawlDelay: number; // milliseconds\n}\n\ninterface EducationalActivity {\n  title: string;\n  url: string;\n  description?: string;\n  grade?: string;\n  subject?: string;\n  type?: string;\n  materials?: string[];\n  duration?: number;\n  thumbnail?: string;\n  isFree?: boolean;\n  rating?: number;\n}\n\n/**\n * Educational Websites Connector\n * Searches multiple educational resource websites for activities and lessons\n */\nexport class EducationWebConnector extends BaseConnector {\n  private sites: EducationalSite[] = [\n    {\n      id: 'khan-academy',\n      name: 'Khan Academy',\n      baseUrl: 'https://www.khanacademy.org',\n      language: 'both',\n      isActive: true,\n      crawlDelay: 2000,\n      searchUrl: (query: string, params: SearchParams) => {\n        const searchParams = new URLSearchParams({\n          search: query,\n          sort: 'votes',\n        });\n        \n        if (params.grade) {\n          // Khan Academy uses different grade representations\n          if (params.grade >= 1 && params.grade <= 8) {\n            searchParams.append('class', `grade-${params.grade}`);\n          }\n        }\n        \n        if (params.subject) {\n          const subjectMap: Record<string, string> = {\n            'math': 'math',\n            'science': 'science',\n            'english': 'ela',\n            'social-studies': 'humanities',\n          };\n          const khanSubject = subjectMap[params.subject.toLowerCase()];\n          if (khanSubject) {\n            searchParams.append('subject', khanSubject);\n          }\n        }\n\n        return `https://www.khanacademy.org/search?${searchParams.toString()}`;\n      },\n      parseResults: (html: string, $: cheerio.CheerioAPI): EducationalActivity[] => {\n        const activities: EducationalActivity[] = [];\n\n        $('.search-results-list .result').each((_, element) => {\n          const $element = $(element);\n          const title = $element.find('.result-title a').text().trim();\n          const url = $element.find('.result-title a').attr('href');\n          const description = $element.find('.result-description').text().trim();\n          const thumbnail = $element.find('img').attr('src');\n\n          if (title && url) {\n            activities.push({\n              title,\n              url: url.startsWith('http') ? url : `https://www.khanacademy.org${url}`,\n              description,\n              type: 'video', // Khan Academy is primarily video-based\n              thumbnail,\n              isFree: true,\n            });\n          }\n        });\n\n        return activities;\n      },\n    },\n    {\n      id: 'teacher-resources',\n      name: 'Teacher Resources (Readworks, Scholastic)',\n      baseUrl: 'https://www.readworks.org',\n      language: 'en',\n      isActive: true,\n      crawlDelay: 3000,\n      searchUrl: (query: string, params: SearchParams) => {\n        const searchParams = new URLSearchParams({\n          q: query,\n        });\n        \n        if (params.grade) {\n          searchParams.append('grade', params.grade.toString());\n        }\n\n        return `https://www.readworks.org/find-content?${searchParams.toString()}`;\n      },\n      parseResults: (html: string, $: cheerio.CheerioAPI): EducationalActivity[] => {\n        const activities: EducationalActivity[] = [];\n\n        $('.search-result, .content-card').each((_, element) => {\n          const $element = $(element);\n          const title = $element.find('.title, h3, .card-title').first().text().trim();\n          const url = $element.find('a').first().attr('href');\n          const description = $element.find('.description, .excerpt, .card-text').first().text().trim();\n          const gradeText = $element.find('.grade, .grade-level').text().trim();\n\n          if (title && url) {\n            activities.push({\n              title,\n              url: url.startsWith('http') ? url : `https://www.readworks.org${url}`,\n              description,\n              grade: gradeText,\n              type: 'worksheet',\n              isFree: true,\n            });\n          }\n        });\n\n        return activities;\n      },\n    },\n    {\n      id: 'education-ca',\n      name: 'Education.ca Resources',\n      baseUrl: 'https://www.education.ca',\n      language: 'both',\n      isActive: true,\n      crawlDelay: 2500,\n      searchUrl: (query: string, params: SearchParams) => {\n        const searchParams = new URLSearchParams({\n          q: query,\n          sort: 'relevance',\n        });\n        \n        if (params.language === 'fr') {\n          searchParams.append('lang', 'fr');\n        }\n\n        return `https://www.education.ca/search?${searchParams.toString()}`;\n      },\n      parseResults: (html: string, $: cheerio.CheerioAPI): EducationalActivity[] => {\n        const activities: EducationalActivity[] = [];\n\n        $('.resource-item, .search-result').each((_, element) => {\n          const $element = $(element);\n          const title = $element.find('.resource-title, .title').text().trim();\n          const url = $element.find('a').first().attr('href');\n          const description = $element.find('.resource-description, .description').text().trim();\n          const gradeText = $element.find('.grade-level, .grade').text().trim();\n          const subjectText = $element.find('.subject').text().trim();\n\n          if (title && url) {\n            activities.push({\n              title,\n              url: url.startsWith('http') ? url : `https://www.education.ca${url}`,\n              description,\n              grade: gradeText,\n              subject: subjectText,\n              type: 'resource',\n              isFree: true,\n            });\n          }\n        });\n\n        return activities;\n      },\n    },\n    {\n      id: 'tvo-ilc',\n      name: 'TVO ILC (French Resources)',\n      baseUrl: 'https://www.tvoilc.ca',\n      language: 'fr',\n      isActive: true,\n      crawlDelay: 3000,\n      searchUrl: (query: string, params: SearchParams) => {\n        const searchParams = new URLSearchParams({\n          q: query,\n        });\n        \n        if (params.grade) {\n          searchParams.append('niveau', params.grade.toString());\n        }\n\n        return `https://www.tvoilc.ca/recherche?${searchParams.toString()}`;\n      },\n      parseResults: (html: string, $: cheerio.CheerioAPI): EducationalActivity[] => {\n        const activities: EducationalActivity[] = [];\n\n        $('.resource, .cours-item').each((_, element) => {\n          const $element = $(element);\n          const title = $element.find('.titre, .title, h3').first().text().trim();\n          const url = $element.find('a').first().attr('href');\n          const description = $element.find('.description, .resume').first().text().trim();\n\n          if (title && url) {\n            activities.push({\n              title,\n              url: url.startsWith('http') ? url : `https://www.tvoilc.ca${url}`,\n              description,\n              type: 'lesson_plan',\n              isFree: true,\n            });\n          }\n        });\n\n        return activities;\n      },\n    },\n    {\n      id: 'teachingideas',\n      name: 'Teaching Ideas & Worksheets',\n      baseUrl: 'https://www.teachingideas.co.uk',\n      language: 'en',\n      isActive: true,\n      crawlDelay: 2000,\n      searchUrl: (query: string, _params: SearchParams) => {\n        return `https://www.teachingideas.co.uk/search?q=${encodeURIComponent(query)}`;\n      },\n      parseResults: (html: string, $: cheerio.CheerioAPI): EducationalActivity[] => {\n        const activities: EducationalActivity[] = [];\n\n        $('.search-result, .resource-card').each((_, element) => {\n          const $element = $(element);\n          const title = $element.find('.title, h3, .resource-title').first().text().trim();\n          const url = $element.find('a').first().attr('href');\n          const description = $element.find('.excerpt, .description').first().text().trim();\n\n          if (title && url) {\n            activities.push({\n              title,\n              url: url.startsWith('http') ? url : `https://www.teachingideas.co.uk${url}`,\n              description,\n              type: this.inferTypeFromTitle(title),\n              isFree: true,\n            });\n          }\n        });\n\n        return activities;\n      },\n    },\n  ];\n\n  constructor() {\n    super('EducationWeb');\n  }\n\n  async search(\n    params: SearchParams,\n  ): Promise<Omit<ExternalActivity, 'id' | 'createdAt' | 'updatedAt'>[]> {\n    const activities: Omit<ExternalActivity, 'id' | 'createdAt' | 'updatedAt'>[] = [];\n\n    // Filter sites based on language preference\n    const sitesToSearch = this.sites.filter((site) => {\n      if (!site.isActive) return false;\n      if (params.language === 'fr' && site.language === 'en') return false;\n      if (params.language === 'en' && site.language === 'fr') return false;\n      return true;\n    });\n\n    // Search each site\n    for (const site of sitesToSearch) {\n      try {\n        console.log(`Searching ${site.name} for: ${params.query}`);\n        \n        const searchUrl = site.searchUrl(params.query || '', params);\n        const html = await this.fetchWithRetry(searchUrl);\n        \n        if (!html) continue;\n\n        const $ = cheerio.load(html);\n        const siteResults = site.parseResults(html, $, site);\n\n        // Transform results to ExternalActivity format\n        for (const result of siteResults) {\n          const activity = this.transformToExternalActivity(\n            result,\n            {\n              externalId: this.generateIdFromUrl(result.url),\n              source: this.sourceName,\n              url: result.url,\n              title: result.title,\n              description: result.description,\n              thumbnailUrl: result.thumbnail,\n              duration: result.duration || this.estimateDuration(result),\n              activityType: result.type || this.inferActivityType({\n                title: result.title,\n                description: result.description,\n              }),\n              gradeMin: this.extractGradeFromText(result.grade || result.description || '').min,\n              gradeMax: this.extractGradeFromText(result.grade || result.description || '').max,\n              subject: this.normalizeSubject(result.subject || this.inferSubject(result.title + ' ' + (result.description || ''))),\n              language: params.language || site.language === 'fr' ? 'fr' : 'en',\n              materials: result.materials || this.extractMaterials(result.description || ''),\n              sourceRating: result.rating,\n              isFree: result.isFree !== false, // Default to free\n              license: 'Educational Use',\n            }\n          );\n\n          activities.push(activity);\n        }\n\n        // Respect crawl delay between sites\n        await this.delay(site.crawlDelay);\n      } catch (error) {\n        console.error(`Error searching ${site.name}:`, error);\n      }\n    }\n\n    console.log(`Found ${activities.length} activities from educational websites`);\n    return activities;\n  }\n\n  async getActivityDetails(\n    _externalId: string,\n  ): Promise<Omit<ExternalActivity, 'id' | 'createdAt' | 'updatedAt'> | null> {\n    // For educational web connector, we'd need to store the original URL mapping\n    // This is a simplified implementation\n    try {\n      // In a real implementation, we'd reconstruct the URL from the external ID\n      // or store the mapping in a database\n      return null;\n    } catch (error) {\n      console.error('Error getting activity details:', error);\n      return null;\n    }\n  }\n\n  private async fetchWithRetry(\n    url: string,\n    maxRetries: number = 3,\n    delay: number = 1000\n  ): Promise<string | null> {\n    const headers = {\n      'User-Agent': 'Teaching Engine 2.0 Educational Resource Bot (+https://teaching-engine.ca/bot)',\n      'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n      'Accept-Language': 'en-US,en;q=0.9,fr;q=0.8',\n    };\n\n    // Use the new fetchWithRetryAndTimeout from base class\n    return this.fetchWithRetryAndTimeout(\n      url,\n      { headers },\n      maxRetries,\n      30000, // 30 second timeout per request\n      delay\n    );\n  }\n\n  private generateIdFromUrl(url: string): string {\n    // Create a unique ID from the URL\n    const hash = Buffer.from(url).toString('base64');\n    return hash.replace(/[^a-zA-Z0-9]/g, '').substring(0, 20);\n  }\n\n  private extractGradeFromText(text: string): { min: number; max: number } {\n    const gradeMatch = text.match(/grade\\s*(\\d+)(?:\\s*-\\s*(\\d+))?|(\\d+)(?:st|nd|rd|th)\\s*grade/i);\n    \n    if (gradeMatch) {\n      const grade1 = parseInt(gradeMatch[1] || gradeMatch[3]);\n      const grade2 = gradeMatch[2] ? parseInt(gradeMatch[2]) : grade1;\n      \n      return {\n        min: Math.min(grade1, grade2),\n        max: Math.max(grade1, grade2),\n      };\n    }\n\n    // Default for elementary\n    return { min: 1, max: 8 };\n  }\n\n  private inferSubject(text: string): string {\n    const lowerText = text.toLowerCase();\n    \n    if (lowerText.includes('math') || lowerText.includes('number') || lowerText.includes('calculation')) {\n      return 'mathematics';\n    }\n    if (lowerText.includes('science') || lowerText.includes('experiment') || lowerText.includes('biology')) {\n      return 'science';\n    }\n    if (lowerText.includes('english') || lowerText.includes('reading') || lowerText.includes('writing')) {\n      return 'english';\n    }\n    if (lowerText.includes('french') || lowerText.includes('français')) {\n      return 'french';\n    }\n    if (lowerText.includes('history') || lowerText.includes('geography') || lowerText.includes('social')) {\n      return 'social-studies';\n    }\n    if (lowerText.includes('art') || lowerText.includes('music') || lowerText.includes('drama')) {\n      return 'arts';\n    }\n    if (lowerText.includes('physical') || lowerText.includes('pe') || lowerText.includes('sport')) {\n      return 'physical-education';\n    }\n\n    return 'general';\n  }\n\n  private inferTypeFromTitle(title: string): string {\n    const lowerTitle = title.toLowerCase();\n    \n    if (lowerTitle.includes('worksheet') || lowerTitle.includes('printable')) {\n      return 'worksheet';\n    }\n    if (lowerTitle.includes('game') || lowerTitle.includes('activity')) {\n      return 'game';\n    }\n    if (lowerTitle.includes('lesson') || lowerTitle.includes('plan')) {\n      return 'lesson_plan';\n    }\n    if (lowerTitle.includes('video') || lowerTitle.includes('watch')) {\n      return 'video';\n    }\n    if (lowerTitle.includes('experiment') || lowerTitle.includes('investigation')) {\n      return 'experiment';\n    }\n\n    return 'worksheet';\n  }\n\n  private estimateDuration(activity: EducationalActivity): number {\n    const text = (activity.title + ' ' + (activity.description || '')).toLowerCase();\n    \n    // Look for explicit duration mentions\n    const durationMatch = text.match(/(\\d+)\\s*(?:minutes?|mins?|hours?)/i);\n    if (durationMatch) {\n      const value = parseInt(durationMatch[1]);\n      const unit = durationMatch[0].toLowerCase();\n      \n      if (unit.includes('hour')) {\n        return value * 60;\n      }\n      return value;\n    }\n\n    // Estimate based on activity type\n    if (activity.type === 'video') return 10;\n    if (activity.type === 'game') return 20;\n    if (activity.type === 'worksheet') return 25;\n    if (activity.type === 'lesson_plan') return 45;\n    if (activity.type === 'experiment') return 60;\n\n    return 30; // Default\n  }\n\n}"],"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","ignoreList":[]}