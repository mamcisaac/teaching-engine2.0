{"version":3,"names":["filterAvailableBlocksByCalendar","slots","events","unavailable","cov_23bjedf94e","b","holidays","f","s","filter","subjectId","slot","holidayEvents","h","eventType","allDay","some","Date","start","getUTCDay","day","dayEvents","e","every","ev","getUTCHours","getUTCMinutes","end","startMin","endMin","dayBlocks","date","map","slotId","id","scheduleBufferBlockPerDay","schedule","blocks","preserve","byDay","Map","has","set","get","push","result","entries","used","Set","free","find","activityId","idx","i","pop","removed","index","splice","generateWeeklySchedule","_opts","console","warn","generateSuggestions","_options"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/planningEngine.ts"],"sourcesContent":["import type { CalendarEvent, UnavailableBlock } from '@teaching-engine/database';\n\nexport interface ScheduleItem {\n  day: number;\n  slotId: number;\n  activityId: number | null;\n}\n\nexport interface DailyBlock {\n  day: number;\n  slotId: number;\n  startMin: number;\n  endMin: number;\n  subjectId?: number | null;\n}\n\nexport interface GenerateScheduleOptions {\n  availableBlocks: DailyBlock[];\n  milestonePriorities: Map<number, number>;\n  pacingStrategy: 'strict' | 'relaxed';\n  preserveBuffer: boolean;\n}\n\nexport function filterAvailableBlocksByCalendar(\n  slots: Array<{\n    id: number;\n    day: number;\n    startMin: number;\n    endMin: number;\n    subjectId: number | null;\n  }>,\n  events: CalendarEvent[],\n  unavailable: UnavailableBlock[] = [],\n  holidays: CalendarEvent[] = [], // Now using CalendarEvent with type 'HOLIDAY'\n): DailyBlock[] {\n  return slots\n    .filter((s) => s.subjectId)\n    .filter((slot) => {\n      // Filter out holidays (CalendarEvents with type 'HOLIDAY' and allDay true)\n      const holidayEvents = holidays.filter(h => h.eventType === 'HOLIDAY' && h.allDay);\n      return !holidayEvents.some((h) => (new Date(h.start).getUTCDay() + 6) % 7 === slot.day);\n    })\n    .filter((slot) => {\n      const dayEvents = events.filter((e) => (new Date(e.start).getUTCDay() + 6) % 7 === slot.day);\n      return dayEvents.every((ev) => {\n        const start = ev.allDay\n          ? 0\n          : new Date(ev.start).getUTCHours() * 60 + new Date(ev.start).getUTCMinutes();\n        const end = ev.allDay\n          ? 1440\n          : new Date(ev.end).getUTCHours() * 60 + new Date(ev.end).getUTCMinutes();\n        return end <= slot.startMin || start >= slot.endMin;\n      });\n    })\n    .filter((slot) => {\n      const dayBlocks = unavailable.filter(\n        (b) => (new Date(b.date).getUTCDay() + 6) % 7 === slot.day,\n      );\n      return dayBlocks.every((b) => b.endMin <= slot.startMin || b.startMin >= slot.endMin);\n    })\n    .map((s) => ({\n      day: s.day,\n      slotId: s.id,\n      startMin: s.startMin,\n      endMin: s.endMin,\n      subjectId: s.subjectId,\n    }));\n}\n\nexport function scheduleBufferBlockPerDay(\n  schedule: ScheduleItem[],\n  blocks: DailyBlock[],\n  preserve: boolean,\n): ScheduleItem[] {\n  if (!preserve) return schedule;\n  const byDay = new Map<number, DailyBlock[]>();\n  for (const b of blocks) {\n    if (!byDay.has(b.day)) byDay.set(b.day, []);\n    byDay.get(b.day)!.push(b);\n  }\n\n  const result = [...schedule];\n  for (const [day, dayBlocks] of byDay.entries()) {\n    const used = new Set(result.filter((s) => s.day === day).map((s) => s.slotId));\n    const free = dayBlocks.find((b) => !used.has(b.slotId));\n    if (free) {\n      result.push({ day, slotId: free.slotId, activityId: null });\n    } else {\n      const idx = result\n        .map((s, i) => [s, i] as const)\n        .filter(([s]) => s.day === day)\n        .pop();\n      if (idx) {\n        const [removed, index] = idx;\n        result.splice(index, 1);\n        result.push({ day, slotId: removed.slotId, activityId: null });\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * TODO: Reimplement using ETFO lesson plans\n * Generate a weekly schedule using ETFO lesson plans and unit plans\n * @param opts Schedule generation options\n * @returns Array of scheduled items mapped to ETFO lesson plans\n */\nexport async function generateWeeklySchedule(\n  _opts: GenerateScheduleOptions,\n): Promise<ScheduleItem[]> {\n  // TODO: Implement scheduling logic using:\n  // - ETFOLessonPlan model for individual lessons\n  // - UnitPlan model for unit-level scheduling\n  // - DayPlan model for daily organization\n  console.warn('generateWeeklySchedule pending reimplementation with ETFO planning models');\n  return [];\n}\n\n/**\n * TODO: Reimplement using ETFO lesson plans and Activity Discovery\n * Generate activity suggestions based on curriculum alignment\n * @param options Filter options for suggestions\n * @returns Array of suggested activities from Activity Discovery service\n */\nexport async function generateSuggestions(\n  _options: { filters?: Record<string, boolean> } = {},\n): Promise<Array<unknown>> {\n  // TODO: Implement suggestion logic using:\n  // - Activity Discovery service for external activities\n  // - ExternalActivity model for activity suggestions\n  // - CurriculumExpectation model for alignment\n  console.warn('generateSuggestions pending reimplementation with Activity Discovery service');\n  return [];\n}\n"],"mappingsuBA,OAAM,SAAUA,+BAA+BA,CAC7CC,KAME,EACFC,MAAuB,EACvBC,WAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,UAAkC,EAAE,GACpCC,QAAA;AAAA;AAAA,CAAAF,cAAA,GAAAC,CAAA,UAA4B,EAAE;EAAA;EAAAD,cAAA,GAAAG,CAAA;EAAAH,cAAA,GAAAI,CAAA;EAE9B,OAAOP,KAAK,CACTQ,MAAM,CAAED,CAAC,IAAK;IAAA;IAAAJ,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IAAA,OAAAA,CAAC,CAACE,SAAS;EAAT,CAAS,CAAC,CAC1BD,MAAM,CAAEE,IAAI,IAAI;IAAA;IAAAP,cAAA,GAAAG,CAAA;IACf;IACA,MAAMK,aAAa;IAAA;IAAA,CAAAR,cAAA,GAAAI,CAAA,OAAGF,QAAQ,CAACG,MAAM,CAACI,CAAC,IAAI;MAAA;MAAAT,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAAA,kCAAAJ,cAAA,GAAAC,CAAA,UAAAQ,CAAC,CAACC,SAAS,KAAK,SAAS;MAAA;MAAA,CAAAV,cAAA,GAAAC,CAAA,UAAIQ,CAAC,CAACE,MAAM;IAAN,CAAM,CAAC;IAAC;IAAAX,cAAA,GAAAI,CAAA;IAClF,OAAO,CAACI,aAAa,CAACI,IAAI,CAAEH,CAAC,IAAK;MAAA;MAAAT,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAAA,QAAC,IAAIS,IAAI,CAACJ,CAAC,CAACK,KAAK,CAAC,CAACC,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,KAAKR,IAAI,CAACS,GAAG;IAAH,CAAG,CAAC;EACzF,CAAC,CAAC,CACDX,MAAM,CAAEE,IAAI,IAAI;IAAA;IAAAP,cAAA,GAAAG,CAAA;IACf,MAAMc,SAAS;IAAA;IAAA,CAAAjB,cAAA,GAAAI,CAAA,OAAGN,MAAM,CAACO,MAAM,CAAEa,CAAC,IAAK;MAAA;MAAAlB,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAAA,QAAC,IAAIS,IAAI,CAACK,CAAC,CAACJ,KAAK,CAAC,CAACC,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,KAAKR,IAAI,CAACS,GAAG;IAAH,CAAG,CAAC;IAAC;IAAAhB,cAAA,GAAAI,CAAA;IAC7F,OAAOa,SAAS,CAACE,KAAK,CAAEC,EAAE,IAAI;MAAA;MAAApB,cAAA,GAAAG,CAAA;MAC5B,MAAMW,KAAK;MAAA;MAAA,CAAAd,cAAA,GAAAI,CAAA,OAAGgB,EAAE,CAACT,MAAM;MAAA;MAAA,CAAAX,cAAA,GAAAC,CAAA,UACnB,CAAC;MAAA;MAAA,CAAAD,cAAA,GAAAC,CAAA,UACD,IAAIY,IAAI,CAACO,EAAE,CAACN,KAAK,CAAC,CAACO,WAAW,EAAE,GAAG,EAAE,GAAG,IAAIR,IAAI,CAACO,EAAE,CAACN,KAAK,CAAC,CAACQ,aAAa,EAAE;MAC9E,MAAMC,GAAG;MAAA;MAAA,CAAAvB,cAAA,GAAAI,CAAA,QAAGgB,EAAE,CAACT,MAAM;MAAA;MAAA,CAAAX,cAAA,GAAAC,CAAA,UACjB,IAAI;MAAA;MAAA,CAAAD,cAAA,GAAAC,CAAA,UACJ,IAAIY,IAAI,CAACO,EAAE,CAACG,GAAG,CAAC,CAACF,WAAW,EAAE,GAAG,EAAE,GAAG,IAAIR,IAAI,CAACO,EAAE,CAACG,GAAG,CAAC,CAACD,aAAa,EAAE;MAAC;MAAAtB,cAAA,GAAAI,CAAA;MAC3E,OAAO,2BAAAJ,cAAA,GAAAC,CAAA,UAAAsB,GAAG,IAAIhB,IAAI,CAACiB,QAAQ;MAAA;MAAA,CAAAxB,cAAA,GAAAC,CAAA,UAAIa,KAAK,IAAIP,IAAI,CAACkB,MAAM;IACrD,CAAC,CAAC;EACJ,CAAC,CAAC,CACDpB,MAAM,CAAEE,IAAI,IAAI;IAAA;IAAAP,cAAA,GAAAG,CAAA;IACf,MAAMuB,SAAS;IAAA;IAAA,CAAA1B,cAAA,GAAAI,CAAA,QAAGL,WAAW,CAACM,MAAM,CACjCJ,CAAC,IAAK;MAAA;MAAAD,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAAA,QAAC,IAAIS,IAAI,CAACZ,CAAC,CAAC0B,IAAI,CAAC,CAACZ,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,KAAKR,IAAI,CAACS,GAAG;IAAH,CAAG,CAC3D;IAAC;IAAAhB,cAAA,GAAAI,CAAA;IACF,OAAOsB,SAAS,CAACP,KAAK,CAAElB,CAAC,IAAK;MAAA;MAAAD,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAAA,kCAAAJ,cAAA,GAAAC,CAAA,UAAAA,CAAC,CAACwB,MAAM,IAAIlB,IAAI,CAACiB,QAAQ;MAAA;MAAA,CAAAxB,cAAA,GAAAC,CAAA,UAAIA,CAAC,CAACuB,QAAQ,IAAIjB,IAAI,CAACkB,MAAM;IAAN,CAAM,CAAC;EACvF,CAAC,CAAC,CACDG,GAAG,CAAExB,CAAC,IAAM;IAAA;IAAAJ,cAAA,GAAAG,CAAA;IAAAH,cAAA,GAAAI,CAAA;IAAA;MACXY,GAAG,EAAEZ,CAAC,CAACY,GAAG;MACVa,MAAM,EAAEzB,CAAC,CAAC0B,EAAE;MACZN,QAAQ,EAAEpB,CAAC,CAACoB,QAAQ;MACpBC,MAAM,EAAErB,CAAC,CAACqB,MAAM;MAChBnB,SAAS,EAAEF,CAAC,CAACE;KACd;GAAC,CAAC;AACP;AAEA,OAAM,SAAUyB,yBAAyBA,CACvCC,QAAwB,EACxBC,MAAoB,EACpBC,QAAiB;EAAA;EAAAlC,cAAA,GAAAG,CAAA;EAAAH,cAAA,GAAAI,CAAA;EAEjB,IAAI,CAAC8B,QAAQ,EAAE;IAAA;IAAAlC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAI,CAAA;IAAA,OAAO4B,QAAQ;EAAA,CAAC;EAAA;EAAA;IAAAhC,cAAA,GAAAC,CAAA;EAAA;EAC/B,MAAMkC,KAAK;EAAA;EAAA,CAAAnC,cAAA,GAAAI,CAAA,QAAG,IAAIgC,GAAG,EAAwB;EAAC;EAAApC,cAAA,GAAAI,CAAA;EAC9C,KAAK,MAAMH,CAAC,IAAIgC,MAAM,EAAE;IAAA;IAAAjC,cAAA,GAAAI,CAAA;IACtB,IAAI,CAAC+B,KAAK,CAACE,GAAG,CAACpC,CAAC,CAACe,GAAG,CAAC,EAAE;MAAA;MAAAhB,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAI,CAAA;MAAA+B,KAAK,CAACG,GAAG,CAACrC,CAAC,CAACe,GAAG,EAAE,EAAE,CAAC;IAAA,CAAC;IAAA;IAAA;MAAAhB,cAAA,GAAAC,CAAA;IAAA;IAAAD,cAAA,GAAAI,CAAA;IAC5C+B,KAAK,CAACI,GAAG,CAACtC,CAAC,CAACe,GAAG,CAAE,CAACwB,IAAI,CAACvC,CAAC,CAAC;EAC3B;EAEA,MAAMwC,MAAM;EAAA;EAAA,CAAAzC,cAAA,GAAAI,CAAA,QAAG,CAAC,GAAG4B,QAAQ,CAAC;EAAC;EAAAhC,cAAA,GAAAI,CAAA;EAC7B,KAAK,MAAM,CAACY,GAAG,EAAEU,SAAS,CAAC,IAAIS,KAAK,CAACO,OAAO,EAAE,EAAE;IAC9C,MAAMC,IAAI;IAAA;IAAA,CAAA3C,cAAA,GAAAI,CAAA,QAAG,IAAIwC,GAAG,CAACH,MAAM,CAACpC,MAAM,CAAED,CAAC,IAAK;MAAA;MAAAJ,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAAA,OAAAA,CAAC,CAACY,GAAG,KAAKA,GAAG;IAAH,CAAG,CAAC,CAACY,GAAG,CAAExB,CAAC,IAAK;MAAA;MAAAJ,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAAA,OAAAA,CAAC,CAACyB,MAAM;IAAN,CAAM,CAAC,CAAC;IAC9E,MAAMgB,IAAI;IAAA;IAAA,CAAA7C,cAAA,GAAAI,CAAA,QAAGsB,SAAS,CAACoB,IAAI,CAAE7C,CAAC,IAAK;MAAA;MAAAD,cAAA,GAAAG,CAAA;MAAAH,cAAA,GAAAI,CAAA;MAAA,QAACuC,IAAI,CAACN,GAAG,CAACpC,CAAC,CAAC4B,MAAM,CAAC;IAAD,CAAC,CAAC;IAAC;IAAA7B,cAAA,GAAAI,CAAA;IACxD,IAAIyC,IAAI,EAAE;MAAA;MAAA7C,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAI,CAAA;MACRqC,MAAM,CAACD,IAAI,CAAC;QAAExB,GAAG;QAAEa,MAAM,EAAEgB,IAAI,CAAChB,MAAM;QAAEkB,UAAU,EAAE;MAAI,CAAE,CAAC;IAC7D,CAAC,MAAM;MAAA;MAAA/C,cAAA,GAAAC,CAAA;MACL,MAAM+C,GAAG;MAAA;MAAA,CAAAhD,cAAA,GAAAI,CAAA,QAAGqC,MAAM,CACfb,GAAG,CAAC,CAACxB,CAAC,EAAE6C,CAAC,KAAK;QAAA;QAAAjD,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QAAA,QAACA,CAAC,EAAE6C,CAAC,CAAU;MAAV,CAAU,CAAC,CAC9B5C,MAAM,CAAC,CAAC,CAACD,CAAC,CAAC,KAAK;QAAA;QAAAJ,cAAA,GAAAG,CAAA;QAAAH,cAAA,GAAAI,CAAA;QAAA,OAAAA,CAAC,CAACY,GAAG,KAAKA,GAAG;MAAH,CAAG,CAAC,CAC9BkC,GAAG,EAAE;MAAC;MAAAlD,cAAA,GAAAI,CAAA;MACT,IAAI4C,GAAG,EAAE;QAAA;QAAAhD,cAAA,GAAAC,CAAA;QACP,MAAM,CAACkD,OAAO,EAAEC,KAAK,CAAC;QAAA;QAAA,CAAApD,cAAA,GAAAI,CAAA,QAAG4C,GAAG;QAAC;QAAAhD,cAAA,GAAAI,CAAA;QAC7BqC,MAAM,CAACY,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;QAAC;QAAApD,cAAA,GAAAI,CAAA;QACxBqC,MAAM,CAACD,IAAI,CAAC;UAAExB,GAAG;UAAEa,MAAM,EAAEsB,OAAO,CAACtB,MAAM;UAAEkB,UAAU,EAAE;QAAI,CAAE,CAAC;MAChE,CAAC;MAAA;MAAA;QAAA/C,cAAA,GAAAC,CAAA;MAAA;IACH;EACF;EAAC;EAAAD,cAAA,GAAAI,CAAA;EACD,OAAOqC,MAAM;AACf;AAEA;;;;;;AAMA,OAAO,eAAea,sBAAsBA,CAC1CC,KAA8B;EAAA;EAAAvD,cAAA,GAAAG,CAAA;EAAAH,cAAA,GAAAI,CAAA;EAE9B;EACA;EACA;EACA;EACAoD,OAAO,CAACC,IAAI,CAAC,2EAA2E,CAAC;EAAC;EAAAzD,cAAA,GAAAI,CAAA;EAC1F,OAAO,EAAE;AACX;AAEA;;;;;;AAMA,OAAO,eAAesD,mBAAmBA,CACvCC,QAAA;AAAA;AAAA,CAAA3D,cAAA,GAAAC,CAAA,WAAkD,EAAE;EAAA;EAAAD,cAAA,GAAAG,CAAA;EAAAH,cAAA,GAAAI,CAAA;EAEpD;EACA;EACA;EACA;EACAoD,OAAO,CAACC,IAAI,CAAC,8EAA8E,CAAC;EAAC;EAAAzD,cAAA,GAAAI,CAAA;EAC7F,OAAO,EAAE;AACX","ignoreList":[]}