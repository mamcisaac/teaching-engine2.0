{"version":3,"names":["prisma","generateParentSummary","request","cov_2bup30r7j4","f","studentId","from","to","focus","userId","s","student","findFirst","where","id","include","goals","createdAt","gte","lte","reflections","date","b","Error","activities","_assessments","summaryData","studentName","firstName","lastName","period","length","outcomes","Set","flatMap","a","map","o","outcome","code","subjects","_a","assessments","french","generateFrenchSummary","english","generateEnglishSummary","error","console","data","summary","join","slice"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/aiParentSummaryService.ts"],"sourcesContent":["import { prisma } from '../prisma';\n\nexport interface ParentSummaryRequest {\n  studentId: number;\n  from: Date;\n  to: Date;\n  focus?: string[];\n  userId: number;\n}\n\nexport interface ParentSummaryResponse {\n  french: string;\n  english: string;\n}\n\n/**\n * Generate AI-based parent summary for a student\n */\nexport async function generateParentSummary(\n  request: ParentSummaryRequest,\n): Promise<ParentSummaryResponse> {\n  const { studentId, from, to, focus, userId } = request;\n\n  try {\n    // Get student information\n    const student = await prisma.student.findFirst({\n      where: {\n        id: studentId,\n        userId: userId,\n      },\n      include: {\n        goals: {\n          where: {\n            createdAt: {\n              gte: from,\n              lte: to,\n            },\n          },\n        },\n        reflections: {\n          where: {\n            date: {\n              gte: from,\n              lte: to,\n            },\n          },\n        },\n      },\n    });\n\n    if (!student) {\n      throw new Error('Student not found');\n    }\n\n    // TODO: Replace with ETFO lesson plan data\n    // Fetch lesson plans and activities from the ETFO planning system\n    const activities: Array<{\n      outcomes?: Array<{\n        outcome: { id: string; code: string; description: string; subject: string };\n      }>;\n    }> = [];\n\n    // TODO: Implement assessment tracking\n    // Assessment data will be integrated with ETFO lesson plans\n    const _assessments: Array<Record<string, unknown>> = [];\n\n    // Generate summary based on collected data\n    const summaryData = {\n      studentName: `${student.firstName} ${student.lastName}`,\n      period: { from, to },\n      focus: focus || [],\n      activities: activities.length,\n      outcomes: [\n        ...new Set(activities.flatMap((a) => a.outcomes?.map((o) => o.outcome?.code) || [])),\n      ],\n      subjects: [...new Set(activities.map((_a) => 'General'))], // TODO: Extract subjects from ETFO lesson plans\n      goals: student.goals?.length || 0,\n      reflections: student.reflections?.length || 0,\n      assessments: 0,\n    };\n\n    // For now, generate basic rule-based summaries\n    // In future versions, this would use OpenAI or similar AI service\n    const french = generateFrenchSummary(summaryData);\n    const english = generateEnglishSummary(summaryData);\n\n    return { french, english };\n  } catch (error) {\n    console.error('Error generating parent summary:', error);\n    throw new Error('Failed to generate parent summary');\n  }\n}\n\ninterface SummaryData {\n  studentName: string;\n  period: { from: Date; to: Date };\n  focus: string[];\n  activities: number;\n  outcomes: string[];\n  subjects: string[];\n  goals: number;\n  reflections: number;\n  assessments: number;\n}\n\nfunction generateFrenchSummary(data: SummaryData): string {\n  const { studentName, activities, outcomes, subjects, goals, reflections } = data;\n\n  let summary = `Au cours de cette période, ${studentName} a participé activement à ${activities} activités d'apprentissage`;\n\n  if (subjects.length > 0) {\n    summary += ` dans les matières suivantes : ${subjects.join(', ')}`;\n  }\n\n  summary += '. ';\n\n  if (outcomes.length > 0) {\n    summary += `Les apprentissages ont couvert ${outcomes.length} objectifs du curriculum, incluant ${outcomes.slice(0, 3).join(', ')}`;\n    if (outcomes.length > 3) {\n      summary += ` et ${outcomes.length - 3} autres objectifs`;\n    }\n    summary += '. ';\n  }\n\n  if (goals > 0) {\n    summary += `${studentName} a travaillé sur ${goals} objectifs personnalisés d'apprentissage. `;\n  }\n\n  if (reflections > 0) {\n    summary += `L'élève a également participé à ${reflections} réflexions sur son apprentissage, démontrant une capacité croissante d'autoévaluation. `;\n  }\n\n  summary += `${studentName} continue de progresser dans son développement académique et personnel.`;\n\n  return summary;\n}\n\nfunction generateEnglishSummary(data: SummaryData): string {\n  const { studentName, activities, outcomes, subjects, goals, reflections } = data;\n\n  let summary = `During this period, ${studentName} actively participated in ${activities} learning activities`;\n\n  if (subjects.length > 0) {\n    summary += ` across the following subjects: ${subjects.join(', ')}`;\n  }\n\n  summary += '. ';\n\n  if (outcomes.length > 0) {\n    summary += `The learning covered ${outcomes.length} curriculum outcomes, including ${outcomes.slice(0, 3).join(', ')}`;\n    if (outcomes.length > 3) {\n      summary += ` and ${outcomes.length - 3} additional outcomes`;\n    }\n    summary += '. ';\n  }\n\n  if (goals > 0) {\n    summary += `${studentName} worked toward ${goals} personalized learning goals. `;\n  }\n\n  if (reflections > 0) {\n    summary += `The student also engaged in ${reflections} learning reflections, demonstrating growing self-assessment abilities. `;\n  }\n\n  summary += `${studentName} continues to make progress in both academic and personal development.`;\n\n  return summary;\n}\n"],"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","ignoreList":[]}