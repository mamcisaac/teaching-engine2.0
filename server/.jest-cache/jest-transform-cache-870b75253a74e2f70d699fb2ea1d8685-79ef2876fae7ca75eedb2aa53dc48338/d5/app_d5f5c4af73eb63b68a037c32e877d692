b578a4c8a35945c760c590b8978cd684
/* istanbul ignore next */
function cov_2gj251ahmm() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/app.ts";
  var hash = "f7984482e8bfe40a41735e5c565ccdca3893c08f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/app.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 25
        }
      },
      "1": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 18,
          column: 8
        }
      },
      "2": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 28
        }
      },
      "3": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "4": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "5": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 7
        }
      },
      "6": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 72
        }
      },
      "7": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 45
        }
      },
      "8": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 45
        }
      },
      "9": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 7
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 59
        }
      },
      "11": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 26
        }
      },
      "12": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "13": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 51
        }
      },
      "14": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 37
        }
      },
      "15": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "17": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "18": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 51,
          column: 18
        }
      },
      "19": {
        start: {
          line: 53,
          column: 17
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "20": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 58,
          column: 18
        }
      },
      "21": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "22": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "createApp",
        decl: {
          start: {
            line: 12,
            column: 16
          },
          end: {
            line: 12,
            column: 25
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 24,
            column: 24
          }
        },
        loc: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 13
          }
        },
        loc: {
          start: {
            line: 31,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "3": {
        name: "createTestApp",
        decl: {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 35
          }
        },
        loc: {
          start: {
            line: 38,
            column: 44
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        loc: {
          start: {
            line: 44,
            column: 36
          },
          end: {
            line: 61,
            column: 9
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 42
          },
          end: {
            line: 16,
            column: 65
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 29
          }
        }, {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 40,
            column: 51
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/app.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/app.ts"],
      sourcesContent: ["/**\n * Express Application Factory\n * Creates and configures the Express application\n */\n\nimport express, { Express } from 'express';\nimport cors from 'cors';\nimport { PrismaClient } from '@teaching-engine/database';\nimport { errorHandler } from '@/middleware/errorHandler';\nimport { rateLimiters } from '@/middleware/rateLimiter';\nimport { authRoutes } from '@/routes/auth';\nimport { userRoutes } from '@/routes/user';\n\nexport function createApp(prisma: PrismaClient): Express {\n  const app = express();\n\n  // Middleware\n  app.use(\n    cors({\n      origin: process.env.CLIENT_URL || 'http://localhost:5173',\n      credentials: true,\n    }),\n  );\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: true }));\n\n  // Rate limiting\n  app.use('/api/auth', rateLimiters.auth);\n\n  // Health check\n  app.get('/health', (req, res) => {\n    res.json({ status: 'ok', timestamp: new Date().toISOString() });\n  });\n\n  // Routes\n  app.use('/api/auth', authRoutes(prisma));\n  app.use('/api/user', userRoutes(prisma));\n\n  // 404 handler\n  app.use((req, res) => {\n    res.status(404).json({ error: 'Route not found' });\n  });\n\n  // Error handler\n  app.use(errorHandler);\n\n  return app;\n}\n\nexport async function createTestApp(prisma?: PrismaClient): Promise<Express> {\n  // Use provided prisma or create a mock\n  const testPrisma = prisma || new PrismaClient();\n\n  const app = createApp(testPrisma);\n\n  // Add test-specific middleware\n  if (process.env.NODE_ENV === 'test') {\n    app.use((req, res, next) => {\n      // Mock authentication for testing\n      if (req.headers.authorization === 'Bearer valid.jwt.token') {\n        req.user = {\n          id: 123,\n          userId: '123',\n          email: 'test@example.com',\n        };\n      } else if (req.headers.authorization === 'Bearer admin.token') {\n        req.user = {\n          id: 456,\n          userId: '456',\n          email: 'admin@example.com',\n        };\n      }\n      next();\n    });\n  }\n\n  return app;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f7984482e8bfe40a41735e5c565ccdca3893c08f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2gj251ahmm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2gj251ahmm();
/**
 * Express Application Factory
 * Creates and configures the Express application
 */
import express from 'express';
import cors from 'cors';
import { PrismaClient } from '@teaching-engine/database';
import { errorHandler } from '@/middleware/errorHandler';
import { rateLimiters } from '@/middleware/rateLimiter';
import { authRoutes } from '@/routes/auth';
import { userRoutes } from '@/routes/user';
export function createApp(prisma) {
  /* istanbul ignore next */
  cov_2gj251ahmm().f[0]++;
  const app =
  /* istanbul ignore next */
  (cov_2gj251ahmm().s[0]++, express());
  // Middleware
  /* istanbul ignore next */
  cov_2gj251ahmm().s[1]++;
  app.use(cors({
    origin:
    /* istanbul ignore next */
    (cov_2gj251ahmm().b[0][0]++, process.env.CLIENT_URL) ||
    /* istanbul ignore next */
    (cov_2gj251ahmm().b[0][1]++, 'http://localhost:5173'),
    credentials: true
  }));
  /* istanbul ignore next */
  cov_2gj251ahmm().s[2]++;
  app.use(express.json());
  /* istanbul ignore next */
  cov_2gj251ahmm().s[3]++;
  app.use(express.urlencoded({
    extended: true
  }));
  // Rate limiting
  /* istanbul ignore next */
  cov_2gj251ahmm().s[4]++;
  app.use('/api/auth', rateLimiters.auth);
  // Health check
  /* istanbul ignore next */
  cov_2gj251ahmm().s[5]++;
  app.get('/health', (req, res) => {
    /* istanbul ignore next */
    cov_2gj251ahmm().f[1]++;
    cov_2gj251ahmm().s[6]++;
    res.json({
      status: 'ok',
      timestamp: new Date().toISOString()
    });
  });
  // Routes
  /* istanbul ignore next */
  cov_2gj251ahmm().s[7]++;
  app.use('/api/auth', authRoutes(prisma));
  /* istanbul ignore next */
  cov_2gj251ahmm().s[8]++;
  app.use('/api/user', userRoutes(prisma));
  // 404 handler
  /* istanbul ignore next */
  cov_2gj251ahmm().s[9]++;
  app.use((req, res) => {
    /* istanbul ignore next */
    cov_2gj251ahmm().f[2]++;
    cov_2gj251ahmm().s[10]++;
    res.status(404).json({
      error: 'Route not found'
    });
  });
  // Error handler
  /* istanbul ignore next */
  cov_2gj251ahmm().s[11]++;
  app.use(errorHandler);
  /* istanbul ignore next */
  cov_2gj251ahmm().s[12]++;
  return app;
}
export async function createTestApp(prisma) {
  /* istanbul ignore next */
  cov_2gj251ahmm().f[3]++;
  // Use provided prisma or create a mock
  const testPrisma =
  /* istanbul ignore next */
  (cov_2gj251ahmm().s[13]++,
  /* istanbul ignore next */
  (cov_2gj251ahmm().b[1][0]++, prisma) ||
  /* istanbul ignore next */
  (cov_2gj251ahmm().b[1][1]++, new PrismaClient()));
  const app =
  /* istanbul ignore next */
  (cov_2gj251ahmm().s[14]++, createApp(testPrisma));
  // Add test-specific middleware
  /* istanbul ignore next */
  cov_2gj251ahmm().s[15]++;
  if (process.env.NODE_ENV === 'test') {
    /* istanbul ignore next */
    cov_2gj251ahmm().b[2][0]++;
    cov_2gj251ahmm().s[16]++;
    app.use((req, res, next) => {
      /* istanbul ignore next */
      cov_2gj251ahmm().f[4]++;
      cov_2gj251ahmm().s[17]++;
      // Mock authentication for testing
      if (req.headers.authorization === 'Bearer valid.jwt.token') {
        /* istanbul ignore next */
        cov_2gj251ahmm().b[3][0]++;
        cov_2gj251ahmm().s[18]++;
        req.user = {
          id: 123,
          userId: '123',
          email: 'test@example.com'
        };
      } else {
        /* istanbul ignore next */
        cov_2gj251ahmm().b[3][1]++;
        cov_2gj251ahmm().s[19]++;
        if (req.headers.authorization === 'Bearer admin.token') {
          /* istanbul ignore next */
          cov_2gj251ahmm().b[4][0]++;
          cov_2gj251ahmm().s[20]++;
          req.user = {
            id: 456,
            userId: '456',
            email: 'admin@example.com'
          };
        } else
        /* istanbul ignore next */
        {
          cov_2gj251ahmm().b[4][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2gj251ahmm().s[21]++;
      next();
    });
  } else
  /* istanbul ignore next */
  {
    cov_2gj251ahmm().b[2][1]++;
  }
  cov_2gj251ahmm().s[22]++;
  return app;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,