5a1bd538471fd03c417c39a9b1ba673c
/* istanbul ignore next */
function cov_11b0oto8k7() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/etfo-lesson-plans.ts";
  var hash = "3c1deed7dc7721168fb4b895ef481d79f7bf6e4b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/etfo-lesson-plans.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 23
        }
      },
      "1": {
        start: {
          line: 7,
          column: 31
        },
        end: {
          line: 31,
          column: 2
        }
      },
      "2": {
        start: {
          line: 32,
          column: 31
        },
        end: {
          line: 32,
          column: 90
        }
      },
      "3": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "4": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "5": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 36,
          column: 40
        }
      },
      "6": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "7": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 67
        }
      },
      "8": {
        start: {
          line: 40,
          column: 66
        },
        end: {
          line: 40,
          column: 75
        }
      },
      "9": {
        start: {
          line: 41,
          column: 22
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "10": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 43,
          column: 50
        }
      },
      "11": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 50
        }
      },
      "12": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 45,
          column: 59
        }
      },
      "13": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 59
        }
      },
      "14": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "15": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 28
        }
      },
      "16": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 49,
          column: 61
        }
      },
      "17": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 61
        }
      },
      "18": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 51,
          column: 59
        }
      },
      "19": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 59
        }
      },
      "20": {
        start: {
          line: 53,
          column: 28
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "21": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 30
        }
      },
      "22": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 19
        }
      },
      "23": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 130,
          column: 3
        }
      },
      "24": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "25": {
        start: {
          line: 93,
          column: 23
        },
        end: {
          line: 93,
          column: 40
        }
      },
      "26": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "27": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 67
        }
      },
      "28": {
        start: {
          line: 97,
          column: 27
        },
        end: {
          line: 121,
          column: 10
        }
      },
      "29": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "30": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 76
        }
      },
      "31": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 29
        }
      },
      "32": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 19
        }
      },
      "33": {
        start: {
          line: 132,
          column: 0
        },
        end: {
          line: 231,
          column: 3
        }
      },
      "34": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "35": {
        start: {
          line: 134,
          column: 23
        },
        end: {
          line: 134,
          column: 40
        }
      },
      "36": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "37": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 67
        }
      },
      "38": {
        start: {
          line: 138,
          column: 102
        },
        end: {
          line: 138,
          column: 110
        }
      },
      "39": {
        start: {
          line: 140,
          column: 25
        },
        end: {
          line: 145,
          column: 10
        }
      },
      "40": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "41": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 74
        }
      },
      "42": {
        start: {
          line: 149,
          column: 27
        },
        end: {
          line: 179,
          column: 10
        }
      },
      "43": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "44": {
        start: {
          line: 183,
          column: 38
        },
        end: {
          line: 186,
          column: 14
        }
      },
      "45": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "46": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 192,
          column: 19
        }
      },
      "47": {
        start: {
          line: 191,
          column: 56
        },
        end: {
          line: 191,
          column: 60
        }
      },
      "48": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 199,
          column: 15
        }
      },
      "49": {
        start: {
          line: 195,
          column: 61
        },
        end: {
          line: 198,
          column: 17
        }
      },
      "50": {
        start: {
          line: 201,
          column: 32
        },
        end: {
          line: 223,
          column: 14
        }
      },
      "51": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 53
        }
      },
      "52": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 41
        }
      },
      "53": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 19
        }
      },
      "54": {
        start: {
          line: 233,
          column: 0
        },
        end: {
          line: 301,
          column: 3
        }
      },
      "55": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "56": {
        start: {
          line: 235,
          column: 23
        },
        end: {
          line: 235,
          column: 40
        }
      },
      "57": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "58": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 67
        }
      },
      "59": {
        start: {
          line: 239,
          column: 104
        },
        end: {
          line: 239,
          column: 112
        }
      },
      "60": {
        start: {
          line: 241,
          column: 25
        },
        end: {
          line: 243,
          column: 10
        }
      },
      "61": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "62": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 76
        }
      },
      "63": {
        start: {
          line: 248,
          column: 21
        },
        end: {
          line: 248,
          column: 38
        }
      },
      "64": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 250,
          column: 50
        }
      },
      "65": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 50
        }
      },
      "66": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 252,
          column: 39
        }
      },
      "67": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 39
        }
      },
      "68": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 254,
          column: 49
        }
      },
      "69": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 49
        }
      },
      "70": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 256,
          column: 47
        }
      },
      "71": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 47
        }
      },
      "72": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 258,
          column: 41
        }
      },
      "73": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 41
        }
      },
      "74": {
        start: {
          line: 260,
          column: 27
        },
        end: {
          line: 263,
          column: 10
        }
      },
      "75": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "76": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "77": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 278,
          column: 13
        }
      },
      "78": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 277,
          column: 19
        }
      },
      "79": {
        start: {
          line: 273,
          column: 65
        },
        end: {
          line: 276,
          column: 21
        }
      },
      "80": {
        start: {
          line: 281,
          column: 28
        },
        end: {
          line: 295,
          column: 10
        }
      },
      "81": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 30
        }
      },
      "82": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 19
        }
      },
      "83": {
        start: {
          line: 303,
          column: 0
        },
        end: {
          line: 332,
          column: 3
        }
      },
      "84": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 331,
          column: 5
        }
      },
      "85": {
        start: {
          line: 305,
          column: 23
        },
        end: {
          line: 305,
          column: 40
        }
      },
      "86": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "87": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 67
        }
      },
      "88": {
        start: {
          line: 310,
          column: 27
        },
        end: {
          line: 315,
          column: 10
        }
      },
      "89": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "90": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 76
        }
      },
      "91": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "92": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 322,
          column: 15
        }
      },
      "93": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 326,
          column: 11
        }
      },
      "94": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 30
        }
      },
      "95": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 19
        }
      },
      "96": {
        start: {
          line: 334,
          column: 0
        },
        end: {
          line: 365,
          column: 3
        }
      },
      "97": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 364,
          column: 5
        }
      },
      "98": {
        start: {
          line: 336,
          column: 23
        },
        end: {
          line: 336,
          column: 40
        }
      },
      "99": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 339,
          column: 9
        }
      },
      "100": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 338,
          column: 67
        }
      },
      "101": {
        start: {
          line: 340,
          column: 46
        },
        end: {
          line: 340,
          column: 54
        }
      },
      "102": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "103": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 82
        }
      },
      "104": {
        start: {
          line: 345,
          column: 27
        },
        end: {
          line: 347,
          column: 10
        }
      },
      "105": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "106": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 349,
          column: 76
        }
      },
      "107": {
        start: {
          line: 351,
          column: 25
        },
        end: {
          line: 359,
          column: 10
        }
      },
      "108": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 39
        }
      },
      "109": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 19
        }
      },
      "110": {
        start: {
          line: 367,
          column: 0
        },
        end: {
          line: 394,
          column: 3
        }
      },
      "111": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 393,
          column: 5
        }
      },
      "112": {
        start: {
          line: 369,
          column: 23
        },
        end: {
          line: 369,
          column: 40
        }
      },
      "113": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "114": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 67
        }
      },
      "115": {
        start: {
          line: 374,
          column: 25
        },
        end: {
          line: 382,
          column: 10
        }
      },
      "116": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "117": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 73
        }
      },
      "118": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 388,
          column: 11
        }
      },
      "119": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 30
        }
      },
      "120": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 19
        }
      },
      "121": {
        start: {
          line: 396,
          column: 0
        },
        end: {
          line: 437,
          column: 3
        }
      },
      "122": {
        start: {
          line: 397,
          column: 4
        },
        end: {
          line: 436,
          column: 5
        }
      },
      "123": {
        start: {
          line: 398,
          column: 23
        },
        end: {
          line: 398,
          column: 40
        }
      },
      "124": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "125": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 67
        }
      },
      "126": {
        start: {
          line: 402,
          column: 27
        },
        end: {
          line: 411,
          column: 10
        }
      },
      "127": {
        start: {
          line: 412,
          column: 8
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "128": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 76
        }
      },
      "129": {
        start: {
          line: 416,
          column: 27
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "130": {
        start: {
          line: 430,
          column: 58
        },
        end: {
          line: 430,
          column: 83
        }
      },
      "131": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 432,
          column: 29
        }
      },
      "132": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 435,
          column: 19
        }
      },
      "133": {
        start: {
          line: 439,
          column: 0
        },
        end: {
          line: 480,
          column: 3
        }
      },
      "134": {
        start: {
          line: 440,
          column: 4
        },
        end: {
          line: 479,
          column: 5
        }
      },
      "135": {
        start: {
          line: 441,
          column: 23
        },
        end: {
          line: 441,
          column: 40
        }
      },
      "136": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 444,
          column: 9
        }
      },
      "137": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 67
        }
      },
      "138": {
        start: {
          line: 445,
          column: 28
        },
        end: {
          line: 445,
          column: 36
        }
      },
      "139": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 448,
          column: 9
        }
      },
      "140": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 447,
          column: 75
        }
      },
      "141": {
        start: {
          line: 450,
          column: 27
        },
        end: {
          line: 452,
          column: 10
        }
      },
      "142": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 455,
          column: 9
        }
      },
      "143": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 76
        }
      },
      "144": {
        start: {
          line: 457,
          column: 30
        },
        end: {
          line: 474,
          column: 10
        }
      },
      "145": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 475,
          column: 32
        }
      },
      "146": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 19
        }
      },
      "147": {
        start: {
          line: 482,
          column: 0
        },
        end: {
          line: 541,
          column: 3
        }
      },
      "148": {
        start: {
          line: 483,
          column: 4
        },
        end: {
          line: 540,
          column: 5
        }
      },
      "149": {
        start: {
          line: 484,
          column: 23
        },
        end: {
          line: 484,
          column: 40
        }
      },
      "150": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 487,
          column: 9
        }
      },
      "151": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 486,
          column: 67
        }
      },
      "152": {
        start: {
          line: 488,
          column: 43
        },
        end: {
          line: 488,
          column: 51
        }
      },
      "153": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "154": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 87
        }
      },
      "155": {
        start: {
          line: 493,
          column: 29
        },
        end: {
          line: 499,
          column: 10
        }
      },
      "156": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "157": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 83
        }
      },
      "158": {
        start: {
          line: 504,
          column: 23
        },
        end: {
          line: 535,
          column: 10
        }
      },
      "159": {
        start: {
          line: 506,
          column: 135
        },
        end: {
          line: 506,
          column: 147
        }
      },
      "160": {
        start: {
          line: 507,
          column: 30
        },
        end: {
          line: 515,
          column: 14
        }
      },
      "161": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 524,
          column: 13
        }
      },
      "162": {
        start: {
          line: 518,
          column: 16
        },
        end: {
          line: 523,
          column: 19
        }
      },
      "163": {
        start: {
          line: 519,
          column: 53
        },
        end: {
          line: 522,
          column: 21
        }
      },
      "164": {
        start: {
          line: 526,
          column: 12
        },
        end: {
          line: 533,
          column: 13
        }
      },
      "165": {
        start: {
          line: 527,
          column: 16
        },
        end: {
          line: 532,
          column: 19
        }
      },
      "166": {
        start: {
          line: 528,
          column: 123
        },
        end: {
          line: 531,
          column: 21
        }
      },
      "167": {
        start: {
          line: 534,
          column: 12
        },
        end: {
          line: 534,
          column: 29
        }
      },
      "168": {
        start: {
          line: 536,
          column: 8
        },
        end: {
          line: 536,
          column: 37
        }
      },
      "169": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 539,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 34,
            column: 16
          },
          end: {
            line: 34,
            column: 17
          }
        },
        loc: {
          start: {
            line: 34,
            column: 43
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 34
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 91,
            column: 19
          },
          end: {
            line: 91,
            column: 20
          }
        },
        loc: {
          start: {
            line: 91,
            column: 46
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 91
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 132,
            column: 51
          },
          end: {
            line: 132,
            column: 52
          }
        },
        loc: {
          start: {
            line: 132,
            column: 78
          },
          end: {
            line: 231,
            column: 1
          }
        },
        line: 132
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 191,
            column: 49
          },
          end: {
            line: 191,
            column: 50
          }
        },
        loc: {
          start: {
            line: 191,
            column: 56
          },
          end: {
            line: 191,
            column: 60
          }
        },
        line: 191
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 195,
            column: 41
          },
          end: {
            line: 195,
            column: 42
          }
        },
        loc: {
          start: {
            line: 195,
            column: 61
          },
          end: {
            line: 198,
            column: 17
          }
        },
        line: 195
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 233,
            column: 53
          },
          end: {
            line: 233,
            column: 54
          }
        },
        loc: {
          start: {
            line: 233,
            column: 80
          },
          end: {
            line: 301,
            column: 1
          }
        },
        line: 233
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 273,
            column: 45
          },
          end: {
            line: 273,
            column: 46
          }
        },
        loc: {
          start: {
            line: 273,
            column: 65
          },
          end: {
            line: 276,
            column: 21
          }
        },
        line: 273
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 303,
            column: 22
          },
          end: {
            line: 303,
            column: 23
          }
        },
        loc: {
          start: {
            line: 303,
            column: 49
          },
          end: {
            line: 332,
            column: 1
          }
        },
        line: 303
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 334,
            column: 30
          },
          end: {
            line: 334,
            column: 31
          }
        },
        loc: {
          start: {
            line: 334,
            column: 57
          },
          end: {
            line: 365,
            column: 1
          }
        },
        line: 334
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 367,
            column: 44
          },
          end: {
            line: 367,
            column: 45
          }
        },
        loc: {
          start: {
            line: 367,
            column: 71
          },
          end: {
            line: 394,
            column: 1
          }
        },
        line: 367
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 396,
            column: 32
          },
          end: {
            line: 396,
            column: 33
          }
        },
        loc: {
          start: {
            line: 396,
            column: 59
          },
          end: {
            line: 437,
            column: 1
          }
        },
        line: 396
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 430,
            column: 51
          },
          end: {
            line: 430,
            column: 52
          }
        },
        loc: {
          start: {
            line: 430,
            column: 58
          },
          end: {
            line: 430,
            column: 83
          }
        },
        line: 430
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 439,
            column: 30
          },
          end: {
            line: 439,
            column: 31
          }
        },
        loc: {
          start: {
            line: 439,
            column: 57
          },
          end: {
            line: 480,
            column: 1
          }
        },
        line: 439
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 482,
            column: 26
          },
          end: {
            line: 482,
            column: 27
          }
        },
        loc: {
          start: {
            line: 482,
            column: 53
          },
          end: {
            line: 541,
            column: 1
          }
        },
        line: 482
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 504,
            column: 49
          },
          end: {
            line: 504,
            column: 50
          }
        },
        loc: {
          start: {
            line: 504,
            column: 63
          },
          end: {
            line: 535,
            column: 9
          }
        },
        line: 504
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 519,
            column: 43
          },
          end: {
            line: 519,
            column: 44
          }
        },
        loc: {
          start: {
            line: 519,
            column: 53
          },
          end: {
            line: 522,
            column: 21
          }
        },
        line: 519
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 528,
            column: 40
          },
          end: {
            line: 528,
            column: 41
          }
        },
        loc: {
          start: {
            line: 528,
            column: 123
          },
          end: {
            line: 531,
            column: 21
          }
        },
        line: 528
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 35
          }
        }, {
          start: {
            line: 36,
            column: 39
          },
          end: {
            line: 36,
            column: 40
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 43,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 43,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 46,
            column: 21
          }
        }, {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 46,
            column: 32
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 49,
            column: 61
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 49,
            column: 61
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 51,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 51,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 93,
            column: 23
          },
          end: {
            line: 93,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 23
          },
          end: {
            line: 93,
            column: 35
          }
        }, {
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 93,
            column: 40
          }
        }],
        line: 93
      },
      "9": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "10": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "11": {
        loc: {
          start: {
            line: 134,
            column: 23
          },
          end: {
            line: 134,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 23
          },
          end: {
            line: 134,
            column: 35
          }
        }, {
          start: {
            line: 134,
            column: 39
          },
          end: {
            line: 134,
            column: 40
          }
        }],
        line: 134
      },
      "12": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "13": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "14": {
        loc: {
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 154,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 154,
            column: 36
          }
        }, {
          start: {
            line: 154,
            column: 40
          },
          end: {
            line: 154,
            column: 42
          }
        }],
        line: 154
      },
      "15": {
        loc: {
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 155,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 155,
            column: 46
          }
        }, {
          start: {
            line: 155,
            column: 50
          },
          end: {
            line: 155,
            column: 52
          }
        }],
        line: 155
      },
      "16": {
        loc: {
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 156,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 156,
            column: 44
          }
        }, {
          start: {
            line: 156,
            column: 48
          },
          end: {
            line: 156,
            column: 50
          }
        }],
        line: 156
      },
      "17": {
        loc: {
          start: {
            line: 157,
            column: 28
          },
          end: {
            line: 157,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 28
          },
          end: {
            line: 157,
            column: 38
          }
        }, {
          start: {
            line: 157,
            column: 42
          },
          end: {
            line: 157,
            column: 44
          }
        }],
        line: 157
      },
      "18": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "19": {
        loc: {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 26
          }
        }, {
          start: {
            line: 181,
            column: 30
          },
          end: {
            line: 181,
            column: 55
          }
        }],
        line: 181
      },
      "20": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "21": {
        loc: {
          start: {
            line: 235,
            column: 23
          },
          end: {
            line: 235,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 23
          },
          end: {
            line: 235,
            column: 35
          }
        }, {
          start: {
            line: 235,
            column: 39
          },
          end: {
            line: 235,
            column: 40
          }
        }],
        line: 235
      },
      "22": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "23": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "24": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 250,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 250,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "25": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 252,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 252,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "26": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 254,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 254,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "27": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 256,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 256,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "28": {
        loc: {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 258,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 258,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 257
      },
      "29": {
        loc: {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "30": {
        loc: {
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 271,
            column: 12
          },
          end: {
            line: 278,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 271
      },
      "31": {
        loc: {
          start: {
            line: 305,
            column: 23
          },
          end: {
            line: 305,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 23
          },
          end: {
            line: 305,
            column: 35
          }
        }, {
          start: {
            line: 305,
            column: 39
          },
          end: {
            line: 305,
            column: 40
          }
        }],
        line: 305
      },
      "32": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "33": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "34": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 323,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      },
      "35": {
        loc: {
          start: {
            line: 336,
            column: 23
          },
          end: {
            line: 336,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 23
          },
          end: {
            line: 336,
            column: 35
          }
        }, {
          start: {
            line: 336,
            column: 39
          },
          end: {
            line: 336,
            column: 40
          }
        }],
        line: 336
      },
      "36": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 339,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "37": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "38": {
        loc: {
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 341,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 12
          },
          end: {
            line: 341,
            column: 18
          }
        }, {
          start: {
            line: 341,
            column: 22
          },
          end: {
            line: 341,
            column: 27
          }
        }],
        line: 341
      },
      "39": {
        loc: {
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 348,
            column: 8
          },
          end: {
            line: 350,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 348
      },
      "40": {
        loc: {
          start: {
            line: 369,
            column: 23
          },
          end: {
            line: 369,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 369,
            column: 23
          },
          end: {
            line: 369,
            column: 35
          }
        }, {
          start: {
            line: 369,
            column: 39
          },
          end: {
            line: 369,
            column: 40
          }
        }],
        line: 369
      },
      "41": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "42": {
        loc: {
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 383,
            column: 8
          },
          end: {
            line: 385,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 383
      },
      "43": {
        loc: {
          start: {
            line: 398,
            column: 23
          },
          end: {
            line: 398,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 23
          },
          end: {
            line: 398,
            column: 35
          }
        }, {
          start: {
            line: 398,
            column: 39
          },
          end: {
            line: 398,
            column: 40
          }
        }],
        line: 398
      },
      "44": {
        loc: {
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 399
      },
      "45": {
        loc: {
          start: {
            line: 412,
            column: 8
          },
          end: {
            line: 414,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 8
          },
          end: {
            line: 414,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "46": {
        loc: {
          start: {
            line: 423,
            column: 22
          },
          end: {
            line: 423,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 423,
            column: 22
          },
          end: {
            line: 423,
            column: 41
          }
        }, {
          start: {
            line: 423,
            column: 45
          },
          end: {
            line: 423,
            column: 58
          }
        }],
        line: 423
      },
      "47": {
        loc: {
          start: {
            line: 425,
            column: 25
          },
          end: {
            line: 425,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 425,
            column: 25
          },
          end: {
            line: 425,
            column: 43
          }
        }, {
          start: {
            line: 425,
            column: 47
          },
          end: {
            line: 425,
            column: 66
          }
        }],
        line: 425
      },
      "48": {
        loc: {
          start: {
            line: 426,
            column: 22
          },
          end: {
            line: 426,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 22
          },
          end: {
            line: 426,
            column: 39
          }
        }, {
          start: {
            line: 426,
            column: 43
          },
          end: {
            line: 426,
            column: 62
          }
        }],
        line: 426
      },
      "49": {
        loc: {
          start: {
            line: 427,
            column: 25
          },
          end: {
            line: 427,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 25
          },
          end: {
            line: 427,
            column: 49
          }
        }, {
          start: {
            line: 427,
            column: 53
          },
          end: {
            line: 427,
            column: 72
          }
        }],
        line: 427
      },
      "50": {
        loc: {
          start: {
            line: 441,
            column: 23
          },
          end: {
            line: 441,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 23
          },
          end: {
            line: 441,
            column: 35
          }
        }, {
          start: {
            line: 441,
            column: 39
          },
          end: {
            line: 441,
            column: 40
          }
        }],
        line: 441
      },
      "51": {
        loc: {
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 444,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 8
          },
          end: {
            line: 444,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "52": {
        loc: {
          start: {
            line: 446,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 446,
            column: 8
          },
          end: {
            line: 448,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 446
      },
      "53": {
        loc: {
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 455,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 455,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "54": {
        loc: {
          start: {
            line: 484,
            column: 23
          },
          end: {
            line: 484,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 23
          },
          end: {
            line: 484,
            column: 35
          }
        }, {
          start: {
            line: 484,
            column: 39
          },
          end: {
            line: 484,
            column: 40
          }
        }],
        line: 484
      },
      "55": {
        loc: {
          start: {
            line: 485,
            column: 8
          },
          end: {
            line: 487,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 485,
            column: 8
          },
          end: {
            line: 487,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 485
      },
      "56": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "57": {
        loc: {
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 489,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 489,
            column: 21
          }
        }, {
          start: {
            line: 489,
            column: 25
          },
          end: {
            line: 489,
            column: 31
          }
        }],
        line: 489
      },
      "58": {
        loc: {
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 502,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "59": {
        loc: {
          start: {
            line: 513,
            column: 30
          },
          end: {
            line: 513,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 30
          },
          end: {
            line: 513,
            column: 35
          }
        }, {
          start: {
            line: 513,
            column: 39
          },
          end: {
            line: 513,
            column: 80
          }
        }],
        line: 513
      },
      "60": {
        loc: {
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 524,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 524,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "61": {
        loc: {
          start: {
            line: 526,
            column: 12
          },
          end: {
            line: 533,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 526,
            column: 12
          },
          end: {
            line: 533,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 526
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/etfo-lesson-plans.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/etfo-lesson-plans.ts"],
      sourcesContent: ["import { Router, Request } from 'express';\nimport { Prisma } from '../prisma';\nimport { prisma } from '../prisma';\nimport { validate } from '../validation';\nimport { z } from 'zod';\n\nconst router = Router();\n\n// Validation schemas\nconst lessonPlanCreateSchema = z.object({\n  title: z.string().min(1),\n  titleFr: z.string().optional(),\n  unitPlanId: z.string().min(1),\n  date: z.string().datetime(),\n  duration: z.number().int().positive(),\n  mindsOn: z.string().optional(),\n  mindsOnFr: z.string().optional(),\n  action: z.string().optional(),\n  actionFr: z.string().optional(),\n  consolidation: z.string().optional(),\n  consolidationFr: z.string().optional(),\n  learningGoals: z.string().optional(),\n  learningGoalsFr: z.string().optional(),\n  materials: z.array(z.string()).optional(),\n  grouping: z.string().optional(),\n  accommodations: z.array(z.string()).optional(),\n  modifications: z.array(z.string()).optional(),\n  extensions: z.array(z.string()).optional(),\n  assessmentType: z.enum(['diagnostic', 'formative', 'summative']).optional(),\n  assessmentNotes: z.string().optional(),\n  isSubFriendly: z.boolean().optional(),\n  subNotes: z.string().optional(),\n  expectationIds: z.array(z.string()).optional(),\n});\n\nconst lessonPlanUpdateSchema = lessonPlanCreateSchema.partial().omit({ unitPlanId: true });\n\n// Get all lesson plans for the authenticated user\nrouter.get('/', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { unitPlanId, startDate, endDate, isSubFriendly } = req.query;\n\n    const where: Prisma.ETFOLessonPlanWhereInput = { userId };\n    if (unitPlanId) where.unitPlanId = String(unitPlanId);\n    if (isSubFriendly !== undefined) where.isSubFriendly = isSubFriendly === 'true';\n    if (startDate || endDate) {\n      where.date = {};\n      if (startDate) where.date.gte = new Date(String(startDate));\n      if (endDate) where.date.lte = new Date(String(endDate));\n    }\n\n    const lessonPlans = await prisma.eTFOLessonPlan.findMany({\n      where,\n      orderBy: { date: 'asc' },\n      include: {\n        unitPlan: {\n          select: {\n            id: true,\n            title: true,\n            longRangePlan: {\n              select: {\n                subject: true,\n                grade: true,\n              },\n            },\n          },\n        },\n        daybookEntry: {\n          select: {\n            id: true,\n            overallRating: true,\n            wouldReuseLesson: true,\n          },\n        },\n        _count: {\n          select: {\n            expectations: true,\n            resources: true,\n          },\n        },\n      },\n    });\n\n    res.json(lessonPlans);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Get a single lesson plan\nrouter.get('/:id', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const lessonPlan = await prisma.eTFOLessonPlan.findFirst({\n      where: {\n        id: req.params.id,\n        userId,\n      },\n      include: {\n        unitPlan: {\n          include: {\n            longRangePlan: true,\n          },\n        },\n        expectations: {\n          include: {\n            expectation: true,\n          },\n          orderBy: {\n            expectation: { code: 'asc' },\n          },\n        },\n        resources: {\n          orderBy: { createdAt: 'desc' },\n        },\n        daybookEntry: true,\n      },\n    });\n\n    if (!lessonPlan) {\n      return res.status(404).json({ error: 'Lesson plan not found' });\n    }\n\n    res.json(lessonPlan);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Create a new lesson plan\nrouter.post('/', validate(lessonPlanCreateSchema), async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { expectationIds, materials, accommodations, modifications, extensions, ...planData } =\n      req.body;\n\n    // Verify user owns the unit plan\n    const unitPlan = await prisma.unitPlan.findFirst({\n      where: {\n        id: planData.unitPlanId,\n        userId,\n      },\n    });\n\n    if (!unitPlan) {\n      return res.status(404).json({ error: 'Unit plan not found' });\n    }\n\n    const lessonPlan = await prisma.eTFOLessonPlan.create({\n      data: {\n        ...planData,\n        userId,\n        date: new Date(planData.date),\n        materials: materials || [],\n        accommodations: accommodations || [],\n        modifications: modifications || [],\n        extensions: extensions || [],\n      },\n      include: {\n        unitPlan: {\n          select: {\n            id: true,\n            title: true,\n            longRangePlan: {\n              select: {\n                subject: true,\n                grade: true,\n              },\n            },\n          },\n        },\n        _count: {\n          select: {\n            expectations: true,\n            resources: true,\n          },\n        },\n      },\n    });\n\n    // Link curriculum expectations if provided\n    if (expectationIds && expectationIds.length > 0) {\n      // Validate expectation IDs exist\n      const validExpectations = await prisma.curriculumExpectation.findMany({\n        where: { id: { in: expectationIds } },\n        select: { id: true },\n      });\n\n      if (validExpectations.length !== expectationIds.length) {\n        return res.status(400).json({\n          error: 'One or more curriculum expectations not found',\n          provided: expectationIds,\n          found: validExpectations.map((e) => e.id),\n        });\n      }\n\n      await prisma.eTFOLessonPlanExpectation.createMany({\n        data: expectationIds.map((expectationId: string) => ({\n          lessonPlanId: lessonPlan.id,\n          expectationId,\n        })),\n      });\n\n      // Refetch with expectations\n      const updatedPlan = await prisma.eTFOLessonPlan.findUnique({\n        where: { id: lessonPlan.id },\n        include: {\n          unitPlan: {\n            select: {\n              id: true,\n              title: true,\n              longRangePlan: {\n                select: {\n                  subject: true,\n                  grade: true,\n                },\n              },\n            },\n          },\n          expectations: {\n            include: { expectation: true },\n          },\n          _count: {\n            select: { resources: true },\n          },\n        },\n      });\n\n      return res.status(201).json(updatedPlan);\n    }\n\n    res.status(201).json(lessonPlan);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Update a lesson plan\nrouter.put('/:id', validate(lessonPlanUpdateSchema), async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { expectationIds, materials, accommodations, modifications, extensions, ...updateData } =\n      req.body;\n\n    // Verify ownership\n    const existing = await prisma.eTFOLessonPlan.findFirst({\n      where: { id: req.params.id, userId },\n    });\n\n    if (!existing) {\n      return res.status(404).json({ error: 'Lesson plan not found' });\n    }\n\n    // Prepare update data\n    const data: Prisma.ETFOLessonPlanUpdateInput = { ...updateData };\n    if (updateData.date) data.date = new Date(updateData.date);\n    if (materials !== undefined) data.materials = materials;\n    if (accommodations !== undefined) data.accommodations = accommodations;\n    if (modifications !== undefined) data.modifications = modifications;\n    if (extensions !== undefined) data.extensions = extensions;\n\n    // Update the plan\n    const lessonPlan = await prisma.eTFOLessonPlan.update({\n      where: { id: req.params.id },\n      data,\n    });\n\n    // Update expectations if provided\n    if (expectationIds !== undefined) {\n      // Remove existing expectations\n      await prisma.eTFOLessonPlanExpectation.deleteMany({\n        where: { lessonPlanId: lessonPlan.id },\n      });\n\n      // Add new expectations\n      if (expectationIds.length > 0) {\n        await prisma.eTFOLessonPlanExpectation.createMany({\n          data: expectationIds.map((expectationId: string) => ({\n            lessonPlanId: lessonPlan.id,\n            expectationId,\n          })),\n        });\n      }\n    }\n\n    // Refetch with updated relationships\n    const updatedPlan = await prisma.eTFOLessonPlan.findUnique({\n      where: { id: lessonPlan.id },\n      include: {\n        unitPlan: {\n          include: {\n            longRangePlan: true,\n          },\n        },\n        expectations: {\n          include: { expectation: true },\n        },\n        resources: true,\n        daybookEntry: true,\n      },\n    });\n\n    res.json(updatedPlan);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Delete a lesson plan\nrouter.delete('/:id', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    // Verify ownership and check for dependencies\n    const lessonPlan = await prisma.eTFOLessonPlan.findFirst({\n      where: { id: req.params.id, userId },\n      include: {\n        daybookEntry: true,\n      },\n    });\n\n    if (!lessonPlan) {\n      return res.status(404).json({ error: 'Lesson plan not found' });\n    }\n\n    if (lessonPlan.daybookEntry) {\n      return res.status(400).json({\n        error: 'Cannot delete lesson plan with existing daybook entry',\n      });\n    }\n\n    await prisma.eTFOLessonPlan.delete({\n      where: { id: req.params.id },\n    });\n\n    res.status(204).end();\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Add a resource to lesson plan\nrouter.post('/:id/resources', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { title, type, url, content } = req.body;\n\n    if (!title || !type) {\n      return res.status(400).json({ error: 'Title and type are required' });\n    }\n\n    // Verify ownership\n    const lessonPlan = await prisma.eTFOLessonPlan.findFirst({\n      where: { id: req.params.id, userId },\n    });\n\n    if (!lessonPlan) {\n      return res.status(404).json({ error: 'Lesson plan not found' });\n    }\n\n    const resource = await prisma.eTFOLessonPlanResource.create({\n      data: {\n        lessonPlanId: req.params.id,\n        title,\n        type,\n        url,\n        content,\n      },\n    });\n\n    res.status(201).json(resource);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Delete a resource\nrouter.delete('/:id/resources/:resourceId', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    // Verify ownership through lesson plan\n    const resource = await prisma.eTFOLessonPlanResource.findFirst({\n      where: {\n        id: req.params.resourceId,\n        lessonPlan: {\n          id: req.params.id,\n          userId,\n        },\n      },\n    });\n\n    if (!resource) {\n      return res.status(404).json({ error: 'Resource not found' });\n    }\n\n    await prisma.eTFOLessonPlanResource.delete({\n      where: { id: req.params.resourceId },\n    });\n\n    res.status(204).end();\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Generate substitute-friendly version\nrouter.post('/:id/sub-version', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const lessonPlan = await prisma.eTFOLessonPlan.findFirst({\n      where: { id: req.params.id, userId },\n      include: {\n        unitPlan: {\n          include: { longRangePlan: true },\n        },\n        expectations: { include: { expectation: true } },\n        resources: true,\n      },\n    });\n\n    if (!lessonPlan) {\n      return res.status(404).json({ error: 'Lesson plan not found' });\n    }\n\n    // Generate substitute-friendly version of the lesson plan\n    const subVersion = {\n      title: lessonPlan.title,\n      date: lessonPlan.date,\n      duration: lessonPlan.duration,\n      subject: lessonPlan.unitPlan.longRangePlan.subject,\n      grade: lessonPlan.unitPlan.longRangePlan.grade,\n      materials: lessonPlan.materials,\n      grouping: lessonPlan.grouping || 'Whole class',\n      activities: {\n        opening: lessonPlan.mindsOn || 'See detailed plan',\n        main: lessonPlan.action || 'See detailed plan',\n        closing: lessonPlan.consolidation || 'See detailed plan',\n      },\n      specialNotes: lessonPlan.subNotes,\n      resources: lessonPlan.resources.filter((r) => r.type !== 'teacher-only'),\n    };\n\n    res.json(subVersion);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Reschedule a lesson plan\nrouter.put('/:id/reschedule', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { newDate } = req.body;\n    if (!newDate) {\n      return res.status(400).json({ error: 'New date is required' });\n    }\n\n    // Validate the lesson exists and belongs to the user\n    const lessonPlan = await prisma.eTFOLessonPlan.findFirst({\n      where: { id: req.params.id, userId },\n    });\n\n    if (!lessonPlan) {\n      return res.status(404).json({ error: 'Lesson plan not found' });\n    }\n\n    // Update the lesson date\n    const updatedLesson = await prisma.eTFOLessonPlan.update({\n      where: { id: req.params.id },\n      data: { date: new Date(newDate) },\n      include: {\n        unitPlan: {\n          select: {\n            id: true,\n            title: true,\n            longRangePlan: {\n              select: {\n                subject: true,\n                grade: true,\n              },\n            },\n          },\n        },\n      },\n    });\n\n    res.json(updatedLesson);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Duplicate a lesson plan\nrouter.post('/duplicate', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { sourceId, title, notes } = req.body;\n\n    if (!sourceId || !title) {\n      return res.status(400).json({ error: 'Source ID and title are required' });\n    }\n\n    // Fetch the source lesson plan with all relations\n    const sourceLesson = await prisma.eTFOLessonPlan.findFirst({\n      where: { id: sourceId, userId },\n      include: {\n        expectations: true,\n        resources: true,\n      },\n    });\n\n    if (!sourceLesson) {\n      return res.status(404).json({ error: 'Source lesson plan not found' });\n    }\n\n    // Create the duplicate in a transaction\n    const result = await prisma.$transaction(async (tx) => {\n      // Create the duplicate lesson plan\n      const {\n        id: _id,\n        userId: _userId,\n        createdAt: _createdAt,\n        updatedAt: _updatedAt,\n        expectations,\n        resources,\n        ...lessonData\n      } = sourceLesson;\n\n      const newLesson = await tx.eTFOLessonPlan.create({\n        data: {\n          ...lessonData,\n          userId,\n          title,\n          date: new Date(), // Set to today by default\n          subNotes: notes || `Duplicated from \"${sourceLesson.title}\"`,\n        },\n      });\n\n      // Copy expectations\n      if (expectations.length > 0) {\n        await tx.eTFOLessonPlanExpectation.createMany({\n          data: expectations.map((exp) => ({\n            lessonPlanId: newLesson.id,\n            expectationId: exp.expectationId,\n          })),\n        });\n      }\n\n      // Copy resources\n      if (resources.length > 0) {\n        await tx.eTFOLessonPlanResource.createMany({\n          data: resources.map(\n            ({ id: _id, lessonPlanId: _lessonPlanId, createdAt: _createdAt, ...resource }) => ({\n              ...resource,\n              lessonPlanId: newLesson.id,\n            }),\n          ),\n        });\n      }\n\n      return newLesson;\n    });\n\n    res.status(201).json(result);\n  } catch (err) {\n    _next(err);\n  }\n});\n\nexport default router;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3c1deed7dc7721168fb4b895ef481d79f7bf6e4b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11b0oto8k7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11b0oto8k7();
import { Router } from 'express';
import { prisma } from '../prisma';
import { validate } from '../validation';
import { z } from 'zod';
const router =
/* istanbul ignore next */
(cov_11b0oto8k7().s[0]++, Router());
// Validation schemas
const lessonPlanCreateSchema =
/* istanbul ignore next */
(cov_11b0oto8k7().s[1]++, z.object({
  title: z.string().min(1),
  titleFr: z.string().optional(),
  unitPlanId: z.string().min(1),
  date: z.string().datetime(),
  duration: z.number().int().positive(),
  mindsOn: z.string().optional(),
  mindsOnFr: z.string().optional(),
  action: z.string().optional(),
  actionFr: z.string().optional(),
  consolidation: z.string().optional(),
  consolidationFr: z.string().optional(),
  learningGoals: z.string().optional(),
  learningGoalsFr: z.string().optional(),
  materials: z.array(z.string()).optional(),
  grouping: z.string().optional(),
  accommodations: z.array(z.string()).optional(),
  modifications: z.array(z.string()).optional(),
  extensions: z.array(z.string()).optional(),
  assessmentType: z.enum(['diagnostic', 'formative', 'summative']).optional(),
  assessmentNotes: z.string().optional(),
  isSubFriendly: z.boolean().optional(),
  subNotes: z.string().optional(),
  expectationIds: z.array(z.string()).optional()
}));
const lessonPlanUpdateSchema =
/* istanbul ignore next */
(cov_11b0oto8k7().s[2]++, lessonPlanCreateSchema.partial().omit({
  unitPlanId: true
}));
// Get all lesson plans for the authenticated user
/* istanbul ignore next */
cov_11b0oto8k7().s[3]++;
router.get('/', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_11b0oto8k7().f[0]++;
  cov_11b0oto8k7().s[4]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[5]++,
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[0][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[0][1]++, 0));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[6]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[1][0]++;
      cov_11b0oto8k7().s[7]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[1][1]++;
    }
    const {
      unitPlanId,
      startDate,
      endDate,
      isSubFriendly
    } =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[8]++, req.query);
    const where =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[9]++, {
      userId
    });
    /* istanbul ignore next */
    cov_11b0oto8k7().s[10]++;
    if (unitPlanId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[2][0]++;
      cov_11b0oto8k7().s[11]++;
      where.unitPlanId = String(unitPlanId);
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[2][1]++;
    }
    cov_11b0oto8k7().s[12]++;
    if (isSubFriendly !== undefined) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[3][0]++;
      cov_11b0oto8k7().s[13]++;
      where.isSubFriendly = isSubFriendly === 'true';
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[3][1]++;
    }
    cov_11b0oto8k7().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[5][0]++, startDate) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[5][1]++, endDate)) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[4][0]++;
      cov_11b0oto8k7().s[15]++;
      where.date = {};
      /* istanbul ignore next */
      cov_11b0oto8k7().s[16]++;
      if (startDate) {
        /* istanbul ignore next */
        cov_11b0oto8k7().b[6][0]++;
        cov_11b0oto8k7().s[17]++;
        where.date.gte = new Date(String(startDate));
      } else
      /* istanbul ignore next */
      {
        cov_11b0oto8k7().b[6][1]++;
      }
      cov_11b0oto8k7().s[18]++;
      if (endDate) {
        /* istanbul ignore next */
        cov_11b0oto8k7().b[7][0]++;
        cov_11b0oto8k7().s[19]++;
        where.date.lte = new Date(String(endDate));
      } else
      /* istanbul ignore next */
      {
        cov_11b0oto8k7().b[7][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[4][1]++;
    }
    const lessonPlans =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[20]++, await prisma.eTFOLessonPlan.findMany({
      where,
      orderBy: {
        date: 'asc'
      },
      include: {
        unitPlan: {
          select: {
            id: true,
            title: true,
            longRangePlan: {
              select: {
                subject: true,
                grade: true
              }
            }
          }
        },
        daybookEntry: {
          select: {
            id: true,
            overallRating: true,
            wouldReuseLesson: true
          }
        },
        _count: {
          select: {
            expectations: true,
            resources: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[21]++;
    res.json(lessonPlans);
  } catch (err) {
    /* istanbul ignore next */
    cov_11b0oto8k7().s[22]++;
    _next(err);
  }
});
// Get a single lesson plan
/* istanbul ignore next */
cov_11b0oto8k7().s[23]++;
router.get('/:id', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_11b0oto8k7().f[1]++;
  cov_11b0oto8k7().s[24]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[25]++,
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[8][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[8][1]++, 0));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[26]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[9][0]++;
      cov_11b0oto8k7().s[27]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[9][1]++;
    }
    const lessonPlan =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[28]++, await prisma.eTFOLessonPlan.findFirst({
      where: {
        id: req.params.id,
        userId
      },
      include: {
        unitPlan: {
          include: {
            longRangePlan: true
          }
        },
        expectations: {
          include: {
            expectation: true
          },
          orderBy: {
            expectation: {
              code: 'asc'
            }
          }
        },
        resources: {
          orderBy: {
            createdAt: 'desc'
          }
        },
        daybookEntry: true
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[29]++;
    if (!lessonPlan) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[10][0]++;
      cov_11b0oto8k7().s[30]++;
      return res.status(404).json({
        error: 'Lesson plan not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[10][1]++;
    }
    cov_11b0oto8k7().s[31]++;
    res.json(lessonPlan);
  } catch (err) {
    /* istanbul ignore next */
    cov_11b0oto8k7().s[32]++;
    _next(err);
  }
});
// Create a new lesson plan
/* istanbul ignore next */
cov_11b0oto8k7().s[33]++;
router.post('/', validate(lessonPlanCreateSchema), async (req, res, _next) => {
  /* istanbul ignore next */
  cov_11b0oto8k7().f[2]++;
  cov_11b0oto8k7().s[34]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[35]++,
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[11][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[11][1]++, 0));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[36]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[12][0]++;
      cov_11b0oto8k7().s[37]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[12][1]++;
    }
    const {
      expectationIds,
      materials,
      accommodations,
      modifications,
      extensions,
      ...planData
    } =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[38]++, req.body);
    // Verify user owns the unit plan
    const unitPlan =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[39]++, await prisma.unitPlan.findFirst({
      where: {
        id: planData.unitPlanId,
        userId
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[40]++;
    if (!unitPlan) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[13][0]++;
      cov_11b0oto8k7().s[41]++;
      return res.status(404).json({
        error: 'Unit plan not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[13][1]++;
    }
    const lessonPlan =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[42]++, await prisma.eTFOLessonPlan.create({
      data: {
        ...planData,
        userId,
        date: new Date(planData.date),
        materials:
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[14][0]++, materials) ||
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[14][1]++, []),
        accommodations:
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[15][0]++, accommodations) ||
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[15][1]++, []),
        modifications:
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[16][0]++, modifications) ||
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[16][1]++, []),
        extensions:
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[17][0]++, extensions) ||
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[17][1]++, [])
      },
      include: {
        unitPlan: {
          select: {
            id: true,
            title: true,
            longRangePlan: {
              select: {
                subject: true,
                grade: true
              }
            }
          }
        },
        _count: {
          select: {
            expectations: true,
            resources: true
          }
        }
      }
    }));
    // Link curriculum expectations if provided
    /* istanbul ignore next */
    cov_11b0oto8k7().s[43]++;
    if (
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[19][0]++, expectationIds) &&
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[19][1]++, expectationIds.length > 0)) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[18][0]++;
      // Validate expectation IDs exist
      const validExpectations =
      /* istanbul ignore next */
      (cov_11b0oto8k7().s[44]++, await prisma.curriculumExpectation.findMany({
        where: {
          id: {
            in: expectationIds
          }
        },
        select: {
          id: true
        }
      }));
      /* istanbul ignore next */
      cov_11b0oto8k7().s[45]++;
      if (validExpectations.length !== expectationIds.length) {
        /* istanbul ignore next */
        cov_11b0oto8k7().b[20][0]++;
        cov_11b0oto8k7().s[46]++;
        return res.status(400).json({
          error: 'One or more curriculum expectations not found',
          provided: expectationIds,
          found: validExpectations.map(e => {
            /* istanbul ignore next */
            cov_11b0oto8k7().f[3]++;
            cov_11b0oto8k7().s[47]++;
            return e.id;
          })
        });
      } else
      /* istanbul ignore next */
      {
        cov_11b0oto8k7().b[20][1]++;
      }
      cov_11b0oto8k7().s[48]++;
      await prisma.eTFOLessonPlanExpectation.createMany({
        data: expectationIds.map(expectationId => {
          /* istanbul ignore next */
          cov_11b0oto8k7().f[4]++;
          cov_11b0oto8k7().s[49]++;
          return {
            lessonPlanId: lessonPlan.id,
            expectationId
          };
        })
      });
      // Refetch with expectations
      const updatedPlan =
      /* istanbul ignore next */
      (cov_11b0oto8k7().s[50]++, await prisma.eTFOLessonPlan.findUnique({
        where: {
          id: lessonPlan.id
        },
        include: {
          unitPlan: {
            select: {
              id: true,
              title: true,
              longRangePlan: {
                select: {
                  subject: true,
                  grade: true
                }
              }
            }
          },
          expectations: {
            include: {
              expectation: true
            }
          },
          _count: {
            select: {
              resources: true
            }
          }
        }
      }));
      /* istanbul ignore next */
      cov_11b0oto8k7().s[51]++;
      return res.status(201).json(updatedPlan);
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[18][1]++;
    }
    cov_11b0oto8k7().s[52]++;
    res.status(201).json(lessonPlan);
  } catch (err) {
    /* istanbul ignore next */
    cov_11b0oto8k7().s[53]++;
    _next(err);
  }
});
// Update a lesson plan
/* istanbul ignore next */
cov_11b0oto8k7().s[54]++;
router.put('/:id', validate(lessonPlanUpdateSchema), async (req, res, _next) => {
  /* istanbul ignore next */
  cov_11b0oto8k7().f[5]++;
  cov_11b0oto8k7().s[55]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[56]++,
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[21][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[21][1]++, 0));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[57]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[22][0]++;
      cov_11b0oto8k7().s[58]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[22][1]++;
    }
    const {
      expectationIds,
      materials,
      accommodations,
      modifications,
      extensions,
      ...updateData
    } =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[59]++, req.body);
    // Verify ownership
    const existing =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[60]++, await prisma.eTFOLessonPlan.findFirst({
      where: {
        id: req.params.id,
        userId
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[61]++;
    if (!existing) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[23][0]++;
      cov_11b0oto8k7().s[62]++;
      return res.status(404).json({
        error: 'Lesson plan not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[23][1]++;
    }
    // Prepare update data
    const data =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[63]++, {
      ...updateData
    });
    /* istanbul ignore next */
    cov_11b0oto8k7().s[64]++;
    if (updateData.date) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[24][0]++;
      cov_11b0oto8k7().s[65]++;
      data.date = new Date(updateData.date);
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[24][1]++;
    }
    cov_11b0oto8k7().s[66]++;
    if (materials !== undefined) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[25][0]++;
      cov_11b0oto8k7().s[67]++;
      data.materials = materials;
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[25][1]++;
    }
    cov_11b0oto8k7().s[68]++;
    if (accommodations !== undefined) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[26][0]++;
      cov_11b0oto8k7().s[69]++;
      data.accommodations = accommodations;
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[26][1]++;
    }
    cov_11b0oto8k7().s[70]++;
    if (modifications !== undefined) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[27][0]++;
      cov_11b0oto8k7().s[71]++;
      data.modifications = modifications;
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[27][1]++;
    }
    cov_11b0oto8k7().s[72]++;
    if (extensions !== undefined) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[28][0]++;
      cov_11b0oto8k7().s[73]++;
      data.extensions = extensions;
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[28][1]++;
    }
    // Update the plan
    const lessonPlan =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[74]++, await prisma.eTFOLessonPlan.update({
      where: {
        id: req.params.id
      },
      data
    }));
    // Update expectations if provided
    /* istanbul ignore next */
    cov_11b0oto8k7().s[75]++;
    if (expectationIds !== undefined) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[29][0]++;
      cov_11b0oto8k7().s[76]++;
      // Remove existing expectations
      await prisma.eTFOLessonPlanExpectation.deleteMany({
        where: {
          lessonPlanId: lessonPlan.id
        }
      });
      // Add new expectations
      /* istanbul ignore next */
      cov_11b0oto8k7().s[77]++;
      if (expectationIds.length > 0) {
        /* istanbul ignore next */
        cov_11b0oto8k7().b[30][0]++;
        cov_11b0oto8k7().s[78]++;
        await prisma.eTFOLessonPlanExpectation.createMany({
          data: expectationIds.map(expectationId => {
            /* istanbul ignore next */
            cov_11b0oto8k7().f[6]++;
            cov_11b0oto8k7().s[79]++;
            return {
              lessonPlanId: lessonPlan.id,
              expectationId
            };
          })
        });
      } else
      /* istanbul ignore next */
      {
        cov_11b0oto8k7().b[30][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[29][1]++;
    }
    // Refetch with updated relationships
    const updatedPlan =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[80]++, await prisma.eTFOLessonPlan.findUnique({
      where: {
        id: lessonPlan.id
      },
      include: {
        unitPlan: {
          include: {
            longRangePlan: true
          }
        },
        expectations: {
          include: {
            expectation: true
          }
        },
        resources: true,
        daybookEntry: true
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[81]++;
    res.json(updatedPlan);
  } catch (err) {
    /* istanbul ignore next */
    cov_11b0oto8k7().s[82]++;
    _next(err);
  }
});
// Delete a lesson plan
/* istanbul ignore next */
cov_11b0oto8k7().s[83]++;
router.delete('/:id', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_11b0oto8k7().f[7]++;
  cov_11b0oto8k7().s[84]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[85]++,
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[31][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[31][1]++, 0));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[86]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[32][0]++;
      cov_11b0oto8k7().s[87]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[32][1]++;
    }
    // Verify ownership and check for dependencies
    const lessonPlan =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[88]++, await prisma.eTFOLessonPlan.findFirst({
      where: {
        id: req.params.id,
        userId
      },
      include: {
        daybookEntry: true
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[89]++;
    if (!lessonPlan) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[33][0]++;
      cov_11b0oto8k7().s[90]++;
      return res.status(404).json({
        error: 'Lesson plan not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[33][1]++;
    }
    cov_11b0oto8k7().s[91]++;
    if (lessonPlan.daybookEntry) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[34][0]++;
      cov_11b0oto8k7().s[92]++;
      return res.status(400).json({
        error: 'Cannot delete lesson plan with existing daybook entry'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[34][1]++;
    }
    cov_11b0oto8k7().s[93]++;
    await prisma.eTFOLessonPlan.delete({
      where: {
        id: req.params.id
      }
    });
    /* istanbul ignore next */
    cov_11b0oto8k7().s[94]++;
    res.status(204).end();
  } catch (err) {
    /* istanbul ignore next */
    cov_11b0oto8k7().s[95]++;
    _next(err);
  }
});
// Add a resource to lesson plan
/* istanbul ignore next */
cov_11b0oto8k7().s[96]++;
router.post('/:id/resources', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_11b0oto8k7().f[8]++;
  cov_11b0oto8k7().s[97]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[98]++,
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[35][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[35][1]++, 0));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[99]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[36][0]++;
      cov_11b0oto8k7().s[100]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[36][1]++;
    }
    const {
      title,
      type,
      url,
      content
    } =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[101]++, req.body);
    /* istanbul ignore next */
    cov_11b0oto8k7().s[102]++;
    if (
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[38][0]++, !title) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[38][1]++, !type)) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[37][0]++;
      cov_11b0oto8k7().s[103]++;
      return res.status(400).json({
        error: 'Title and type are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[37][1]++;
    }
    // Verify ownership
    const lessonPlan =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[104]++, await prisma.eTFOLessonPlan.findFirst({
      where: {
        id: req.params.id,
        userId
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[105]++;
    if (!lessonPlan) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[39][0]++;
      cov_11b0oto8k7().s[106]++;
      return res.status(404).json({
        error: 'Lesson plan not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[39][1]++;
    }
    const resource =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[107]++, await prisma.eTFOLessonPlanResource.create({
      data: {
        lessonPlanId: req.params.id,
        title,
        type,
        url,
        content
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[108]++;
    res.status(201).json(resource);
  } catch (err) {
    /* istanbul ignore next */
    cov_11b0oto8k7().s[109]++;
    _next(err);
  }
});
// Delete a resource
/* istanbul ignore next */
cov_11b0oto8k7().s[110]++;
router.delete('/:id/resources/:resourceId', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_11b0oto8k7().f[9]++;
  cov_11b0oto8k7().s[111]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[112]++,
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[40][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[40][1]++, 0));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[113]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[41][0]++;
      cov_11b0oto8k7().s[114]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[41][1]++;
    }
    // Verify ownership through lesson plan
    const resource =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[115]++, await prisma.eTFOLessonPlanResource.findFirst({
      where: {
        id: req.params.resourceId,
        lessonPlan: {
          id: req.params.id,
          userId
        }
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[116]++;
    if (!resource) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[42][0]++;
      cov_11b0oto8k7().s[117]++;
      return res.status(404).json({
        error: 'Resource not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[42][1]++;
    }
    cov_11b0oto8k7().s[118]++;
    await prisma.eTFOLessonPlanResource.delete({
      where: {
        id: req.params.resourceId
      }
    });
    /* istanbul ignore next */
    cov_11b0oto8k7().s[119]++;
    res.status(204).end();
  } catch (err) {
    /* istanbul ignore next */
    cov_11b0oto8k7().s[120]++;
    _next(err);
  }
});
// Generate substitute-friendly version
/* istanbul ignore next */
cov_11b0oto8k7().s[121]++;
router.post('/:id/sub-version', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_11b0oto8k7().f[10]++;
  cov_11b0oto8k7().s[122]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[123]++,
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[43][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[43][1]++, 0));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[124]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[44][0]++;
      cov_11b0oto8k7().s[125]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[44][1]++;
    }
    const lessonPlan =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[126]++, await prisma.eTFOLessonPlan.findFirst({
      where: {
        id: req.params.id,
        userId
      },
      include: {
        unitPlan: {
          include: {
            longRangePlan: true
          }
        },
        expectations: {
          include: {
            expectation: true
          }
        },
        resources: true
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[127]++;
    if (!lessonPlan) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[45][0]++;
      cov_11b0oto8k7().s[128]++;
      return res.status(404).json({
        error: 'Lesson plan not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[45][1]++;
    }
    // Generate substitute-friendly version of the lesson plan
    const subVersion =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[129]++, {
      title: lessonPlan.title,
      date: lessonPlan.date,
      duration: lessonPlan.duration,
      subject: lessonPlan.unitPlan.longRangePlan.subject,
      grade: lessonPlan.unitPlan.longRangePlan.grade,
      materials: lessonPlan.materials,
      grouping:
      /* istanbul ignore next */
      (cov_11b0oto8k7().b[46][0]++, lessonPlan.grouping) ||
      /* istanbul ignore next */
      (cov_11b0oto8k7().b[46][1]++, 'Whole class'),
      activities: {
        opening:
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[47][0]++, lessonPlan.mindsOn) ||
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[47][1]++, 'See detailed plan'),
        main:
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[48][0]++, lessonPlan.action) ||
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[48][1]++, 'See detailed plan'),
        closing:
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[49][0]++, lessonPlan.consolidation) ||
        /* istanbul ignore next */
        (cov_11b0oto8k7().b[49][1]++, 'See detailed plan')
      },
      specialNotes: lessonPlan.subNotes,
      resources: lessonPlan.resources.filter(r => {
        /* istanbul ignore next */
        cov_11b0oto8k7().f[11]++;
        cov_11b0oto8k7().s[130]++;
        return r.type !== 'teacher-only';
      })
    });
    /* istanbul ignore next */
    cov_11b0oto8k7().s[131]++;
    res.json(subVersion);
  } catch (err) {
    /* istanbul ignore next */
    cov_11b0oto8k7().s[132]++;
    _next(err);
  }
});
// Reschedule a lesson plan
/* istanbul ignore next */
cov_11b0oto8k7().s[133]++;
router.put('/:id/reschedule', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_11b0oto8k7().f[12]++;
  cov_11b0oto8k7().s[134]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[135]++,
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[50][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[50][1]++, 0));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[136]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[51][0]++;
      cov_11b0oto8k7().s[137]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[51][1]++;
    }
    const {
      newDate
    } =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[138]++, req.body);
    /* istanbul ignore next */
    cov_11b0oto8k7().s[139]++;
    if (!newDate) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[52][0]++;
      cov_11b0oto8k7().s[140]++;
      return res.status(400).json({
        error: 'New date is required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[52][1]++;
    }
    // Validate the lesson exists and belongs to the user
    const lessonPlan =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[141]++, await prisma.eTFOLessonPlan.findFirst({
      where: {
        id: req.params.id,
        userId
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[142]++;
    if (!lessonPlan) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[53][0]++;
      cov_11b0oto8k7().s[143]++;
      return res.status(404).json({
        error: 'Lesson plan not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[53][1]++;
    }
    // Update the lesson date
    const updatedLesson =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[144]++, await prisma.eTFOLessonPlan.update({
      where: {
        id: req.params.id
      },
      data: {
        date: new Date(newDate)
      },
      include: {
        unitPlan: {
          select: {
            id: true,
            title: true,
            longRangePlan: {
              select: {
                subject: true,
                grade: true
              }
            }
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[145]++;
    res.json(updatedLesson);
  } catch (err) {
    /* istanbul ignore next */
    cov_11b0oto8k7().s[146]++;
    _next(err);
  }
});
// Duplicate a lesson plan
/* istanbul ignore next */
cov_11b0oto8k7().s[147]++;
router.post('/duplicate', async (req, res, _next) => {
  /* istanbul ignore next */
  cov_11b0oto8k7().f[13]++;
  cov_11b0oto8k7().s[148]++;
  try {
    const userId =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[149]++,
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[54][0]++, req.user?.id) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[54][1]++, 0));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[150]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[55][0]++;
      cov_11b0oto8k7().s[151]++;
      return res.status(401).json({
        error: 'Unauthorized'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[55][1]++;
    }
    const {
      sourceId,
      title,
      notes
    } =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[152]++, req.body);
    /* istanbul ignore next */
    cov_11b0oto8k7().s[153]++;
    if (
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[57][0]++, !sourceId) ||
    /* istanbul ignore next */
    (cov_11b0oto8k7().b[57][1]++, !title)) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[56][0]++;
      cov_11b0oto8k7().s[154]++;
      return res.status(400).json({
        error: 'Source ID and title are required'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[56][1]++;
    }
    // Fetch the source lesson plan with all relations
    const sourceLesson =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[155]++, await prisma.eTFOLessonPlan.findFirst({
      where: {
        id: sourceId,
        userId
      },
      include: {
        expectations: true,
        resources: true
      }
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[156]++;
    if (!sourceLesson) {
      /* istanbul ignore next */
      cov_11b0oto8k7().b[58][0]++;
      cov_11b0oto8k7().s[157]++;
      return res.status(404).json({
        error: 'Source lesson plan not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_11b0oto8k7().b[58][1]++;
    }
    // Create the duplicate in a transaction
    const result =
    /* istanbul ignore next */
    (cov_11b0oto8k7().s[158]++, await prisma.$transaction(async tx => {
      /* istanbul ignore next */
      cov_11b0oto8k7().f[14]++;
      // Create the duplicate lesson plan
      const {
        id: _id,
        userId: _userId,
        createdAt: _createdAt,
        updatedAt: _updatedAt,
        expectations,
        resources,
        ...lessonData
      } =
      /* istanbul ignore next */
      (cov_11b0oto8k7().s[159]++, sourceLesson);
      const newLesson =
      /* istanbul ignore next */
      (cov_11b0oto8k7().s[160]++, await tx.eTFOLessonPlan.create({
        data: {
          ...lessonData,
          userId,
          title,
          date: new Date(),
          // Set to today by default
          subNotes:
          /* istanbul ignore next */
          (cov_11b0oto8k7().b[59][0]++, notes) ||
          /* istanbul ignore next */
          (cov_11b0oto8k7().b[59][1]++, `Duplicated from "${sourceLesson.title}"`)
        }
      }));
      // Copy expectations
      /* istanbul ignore next */
      cov_11b0oto8k7().s[161]++;
      if (expectations.length > 0) {
        /* istanbul ignore next */
        cov_11b0oto8k7().b[60][0]++;
        cov_11b0oto8k7().s[162]++;
        await tx.eTFOLessonPlanExpectation.createMany({
          data: expectations.map(exp => {
            /* istanbul ignore next */
            cov_11b0oto8k7().f[15]++;
            cov_11b0oto8k7().s[163]++;
            return {
              lessonPlanId: newLesson.id,
              expectationId: exp.expectationId
            };
          })
        });
      } else
      /* istanbul ignore next */
      {
        cov_11b0oto8k7().b[60][1]++;
      }
      // Copy resources
      cov_11b0oto8k7().s[164]++;
      if (resources.length > 0) {
        /* istanbul ignore next */
        cov_11b0oto8k7().b[61][0]++;
        cov_11b0oto8k7().s[165]++;
        await tx.eTFOLessonPlanResource.createMany({
          data: resources.map(({
            id: _id,
            lessonPlanId: _lessonPlanId,
            createdAt: _createdAt,
            ...resource
          }) => {
            /* istanbul ignore next */
            cov_11b0oto8k7().f[16]++;
            cov_11b0oto8k7().s[166]++;
            return {
              ...resource,
              lessonPlanId: newLesson.id
            };
          })
        });
      } else
      /* istanbul ignore next */
      {
        cov_11b0oto8k7().b[61][1]++;
      }
      cov_11b0oto8k7().s[167]++;
      return newLesson;
    }));
    /* istanbul ignore next */
    cov_11b0oto8k7().s[168]++;
    res.status(201).json(result);
  } catch (err) {
    /* istanbul ignore next */
    cov_11b0oto8k7().s[169]++;
    _next(err);
  }
});
export default router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,