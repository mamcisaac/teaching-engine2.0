{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/app.ts","mappings":"AAAA;;;GAGG;AAEH,OAAO,OAAoB,MAAM,SAAS,CAAC;AAC3C,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AACzD,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AACzD,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE3C,MAAM,UAAU,SAAS,CAAC,MAAoB;IAC5C,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;IAEtB,aAAa;IACb,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;QACX,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,uBAAuB;QACzD,WAAW,EAAE,IAAI;KAClB,CAAC,CAAC,CAAC;IACJ,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IACxB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAEhD,gBAAgB;IAChB,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;IAExC,eAAe;IACf,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QAC9B,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,SAAS;IACT,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACzC,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAEzC,cAAc;IACd,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;QACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,gBAAgB;IAChB,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAEtB,OAAO,GAAG,CAAC;AACb,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,MAAqB;IACvD,uCAAuC;IACvC,MAAM,UAAU,GAAG,MAAM,IAAI,IAAI,YAAY,EAAE,CAAC;IAEhD,MAAM,GAAG,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;IAElC,+BAA+B;IAC/B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE,CAAC;QACpC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;YACzB,kCAAkC;YAClC,IAAI,GAAG,CAAC,OAAO,CAAC,aAAa,KAAK,wBAAwB,EAAE,CAAC;gBAC1D,GAAuD,CAAC,IAAI,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;YACpF,CAAC;iBAAM,IAAI,GAAG,CAAC,OAAO,CAAC,aAAa,KAAK,oBAAoB,EAAE,CAAC;gBAC7D,GAAuD,CAAC,IAAI,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;YACpF,CAAC;YACD,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,GAAG,CAAC;AACb,CAAC","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/app.ts"],"sourcesContent":["/**\n * Express Application Factory\n * Creates and configures the Express application\n */\n\nimport express, { Express } from 'express';\nimport cors from 'cors';\nimport { PrismaClient } from '@teaching-engine/database';\nimport { errorHandler } from '@/middleware/errorHandler';\nimport { rateLimiters } from '@/middleware/rateLimiter';\nimport { authRoutes } from '@/routes/auth';\nimport { userRoutes } from '@/routes/user';\n\nexport function createApp(prisma: PrismaClient): Express {\n  const app = express();\n\n  // Middleware\n  app.use(cors({\n    origin: process.env.CLIENT_URL || 'http://localhost:5173',\n    credentials: true,\n  }));\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: true }));\n\n  // Rate limiting\n  app.use('/api/auth', rateLimiters.auth);\n\n  // Health check\n  app.get('/health', (req, res) => {\n    res.json({ status: 'ok', timestamp: new Date().toISOString() });\n  });\n\n  // Routes\n  app.use('/api/auth', authRoutes(prisma));\n  app.use('/api/user', userRoutes(prisma));\n\n  // 404 handler\n  app.use((req, res) => {\n    res.status(404).json({ error: 'Route not found' });\n  });\n\n  // Error handler\n  app.use(errorHandler);\n\n  return app;\n}\n\nexport async function createTestApp(prisma?: PrismaClient): Promise<Express> {\n  // Use provided prisma or create a mock\n  const testPrisma = prisma || new PrismaClient();\n  \n  const app = createApp(testPrisma);\n  \n  // Add test-specific middleware\n  if (process.env.NODE_ENV === 'test') {\n    app.use((req, res, next) => {\n      // Mock authentication for testing\n      if (req.headers.authorization === 'Bearer valid.jwt.token') {\n        (req as express.Request & { user?: { userId: string } }).user = { userId: '123' };\n      } else if (req.headers.authorization === 'Bearer admin.token') {\n        (req as express.Request & { user?: { userId: string } }).user = { userId: '456' };\n      }\n      next();\n    });\n  }\n  \n  return app;\n}"],"version":3}