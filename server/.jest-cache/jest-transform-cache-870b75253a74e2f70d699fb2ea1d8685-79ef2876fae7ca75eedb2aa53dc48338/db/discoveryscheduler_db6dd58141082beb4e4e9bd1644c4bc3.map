{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/discovery-scheduler.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/discovery-scheduler.ts"],"sourcesContent":["import { Router } from 'express';\nimport { z } from 'zod';\nimport { authMiddleware } from '../middleware/auth';\nimport { discoverySchedulerService } from '../services/discoverySchedulerService';\n\nconst router = Router();\n\n// Validation schemas\nconst TaskSchema = z.object({\n  name: z.string().min(1).max(100),\n  type: z.enum(['discovery', 'verification', 'cleanup']),\n  frequency: z.enum(['daily', 'weekly', 'monthly']),\n  isActive: z.boolean().optional().default(true),\n  config: z.record(z.unknown()).optional().default({}),\n});\n\nconst TaskStatusSchema = z.object({\n  isActive: z.boolean(),\n});\n\n/**\n * Get all scheduled tasks\n * GET /api/discovery-scheduler/tasks\n */\nrouter.get('/tasks', authMiddleware, async (req, res) => {\n  try {\n    const tasks = discoverySchedulerService.getTasks();\n    const runningTasks = discoverySchedulerService.getRunningTasks();\n    const stats = discoverySchedulerService.getSchedulerStats();\n\n    res.json({\n      success: true,\n      data: {\n        tasks,\n        runningTasks,\n        stats,\n      },\n    });\n  } catch (error) {\n    console.error('Get tasks error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve scheduled tasks',\n    });\n  }\n});\n\n/**\n * Get a specific task\n * GET /api/discovery-scheduler/tasks/:taskId\n */\nrouter.get('/tasks/:taskId', authMiddleware, async (req, res) => {\n  try {\n    const { taskId } = req.params;\n    const task = discoverySchedulerService.getTask(taskId);\n\n    if (!task) {\n      return res.status(404).json({\n        success: false,\n        error: 'Task not found',\n      });\n    }\n\n    res.json({\n      success: true,\n      data: { task },\n    });\n  } catch (error) {\n    console.error('Get task error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve task',\n    });\n  }\n});\n\n/**\n * Create a new scheduled task\n * POST /api/discovery-scheduler/tasks\n */\nrouter.post('/tasks', authMiddleware, async (req, res) => {\n  try {\n    const taskData = TaskSchema.parse(req.body);\n    \n    const taskId = discoverySchedulerService.addTask({\n      name: taskData.name,\n      type: taskData.type,\n      frequency: taskData.frequency,\n      isActive: taskData.isActive,\n      config: taskData.config,\n      nextRun: new Date(Date.now() + 60000), // Start in 1 minute\n    });\n\n    const task = discoverySchedulerService.getTask(taskId);\n\n    res.status(201).json({\n      success: true,\n      data: {\n        task,\n        message: 'Task created successfully',\n      },\n    });\n  } catch (error) {\n    console.error('Create task error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to create task',\n    });\n  }\n});\n\n/**\n * Update task status (enable/disable)\n * PATCH /api/discovery-scheduler/tasks/:taskId/status\n */\nrouter.patch('/tasks/:taskId/status', authMiddleware, async (req, res) => {\n  try {\n    const { taskId } = req.params;\n    const { isActive } = TaskStatusSchema.parse(req.body);\n\n    const updated = discoverySchedulerService.setTaskStatus(taskId, isActive);\n\n    if (!updated) {\n      return res.status(404).json({\n        success: false,\n        error: 'Task not found',\n      });\n    }\n\n    const task = discoverySchedulerService.getTask(taskId);\n\n    res.json({\n      success: true,\n      data: {\n        task,\n        message: `Task ${isActive ? 'enabled' : 'disabled'} successfully`,\n      },\n    });\n  } catch (error) {\n    console.error('Update task status error:', error);\n    res.status(400).json({\n      success: false,\n      error: error instanceof z.ZodError ? error.errors : 'Failed to update task status',\n    });\n  }\n});\n\n/**\n * Manually trigger a task\n * POST /api/discovery-scheduler/tasks/:taskId/trigger\n */\nrouter.post('/tasks/:taskId/trigger', authMiddleware, async (req, res) => {\n  try {\n    const { taskId } = req.params;\n\n    // Start task execution in background\n    discoverySchedulerService\n      .triggerTask(taskId)\n      .then(() => {\n        console.log(`Task ${taskId} completed successfully`);\n      })\n      .catch((error) => {\n        console.error(`Task ${taskId} failed:`, error);\n      });\n\n    res.json({\n      success: true,\n      data: {\n        taskId,\n        message: 'Task triggered successfully',\n        status: 'started',\n      },\n    });\n  } catch (error) {\n    console.error('Trigger task error:', error);\n    res.status(400).json({\n      success: false,\n      error: 'Failed to trigger task',\n    });\n  }\n});\n\n/**\n * Delete a scheduled task\n * DELETE /api/discovery-scheduler/tasks/:taskId\n */\nrouter.delete('/tasks/:taskId', authMiddleware, async (req, res) => {\n  try {\n    const { taskId } = req.params;\n\n    const removed = discoverySchedulerService.removeTask(taskId);\n\n    if (!removed) {\n      return res.status(404).json({\n        success: false,\n        error: 'Task not found',\n      });\n    }\n\n    res.json({\n      success: true,\n      data: {\n        taskId,\n        message: 'Task deleted successfully',\n      },\n    });\n  } catch (error) {\n    console.error('Delete task error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to delete task',\n    });\n  }\n});\n\n/**\n * Get scheduler statistics\n * GET /api/discovery-scheduler/stats\n */\nrouter.get('/stats', authMiddleware, async (req, res) => {\n  try {\n    const stats = discoverySchedulerService.getSchedulerStats();\n    const runningTasks = discoverySchedulerService.getRunningTasks();\n\n    res.json({\n      success: true,\n      data: {\n        ...stats,\n        runningTasksDetail: runningTasks,\n      },\n    });\n  } catch (error) {\n    console.error('Get scheduler stats error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve scheduler statistics',\n    });\n  }\n});\n\n/**\n * Initialize the scheduler (admin only)\n * POST /api/discovery-scheduler/initialize\n */\nrouter.post('/initialize', authMiddleware, async (req, res) => {\n  try {\n    await discoverySchedulerService.initialize();\n\n    res.json({\n      success: true,\n      data: {\n        message: 'Scheduler initialized successfully',\n        stats: discoverySchedulerService.getSchedulerStats(),\n      },\n    });\n  } catch (error) {\n    console.error('Initialize scheduler error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to initialize scheduler',\n    });\n  }\n});\n\n/**\n * Shutdown the scheduler (admin only)\n * POST /api/discovery-scheduler/shutdown\n */\nrouter.post('/shutdown', authMiddleware, async (req, res) => {\n  try {\n    await discoverySchedulerService.shutdown();\n\n    res.json({\n      success: true,\n      data: {\n        message: 'Scheduler shutdown successfully',\n      },\n    });\n  } catch (error) {\n    console.error('Shutdown scheduler error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to shutdown scheduler',\n    });\n  }\n});\n\n/**\n * Get running tasks with details\n * GET /api/discovery-scheduler/running\n */\nrouter.get('/running', authMiddleware, async (req, res) => {\n  try {\n    const runningTasks = discoverySchedulerService.getRunningTasks();\n\n    res.json({\n      success: true,\n      data: {\n        runningTasks,\n        count: runningTasks.length,\n      },\n    });\n  } catch (error) {\n    console.error('Get running tasks error:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to retrieve running tasks',\n    });\n  }\n});\n\nexport default router;"],"version":3}