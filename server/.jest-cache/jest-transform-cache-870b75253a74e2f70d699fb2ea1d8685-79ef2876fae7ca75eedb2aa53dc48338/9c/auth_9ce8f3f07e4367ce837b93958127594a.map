{"version":3,"names":["cov_1hbmo76j44","actualCoverage","jwt","authMiddleware","req","res","next","f","header","s","headers","authorization","b","status","json","error","token","replace","secret","process","env","JWT_SECRET","Error","payload","verify","user","id","parseInt","userId","email","message","console","auth","requireAuth","authenticate","requireAdminToken","WIZARD_TOKEN"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/auth.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport jwt from 'jsonwebtoken';\n\nexport function authMiddleware(req: Request, res: Response, next: NextFunction) {\n  const header = req.headers.authorization;\n  if (!header) return res.status(401).json({ error: 'Unauthorized' });\n  const token = header.replace('Bearer ', '');\n  try {\n    const secret = process.env.JWT_SECRET;\n    if (!secret) {\n      throw new Error('JWT_SECRET environment variable is required');\n    }\n    const payload = jwt.verify(token, secret) as { userId: string; email?: string };\n    req.user = {\n      id: parseInt(payload.userId),\n      userId: payload.userId,\n      email: payload.email || 'unknown@example.com',\n    };\n    next();\n  } catch (error) {\n    if (error instanceof Error && error.message === 'JWT_SECRET environment variable is required') {\n      console.error('CRITICAL: JWT_SECRET not configured');\n      return res.status(500).json({ error: 'Server configuration error' });\n    }\n    res.status(401).json({ error: 'Unauthorized' });\n  }\n}\n\n// Export as 'auth' for consistency with service\nexport const auth = authMiddleware;\n\n// Export as requireAuth for consistency with routes\nexport const requireAuth = authMiddleware;\n\n// Export as authenticate for batch routes\nexport const authenticate = authMiddleware;\n\nexport function requireAdminToken(req: Request, res: Response, next: NextFunction) {\n  const token = req.headers.authorization?.replace('Bearer ', '');\n\n  if (!token) {\n    return res.status(401).json({ error: 'Admin token required' });\n  }\n\n  // Check if token matches the admin/wizard token\n  if (token !== process.env.WIZARD_TOKEN) {\n    return res.status(403).json({ error: 'Invalid admin token' });\n  }\n\n  next();\n}\n"],"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","ignoreList":[]}