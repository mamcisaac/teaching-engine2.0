{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/weeklyPlanExtractor.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/weeklyPlanExtractor.ts"],"sourcesContent":["import { prisma } from '../prisma';\nimport { SubPlanData, SubPlanOptions, buildSubPlanData } from './subPlanService';\n\nexport interface WeeklyPlanData {\n  startDate: string;\n  endDate: string;\n  days: SubPlanData[];\n  weeklyOverview: {\n    subjects: Array<{\n      name: string;\n      totalHours: number;\n      keyTopics: string[];\n      outcomes: Array<{\n        code: string;\n        description: string;\n      }>;\n    }>;\n    unitPlans: Array<{\n      id: string;\n      title: string;\n      startDate: Date;\n      endDate: Date;\n      subject?: string;\n      longRangePlan: {\n        subject: string;\n        grade: number;\n      };\n      lessonPlans: Array<{\n        id: string;\n        title: string;\n        duration: number;\n        daybookEntry: unknown;\n      }>;\n    }>;\n    assessments: Array<{\n      title: string;\n      date: string;\n      subject: string;\n      type: string;\n    }>;\n    specialEvents: Array<{\n      title: string;\n      date: string;\n      time?: string;\n      impact: string; // How it affects the regular schedule\n    }>;\n  };\n  continuityNotes: Array<{\n    day: string;\n    previousDay?: string;\n    connections: string[];\n    preparations: string[];\n  }>;\n  emergencyBackupPlans: Array<{\n    subject: string;\n    activities: string[];\n    materials: string[];\n  }>;\n}\n\n/**\n * Extract a comprehensive weekly substitute plan with cross-day continuity\n */\nexport async function extractWeeklyPlan(\n  startDate: string,\n  numDays: number = 5,\n  options: SubPlanOptions = {},\n): Promise<WeeklyPlanData> {\n  const { userId = 1 } = options;\n\n  // Generate data for each day\n  const days: SubPlanData[] = [];\n  const startDateObj = new Date(startDate);\n\n  for (let i = 0; i < numDays; i++) {\n    const currentDate = new Date(startDateObj);\n    currentDate.setUTCDate(startDateObj.getUTCDate() + i);\n    const dateStr = currentDate.toISOString().split('T')[0];\n\n    const dayData = await buildSubPlanData(dateStr, options);\n    days.push(dayData);\n  }\n\n  // Calculate end date\n  const endDateObj = new Date(startDateObj);\n  endDateObj.setUTCDate(startDateObj.getUTCDate() + numDays - 1);\n  const endDate = endDateObj.toISOString().split('T')[0];\n\n  // Extract weekly overview data\n  const weeklyOverview = await extractWeeklyOverview(startDate, endDate, userId);\n\n  // Generate continuity notes\n  const continuityNotes = generateContinuityNotes(days);\n\n  // Create emergency backup plans\n  const emergencyBackupPlans = await generateEmergencyBackupPlans();\n\n  return {\n    startDate,\n    endDate,\n    days,\n    weeklyOverview,\n    continuityNotes,\n    emergencyBackupPlans,\n  };\n}\n\n/**\n * Extract weekly overview with subjects, milestones, and assessments\n */\nasync function extractWeeklyOverview(\n  startDate: string,\n  endDate: string,\n  userId: number,\n): Promise<{\n  subjects: Array<{\n    name: string;\n    totalHours: number;\n    keyTopics: string[];\n    outcomes: Array<{\n      code: string;\n      description: string;\n    }>;\n  }>;\n  unitPlans: Array<{\n    id: string;\n    title: string;\n    startDate: Date;\n    endDate: Date;\n    subject?: string;\n    longRangePlan: {\n      subject: string;\n      grade: number;\n    };\n    lessonPlans: Array<{\n      id: string;\n      title: string;\n      duration: number;\n      daybookEntry: unknown;\n    }>;\n  }>;\n  assessments: Array<{\n    title: string;\n    date: string;\n    subject: string;\n    type: string;\n  }>;\n  specialEvents: Array<{\n    title: string;\n    date: string;\n    time?: string;\n    impact: string;\n  }>;\n}> {\n  const weekStart = new Date(startDate);\n  weekStart.setUTCHours(0, 0, 0, 0);\n  const weekEnd = new Date(endDate);\n  weekEnd.setUTCHours(23, 59, 59, 999);\n\n  // Get all daily plans for the week\n  // DISABLED: Legacy dailyPlan model removed in ETFO migration\n  const weeklyPlans: Array<{\n    items: Array<{\n      slot?: { subject?: { name: string } };\n      activity?: {\n        title?: string;\n        milestone?: { subject?: { name: string } };\n        outcomes?: Array<{\n          outcome: {\n            id: string;\n            code: string;\n            description: string;\n          };\n        }>;\n      };\n    }>;\n  }> = []; // Legacy dailyPlan query disabled\n\n  // Get unit plans for the period using ETFO framework\n  const unitPlans = await prisma.unitPlan.findMany({\n    where: {\n      userId,\n      OR: [\n        {\n          startDate: {\n            gte: weekStart,\n            lte: weekEnd,\n          },\n        },\n        {\n          endDate: {\n            gte: weekStart,\n            lte: weekEnd,\n          },\n        },\n        {\n          AND: [{ startDate: { lte: weekStart } }, { endDate: { gte: weekEnd } }],\n        },\n      ],\n    },\n    include: {\n      longRangePlan: {\n        select: {\n          subject: true,\n          grade: true,\n        },\n      },\n      lessonPlans: {\n        include: {\n          daybookEntry: true,\n        },\n      },\n    },\n  });\n\n  // Assessment functionality removed\n  // const assessments: Array<Record<string, unknown>> = [];\n\n  // Get special events\n  const specialEvents = await prisma.calendarEvent.findMany({\n    where: {\n      start: {\n        gte: weekStart,\n      },\n      end: {\n        lte: weekEnd,\n      },\n    },\n  });\n\n  // Process subjects and calculate hours\n  const subjectMap = new Map<\n    string,\n    {\n      name: string;\n      totalHours: number;\n      keyTopics: Set<string>;\n      outcomes: Map<string, { code: string; description: string }>;\n    }\n  >();\n\n  for (const plan of weeklyPlans) {\n    for (const item of plan.items) {\n      const subject = item.slot?.subject || item.activity?.milestone?.subject;\n      if (!subject) continue;\n\n      if (!subjectMap.has(subject.name)) {\n        subjectMap.set(subject.name, {\n          name: subject.name,\n          totalHours: 0,\n          keyTopics: new Set(),\n          outcomes: new Map(),\n        });\n      }\n\n      const subjectData = subjectMap.get(subject.name)!;\n\n      // Add duration (assuming 15-minute slots, could be made configurable)\n      subjectData.totalHours += 0.25;\n\n      // Add activity topics\n      if (item.activity?.title) {\n        subjectData.keyTopics.add(item.activity.title);\n      }\n\n      // Add outcomes\n      if (item.activity?.outcomes) {\n        for (const outcomeRel of item.activity.outcomes) {\n          const outcome = outcomeRel.outcome;\n          subjectData.outcomes.set(outcome.id, {\n            code: outcome.code,\n            description: outcome.description,\n          });\n        }\n      }\n    }\n  }\n\n  // Convert to final format\n  const subjects = Array.from(subjectMap.values()).map((s) => ({\n    name: s.name,\n    totalHours: Math.round(s.totalHours * 4) / 4, // Round to nearest quarter hour\n    keyTopics: Array.from(s.keyTopics).slice(0, 5), // Limit to top 5\n    outcomes: Array.from(s.outcomes.values()),\n  }));\n\n  // Process milestones - DISABLED: Legacy milestone model removed in ETFO migration\n  // const processedMilestones: any[] = []; // Legacy milestone processing disabled\n\n  // Assessment functionality removed\n  const processedAssessments: Array<{\n    title: string;\n    date: string;\n    subject: string;\n    type: string;\n  }> = [];\n\n  // Process special events\n  const processedEvents = specialEvents.map((event) => ({\n    title: event.title,\n    date: event.start.toISOString().split('T')[0],\n    time: event.allDay ? undefined : event.start.toISOString().split('T')[1].slice(0, 5),\n    impact: determineEventImpact(event.title, event.allDay),\n  }));\n\n  return {\n    subjects,\n    unitPlans, // Changed from milestones to unitPlans (ETFO alignment)\n    assessments: processedAssessments,\n    specialEvents: processedEvents,\n  };\n}\n\n/**\n * Generate continuity notes showing how each day builds on the previous\n */\nfunction generateContinuityNotes(days: SubPlanData[]): Array<{\n  day: string;\n  previousDay?: string;\n  connections: string[];\n  preparations: string[];\n}> {\n  const notes = [];\n\n  for (let i = 0; i < days.length; i++) {\n    const currentDay = days[i];\n    const previousDay = i > 0 ? days[i - 1] : undefined;\n\n    const connections: string[] = [];\n    const preparations: string[] = [];\n\n    if (previousDay) {\n      // Find subject connections\n      const currentSubjects = extractSubjectsFromSchedule(currentDay.schedule);\n      const previousSubjects = extractSubjectsFromSchedule(previousDay.schedule);\n\n      const commonSubjects = currentSubjects.filter((s) =>\n        previousSubjects.some((ps) => ps.subject === s.subject),\n      );\n\n      for (const subject of commonSubjects) {\n        const prevActivity = previousSubjects.find((ps) => ps.subject === subject.subject);\n        if (prevActivity && subject.activity !== prevActivity.activity) {\n          connections.push(\n            `${subject.subject}: Continue from \"${prevActivity.activity}\" to \"${subject.activity}\"`,\n          );\n        }\n      }\n\n      // Check for materials/setup needed\n      const currentActivities = currentDay.schedule\n        .filter((s) => s.activity)\n        .map((s) => s.activity!);\n\n      if (currentActivities.some((a) => a.toLowerCase().includes('project'))) {\n        preparations.push('Ensure project materials from previous day are available');\n      }\n\n      if (currentActivities.some((a) => a.toLowerCase().includes('presentation'))) {\n        preparations.push('Set up presentation equipment and student work displays');\n      }\n    }\n\n    // Add general preparations for the day\n    const dayActivities = currentDay.schedule.filter((s) => s.activity);\n    if (dayActivities.length > 0) {\n      preparations.push('Review daily schedule and prepare transition materials');\n    }\n\n    notes.push({\n      day: currentDay.date,\n      previousDay: previousDay?.date,\n      connections,\n      preparations,\n    });\n  }\n\n  return notes;\n}\n\n/**\n * Generate emergency backup plans by subject\n */\nasync function generateEmergencyBackupPlans(): Promise<\n  Array<{\n    subject: string;\n    activities: string[];\n    materials: string[];\n  }>\n> {\n  const subjects = await prisma.subject.findMany({});\n\n  return subjects.map((subject) => {\n    // DISABLED: Legacy milestone/activity models removed in ETFO migration\n    const fallbackActivities: Array<{ title: string }> = [];\n\n    return {\n      subject: subject.name,\n      activities: fallbackActivities.slice(0, 3).map((a) => a.title),\n      materials: generateSubjectMaterials(subject.name),\n    };\n  });\n}\n\n/**\n * Extract subjects from schedule entries\n */\nfunction extractSubjectsFromSchedule(\n  schedule: Array<{ time: string; activity?: string; note?: string }>,\n) {\n  return schedule\n    .filter((entry) => entry.activity && !entry.note)\n    .map((entry) => ({\n      time: entry.time,\n      activity: entry.activity!,\n      subject: inferSubjectFromActivity(entry.activity!),\n    }));\n}\n\n/**\n * Infer subject from activity name (basic heuristic)\n */\nfunction inferSubjectFromActivity(activity: string): string {\n  const lower = activity.toLowerCase();\n\n  if (lower.includes('math') || lower.includes('number') || lower.includes('calculation')) {\n    return 'Mathematics';\n  }\n  if (lower.includes('read') || lower.includes('writing') || lower.includes('language')) {\n    return 'Language Arts';\n  }\n  if (lower.includes('science') || lower.includes('experiment') || lower.includes('nature')) {\n    return 'Science';\n  }\n  if (lower.includes('social') || lower.includes('history') || lower.includes('geography')) {\n    return 'Social Studies';\n  }\n  if (lower.includes('art') || lower.includes('draw') || lower.includes('paint')) {\n    return 'Arts';\n  }\n  if (lower.includes('pe') || lower.includes('physical') || lower.includes('sport')) {\n    return 'Physical Education';\n  }\n\n  return 'General';\n}\n\n/**\n * Determine impact of calendar events on schedule\n */\nfunction determineEventImpact(title: string, allDay: boolean): string {\n  const lower = title.toLowerCase();\n\n  if (allDay) {\n    if (lower.includes('holiday') || lower.includes('break')) {\n      return 'No classes - school closed';\n    }\n    if (lower.includes('pd') || lower.includes('development')) {\n      return 'No students - professional development day';\n    }\n    if (lower.includes('assembly')) {\n      return 'Modified schedule for all-school assembly';\n    }\n  }\n\n  if (lower.includes('fire drill')) {\n    return 'Brief interruption - practice emergency procedures';\n  }\n  if (lower.includes('photo')) {\n    return 'Students may be called out for individual/class photos';\n  }\n  if (lower.includes('visit') || lower.includes('guest')) {\n    return 'Special visitor - may affect regular activities';\n  }\n\n  return 'May affect regular schedule - check with office';\n}\n\n/**\n * Generate common materials list by subject\n */\nfunction generateSubjectMaterials(subject: string): string[] {\n  const commonMaterials = ['Whiteboard markers', 'Paper and pencils', 'Timer for activities'];\n\n  switch (subject.toLowerCase()) {\n    case 'mathematics':\n      return [...commonMaterials, 'Calculators', 'Math manipulatives', 'Graph paper'];\n    case 'language arts':\n      return [...commonMaterials, 'Reading books', 'Writing journals', 'Dictionary'];\n    case 'science':\n      return [...commonMaterials, 'Science notebooks', 'Safety goggles', 'Basic lab supplies'];\n    case 'social studies':\n      return [...commonMaterials, 'Maps', 'Timeline materials', 'Research books'];\n    case 'arts':\n      return [...commonMaterials, 'Art supplies', 'Drawing paper', 'Colored pencils'];\n    default:\n      return commonMaterials;\n  }\n}\n"],"version":3}