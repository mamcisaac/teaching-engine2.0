{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/errorHandler.ts","mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,gBAAgB,CAAC;AACxC,OAAO,MAAM,MAAM,WAAW,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,KAAK,CAAC;AAW/B,MAAM,OAAO,QAAS,SAAQ,KAAK;IACjC,UAAU,CAAS;IACnB,IAAI,CAAS;IACb,aAAa,CAAU;IAEvB,YAAY,OAAe,EAAE,UAAkB,EAAE,IAAY,EAAE,aAAa,GAAG,IAAI;QACjF,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;CACF;AAED,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,EAAsE,EAAE,EAAE,CAAC,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC1J,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAClD,CAAC,CAAC;AAEF,MAAM,UAAU,YAAY,CAAC,GAAU,EAAE,GAAY,EAAE,GAAa,EAAE,KAAmB;IACvF,IAAI,UAAU,GAAG,GAAG,CAAC;IACrB,MAAM,QAAQ,GAAkB;QAC9B,KAAK,EAAE,uBAAuB;QAC9B,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;QACnC,IAAI,EAAE,GAAG,CAAC,IAAI;KACf,CAAC;IAEF,gBAAgB;IAChB,MAAM,CAAC,KAAK,CAAC;QACX,GAAG;QACH,MAAM,EAAE,GAAG,CAAC,MAAM;QAClB,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,KAAK,EAAE,GAAG,CAAC,KAAK;QAChB,EAAE,EAAE,GAAG,CAAC,EAAE;QACV,MAAM,EAAG,GAAgD,CAAC,IAAI,EAAE,MAAM;KACvE,EAAE,eAAe,CAAC,CAAC;IAEpB,2BAA2B;IAC3B,IAAI,GAAG,YAAY,QAAQ,EAAE,CAAC;QAC5B,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;QAC5B,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;QAC7B,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;IAC3B,CAAC;SAAM,IAAI,GAAG,YAAY,MAAM,CAAC,6BAA6B,EAAE,CAAC;QAC/D,uBAAuB;QACvB,QAAQ,GAAG,CAAC,IAAI,EAAE,CAAC;YACjB,KAAK,OAAO;gBACV,UAAU,GAAG,GAAG,CAAC;gBACjB,QAAQ,CAAC,KAAK,GAAG,iBAAiB,CAAC;gBACnC,QAAQ,CAAC,OAAO,GAAG,yCAAyC,CAAC;gBAC7D,QAAQ,CAAC,IAAI,GAAG,iBAAiB,CAAC;gBAClC,MAAM;YACR,KAAK,OAAO;gBACV,UAAU,GAAG,GAAG,CAAC;gBACjB,QAAQ,CAAC,KAAK,GAAG,kBAAkB,CAAC;gBACpC,QAAQ,CAAC,OAAO,GAAG,qCAAqC,CAAC;gBACzD,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC;gBAC5B,MAAM;YACR,KAAK,OAAO;gBACV,UAAU,GAAG,GAAG,CAAC;gBACjB,QAAQ,CAAC,KAAK,GAAG,+BAA+B,CAAC;gBACjD,QAAQ,CAAC,OAAO,GAAG,kCAAkC,CAAC;gBACtD,QAAQ,CAAC,IAAI,GAAG,mBAAmB,CAAC;gBACpC,MAAM;YACR,KAAK,OAAO;gBACV,UAAU,GAAG,GAAG,CAAC;gBACjB,QAAQ,CAAC,KAAK,GAAG,4BAA4B,CAAC;gBAC9C,QAAQ,CAAC,OAAO,GAAG,0BAA0B,CAAC;gBAC9C,QAAQ,CAAC,IAAI,GAAG,eAAe,CAAC;gBAChC,MAAM;YACR;gBACE,UAAU,GAAG,GAAG,CAAC;gBACjB,QAAQ,CAAC,KAAK,GAAG,2BAA2B,CAAC;gBAC7C,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;gBAC/B,QAAQ,CAAC,IAAI,GAAG,UAAU,GAAG,CAAC,IAAI,EAAE,CAAC;QACzC,CAAC;IACH,CAAC;SAAM,IAAI,GAAG,YAAY,MAAM,CAAC,2BAA2B,EAAE,CAAC;QAC7D,UAAU,GAAG,GAAG,CAAC;QACjB,QAAQ,CAAC,KAAK,GAAG,kBAAkB,CAAC;QACpC,QAAQ,CAAC,OAAO,GAAG,uBAAuB,CAAC;QAC3C,QAAQ,CAAC,IAAI,GAAG,kBAAkB,CAAC;QAEnC,6CAA6C;QAC7C,MAAM,eAAe,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAClE,IAAI,eAAe,EAAE,CAAC;YACpB,QAAQ,CAAC,OAAO,GAAG;gBACjB,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC;gBACzB,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC;aAC1B,CAAC;QACJ,CAAC;IACH,CAAC;SAAM,IAAI,GAAG,YAAY,QAAQ,EAAE,CAAC;QACnC,+BAA+B;QAC/B,UAAU,GAAG,GAAG,CAAC;QACjB,QAAQ,CAAC,KAAK,GAAG,kBAAkB,CAAC;QACpC,QAAQ,CAAC,IAAI,GAAG,kBAAkB,CAAC;QACnC,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;YACtC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACvB,OAAO,EAAE,CAAC,CAAC,OAAO;SACnB,CAAC,CAAC,CAAC;IACN,CAAC;SAAM,IAAI,GAAG,CAAC,IAAI,KAAK,mBAAmB,EAAE,CAAC;QAC5C,UAAU,GAAG,GAAG,CAAC;QACjB,QAAQ,CAAC,KAAK,GAAG,eAAe,CAAC;QACjC,QAAQ,CAAC,IAAI,GAAG,eAAe,CAAC;IAClC,CAAC;SAAM,IAAI,GAAG,CAAC,IAAI,KAAK,mBAAmB,EAAE,CAAC;QAC5C,UAAU,GAAG,GAAG,CAAC;QACjB,QAAQ,CAAC,KAAK,GAAG,eAAe,CAAC;QACjC,QAAQ,CAAC,IAAI,GAAG,eAAe,CAAC;IAClC,CAAC;SAAM,IAAI,GAAG,CAAC,IAAI,KAAK,aAAa,EAAE,CAAC;QACtC,UAAU,GAAG,GAAG,CAAC;QACjB,QAAQ,CAAC,KAAK,GAAG,mBAAmB,CAAC;QACrC,QAAQ,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAC/B,QAAQ,CAAC,IAAI,GAAG,mBAAmB,CAAC;IACtC,CAAC;SAAM,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QACxC,UAAU,GAAG,GAAG,CAAC;QACjB,QAAQ,CAAC,KAAK,GAAG,YAAY,CAAC;QAC9B,QAAQ,CAAC,OAAO,GAAG,8BAA8B,CAAC;QAClD,QAAQ,CAAC,IAAI,GAAG,YAAY,CAAC;IAC/B,CAAC;SAAM,CAAC;QACN,yBAAyB;QACzB,QAAQ,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;YACpD,CAAC,CAAC,8BAA8B;YAChC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;QAEhB,wCAAwC;QACxC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE,CAAC;YAC1C,QAAQ,CAAC,OAAO,GAAG;gBACjB,KAAK,EAAE,GAAG,CAAC,KAAK;aACjB,CAAC;QACJ,CAAC;IACH,CAAC;IAED,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxC,CAAC;AAED,yBAAyB;AACzB,MAAM,UAAU,eAAe,CAAC,GAAY,EAAE,GAAa;IACzD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;QACnB,KAAK,EAAE,WAAW;QAClB,OAAO,EAAE,UAAU,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE;QAC3C,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE;KACpC,CAAC,CAAC;AACL,CAAC;AAED,0BAA0B;AAC1B,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,YAAY,EAAE,GAAG,EAAE,CAAC,IAAI,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE,cAAc,CAAC;IACrE,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,QAAQ,CAAC,WAAW,EAAE,GAAG,EAAE,WAAW,CAAC;IAC5D,QAAQ,EAAE,CAAC,QAAgB,EAAE,EAAE,CAAC,IAAI,QAAQ,CAAC,GAAG,QAAQ,YAAY,EAAE,GAAG,EAAE,WAAW,CAAC;IACvF,UAAU,EAAE,CAAC,OAAe,EAAE,EAAE,CAAC,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,aAAa,CAAC;IAC1E,QAAQ,EAAE,CAAC,OAAe,EAAE,EAAE,CAAC,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,UAAU,CAAC;IACrE,eAAe,EAAE,GAAG,EAAE,CAAC,IAAI,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE,qBAAqB,CAAC;IACpF,WAAW,EAAE,CAAC,OAAO,GAAG,uBAAuB,EAAE,EAAE,CAAC,IAAI,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE,cAAc,CAAC;CAC/F,CAAC","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/middleware/errorHandler.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { Prisma } from '@prisma/client';\nimport logger from '../logger';\nimport { ZodError } from 'zod';\n\ninterface ErrorResponse {\n  error: string;\n  message?: string;\n  code?: string;\n  details?: unknown;\n  timestamp?: string;\n  path?: string;\n}\n\nexport class AppError extends Error {\n  statusCode: number;\n  code: string;\n  isOperational: boolean;\n\n  constructor(message: string, statusCode: number, code: string, isOperational = true) {\n    super(message);\n    this.statusCode = statusCode;\n    this.code = code;\n    this.isOperational = isOperational;\n    \n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nexport const asyncHandler = (fn: (req: Request, res: Response, next: NextFunction) => Promise<void>) => (req: Request, res: Response, next: NextFunction) => {\n  Promise.resolve(fn(req, res, next)).catch(next);\n};\n\nexport function errorHandler(err: Error, req: Request, res: Response, _next: NextFunction) {\n  let statusCode = 500;\n  const response: ErrorResponse = {\n    error: 'Internal Server Error',\n    timestamp: new Date().toISOString(),\n    path: req.path,\n  };\n\n  // Log the error\n  logger.error({\n    err,\n    method: req.method,\n    path: req.path,\n    query: req.query,\n    ip: req.ip,\n    userId: (req as Request & { user?: { userId?: string } }).user?.userId,\n  }, 'Request error');\n\n  // Handle known error types\n  if (err instanceof AppError) {\n    statusCode = err.statusCode;\n    response.error = err.message;\n    response.code = err.code;\n  } else if (err instanceof Prisma.PrismaClientKnownRequestError) {\n    // Handle Prisma errors\n    switch (err.code) {\n      case 'P2002':\n        statusCode = 409;\n        response.error = 'Duplicate entry';\n        response.message = 'A record with this value already exists';\n        response.code = 'DUPLICATE_ENTRY';\n        break;\n      case 'P2025':\n        statusCode = 404;\n        response.error = 'Record not found';\n        response.message = 'The requested record does not exist';\n        response.code = 'NOT_FOUND';\n        break;\n      case 'P2003':\n        statusCode = 400;\n        response.error = 'Foreign key constraint failed';\n        response.message = 'Referenced record does not exist';\n        response.code = 'FOREIGN_KEY_ERROR';\n        break;\n      case 'P2016':\n        statusCode = 400;\n        response.error = 'Query interpretation error';\n        response.message = 'Invalid query parameters';\n        response.code = 'INVALID_QUERY';\n        break;\n      default:\n        statusCode = 400;\n        response.error = 'Database operation failed';\n        response.message = err.message;\n        response.code = `PRISMA_${err.code}`;\n    }\n  } else if (err instanceof Prisma.PrismaClientValidationError) {\n    statusCode = 400;\n    response.error = 'Validation error';\n    response.message = 'Invalid data provided';\n    response.code = 'VALIDATION_ERROR';\n    \n    // Extract useful validation info if possible\n    const validationMatch = err.message.match(/Argument (\\w+): (.+)/);\n    if (validationMatch) {\n      response.details = {\n        field: validationMatch[1],\n        issue: validationMatch[2],\n      };\n    }\n  } else if (err instanceof ZodError) {\n    // Handle Zod validation errors\n    statusCode = 400;\n    response.error = 'Validation error';\n    response.code = 'VALIDATION_ERROR';\n    response.details = err.errors.map(e => ({\n      field: e.path.join('.'),\n      message: e.message,\n    }));\n  } else if (err.name === 'JsonWebTokenError') {\n    statusCode = 401;\n    response.error = 'Invalid token';\n    response.code = 'INVALID_TOKEN';\n  } else if (err.name === 'TokenExpiredError') {\n    statusCode = 401;\n    response.error = 'Token expired';\n    response.code = 'TOKEN_EXPIRED';\n  } else if (err.name === 'MulterError') {\n    statusCode = 400;\n    response.error = 'File upload error';\n    response.message = err.message;\n    response.code = 'FILE_UPLOAD_ERROR';\n  } else if (err.message.includes('CORS')) {\n    statusCode = 403;\n    response.error = 'CORS error';\n    response.message = 'Cross-origin request blocked';\n    response.code = 'CORS_ERROR';\n  } else {\n    // Generic error handling\n    response.error = process.env.NODE_ENV === 'production' \n      ? 'An unexpected error occurred' \n      : err.message;\n    \n    // Don't leak stack traces in production\n    if (process.env.NODE_ENV !== 'production') {\n      response.details = {\n        stack: err.stack,\n      };\n    }\n  }\n\n  res.status(statusCode).json(response);\n}\n\n// Catch unhandled routes\nexport function notFoundHandler(req: Request, res: Response) {\n  res.status(404).json({\n    error: 'Not Found',\n    message: `Cannot ${req.method} ${req.path}`,\n    code: 'ROUTE_NOT_FOUND',\n    timestamp: new Date().toISOString(),\n  });\n}\n\n// Common error generators\nexport const errors = {\n  unauthorized: () => new AppError('Unauthorized', 401, 'UNAUTHORIZED'),\n  forbidden: () => new AppError('Forbidden', 403, 'FORBIDDEN'),\n  notFound: (resource: string) => new AppError(`${resource} not found`, 404, 'NOT_FOUND'),\n  badRequest: (message: string) => new AppError(message, 400, 'BAD_REQUEST'),\n  conflict: (message: string) => new AppError(message, 409, 'CONFLICT'),\n  tooManyRequests: () => new AppError('Too many requests', 429, 'RATE_LIMIT_EXCEEDED'),\n  serverError: (message = 'Internal server error') => new AppError(message, 500, 'SERVER_ERROR'),\n};"],"version":3}