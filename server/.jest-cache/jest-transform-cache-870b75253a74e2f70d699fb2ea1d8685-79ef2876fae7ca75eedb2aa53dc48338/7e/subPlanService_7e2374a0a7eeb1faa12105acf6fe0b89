29c4429bbcd69cdd38b991f64b7baaf2
/* istanbul ignore next */
function cov_1ulyxmsrrx() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/subPlanService.ts";
  var hash = "640c0558865d7e98a90a99f46f7010d5182e84d4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/subPlanService.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 14
        },
        end: {
          line: 5,
          column: 59
        }
      },
      "1": {
        start: {
          line: 6,
          column: 14
        },
        end: {
          line: 6,
          column: 47
        }
      },
      "2": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 23
        }
      },
      "3": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 10,
          column: 35
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "5": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 12,
          column: 37
        }
      },
      "6": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "7": {
        start: {
          line: 14,
          column: 113
        },
        end: {
          line: 14,
          column: 120
        }
      },
      "8": {
        start: {
          line: 15,
          column: 66
        },
        end: {
          line: 41,
          column: 6
        }
      },
      "9": {
        start: {
          line: 42,
          column: 21
        },
        end: {
          line: 42,
          column: 23
        }
      },
      "10": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "11": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "12": {
        start: {
          line: 45,
          column: 31
        },
        end: {
          line: 45,
          column: 89
        }
      },
      "13": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 28
        }
      },
      "14": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 90
        }
      },
      "15": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 55,
          column: 8
        }
      },
      "16": {
        start: {
          line: 52,
          column: 26
        },
        end: {
          line: 55,
          column: 6
        }
      },
      "17": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 58,
          column: 88
        }
      },
      "18": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 56
        }
      },
      "19": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 86
        }
      },
      "20": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 58
        }
      },
      "21": {
        start: {
          line: 59,
          column: 28
        },
        end: {
          line: 59,
          column: 56
        }
      },
      "22": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 62,
          column: 72
        }
      },
      "23": {
        start: {
          line: 61,
          column: 23
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "24": {
        start: {
          line: 62,
          column: 21
        },
        end: {
          line: 62,
          column: 70
        }
      },
      "25": {
        start: {
          line: 63,
          column: 21
        },
        end: {
          line: 63,
          column: 43
        }
      },
      "26": {
        start: {
          line: 65,
          column: 27
        },
        end: {
          line: 65,
          column: 36
        }
      },
      "27": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "28": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "29": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "30": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 76,
          column: 17
        }
      },
      "31": {
        start: {
          line: 70,
          column: 36
        },
        end: {
          line: 70,
          column: 59
        }
      },
      "32": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 75,
          column: 23
        }
      },
      "33": {
        start: {
          line: 81,
          column: 27
        },
        end: {
          line: 86,
          column: 7
        }
      },
      "34": {
        start: {
          line: 81,
          column: 55
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "35": {
        start: {
          line: 88,
          column: 30
        },
        end: {
          line: 94,
          column: 7
        }
      },
      "36": {
        start: {
          line: 88,
          column: 57
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "37": {
        start: {
          line: 96,
          column: 25
        },
        end: {
          line: 98,
          column: 176
        }
      },
      "38": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 109,
          column: 6
        }
      },
      "39": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 33
        }
      },
      "40": {
        start: {
          line: 113,
          column: 19
        },
        end: {
          line: 113,
          column: 21
        }
      },
      "41": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 42
        }
      },
      "42": {
        start: {
          line: 114,
          column: 26
        },
        end: {
          line: 114,
          column: 40
        }
      },
      "43": {
        start: {
          line: 116,
          column: 18
        },
        end: {
          line: 116,
          column: 22
        }
      },
      "44": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "45": {
        start: {
          line: 117,
          column: 17
        },
        end: {
          line: 117,
          column: 18
        }
      },
      "46": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 119,
          column: 26
        }
      },
      "47": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 26
        }
      },
      "48": {
        start: {
          line: 120,
          column: 18
        },
        end: {
          line: 120,
          column: 32
        }
      },
      "49": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 41
        }
      },
      "50": {
        start: {
          line: 122,
          column: 21
        },
        end: {
          line: 122,
          column: 82
        }
      },
      "51": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 133,
          column: 16
        }
      },
      "52": {
        start: {
          line: 124,
          column: 45
        },
        end: {
          line: 124,
          column: 99
        }
      },
      "53": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 14
        }
      },
      "54": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 89
        }
      },
      "55": {
        start: {
          line: 136,
          column: 36
        },
        end: {
          line: 136,
          column: 87
        }
      },
      "56": {
        start: {
          line: 136,
          column: 56
        },
        end: {
          line: 136,
          column: 86
        }
      },
      "57": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 69
        }
      },
      "58": {
        start: {
          line: 139,
          column: 31
        },
        end: {
          line: 139,
          column: 56
        }
      },
      "59": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 144,
          column: 20
        }
      },
      "60": {
        start: {
          line: 143,
          column: 25
        },
        end: {
          line: 143,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "minToTime",
        decl: {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 18
          }
        },
        loc: {
          start: {
            line: 4,
            column: 24
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "buildSubPlanData",
        decl: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 9,
            column: 38
          }
        },
        loc: {
          start: {
            line: 9,
            column: 59
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 20
          }
        },
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 55,
            column: 6
          }
        },
        line: 52
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 17
          }
        },
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 57,
            column: 56
          }
        },
        line: 57
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 58,
            column: 18
          }
        },
        loc: {
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 58,
            column: 86
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 18
          },
          end: {
            line: 59,
            column: 19
          }
        },
        loc: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 59,
            column: 56
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 61,
            column: 17
          }
        },
        loc: {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 61,
            column: 57
          }
        },
        line: 61
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 62,
            column: 13
          },
          end: {
            line: 62,
            column: 14
          }
        },
        loc: {
          start: {
            line: 62,
            column: 21
          },
          end: {
            line: 62,
            column: 70
          }
        },
        line: 62
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 81,
            column: 44
          },
          end: {
            line: 81,
            column: 45
          }
        },
        loc: {
          start: {
            line: 81,
            column: 55
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 81
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 88,
            column: 43
          },
          end: {
            line: 88,
            column: 44
          }
        },
        loc: {
          start: {
            line: 88,
            column: 57
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 88
      },
      "10": {
        name: "generateSubPlan",
        decl: {
          start: {
            line: 111,
            column: 22
          },
          end: {
            line: 111,
            column: 37
          }
        },
        loc: {
          start: {
            line: 111,
            column: 68
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 111
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 114,
            column: 19
          },
          end: {
            line: 114,
            column: 20
          }
        },
        loc: {
          start: {
            line: 114,
            column: 26
          },
          end: {
            line: 114,
            column: 40
          }
        },
        line: 114
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 124,
            column: 37
          },
          end: {
            line: 124,
            column: 38
          }
        },
        loc: {
          start: {
            line: 124,
            column: 45
          },
          end: {
            line: 124,
            column: 99
          }
        },
        line: 124
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 136,
            column: 23
          },
          end: {
            line: 136,
            column: 24
          }
        },
        loc: {
          start: {
            line: 136,
            column: 36
          },
          end: {
            line: 136,
            column: 87
          }
        },
        line: 136
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 136,
            column: 50
          },
          end: {
            line: 136,
            column: 51
          }
        },
        loc: {
          start: {
            line: 136,
            column: 56
          },
          end: {
            line: 136,
            column: 86
          }
        },
        line: 136
      },
      "15": {
        name: "pullOutsText",
        decl: {
          start: {
            line: 138,
            column: 9
          },
          end: {
            line: 138,
            column: 21
          }
        },
        loc: {
          start: {
            line: 138,
            column: 32
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 138
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 139,
            column: 24
          },
          end: {
            line: 139,
            column: 25
          }
        },
        loc: {
          start: {
            line: 139,
            column: 31
          },
          end: {
            line: 139,
            column: 56
          }
        },
        line: 139
      },
      "17": {
        name: "formatContacts",
        decl: {
          start: {
            line: 141,
            column: 9
          },
          end: {
            line: 141,
            column: 23
          }
        },
        loc: {
          start: {
            line: 141,
            column: 27
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 141
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 143,
            column: 13
          },
          end: {
            line: 143,
            column: 14
          }
        },
        loc: {
          start: {
            line: 143,
            column: 25
          },
          end: {
            line: 143,
            column: 37
          }
        },
        line: 143
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 45
          },
          end: {
            line: 9,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 55
          },
          end: {
            line: 9,
            column: 57
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 12
          },
          end: {
            line: 14,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 27
          },
          end: {
            line: 14,
            column: 31
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 14,
            column: 33
          },
          end: {
            line: 14,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 51
          },
          end: {
            line: 14,
            column: 55
          }
        }],
        line: 14
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 57
          },
          end: {
            line: 14,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 72
          },
          end: {
            line: 14,
            column: 76
          }
        }],
        line: 14
      },
      "4": {
        loc: {
          start: {
            line: 14,
            column: 78
          },
          end: {
            line: 14,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 90
          },
          end: {
            line: 14,
            column: 95
          }
        }],
        line: 14
      },
      "5": {
        loc: {
          start: {
            line: 14,
            column: 97
          },
          end: {
            line: 14,
            column: 107
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 106
          },
          end: {
            line: 14,
            column: 107
          }
        }],
        line: 14
      },
      "6": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 17,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 23
          },
          end: {
            line: 17,
            column: 44
          }
        }, {
          start: {
            line: 17,
            column: 47
          },
          end: {
            line: 17,
            column: 68
          }
        }],
        line: 17
      },
      "7": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 28,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 14
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 28,
            column: 14
          },
          end: {
            line: 28,
            column: 16
          }
        }],
        line: 23
      },
      "8": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 40,
            column: 16
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 14
          },
          end: {
            line: 39,
            column: 14
          }
        }, {
          start: {
            line: 40,
            column: 14
          },
          end: {
            line: 40,
            column: 16
          }
        }],
        line: 29
      },
      "9": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "10": {
        loc: {
          start: {
            line: 45,
            column: 31
          },
          end: {
            line: 45,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 31
          },
          end: {
            line: 45,
            column: 51
          }
        }, {
          start: {
            line: 45,
            column: 55
          },
          end: {
            line: 45,
            column: 89
          }
        }],
        line: 45
      },
      "11": {
        loc: {
          start: {
            line: 49,
            column: 70
          },
          end: {
            line: 49,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 70
          },
          end: {
            line: 49,
            column: 80
          }
        }, {
          start: {
            line: 49,
            column: 84
          },
          end: {
            line: 49,
            column: 86
          }
        }],
        line: 49
      },
      "12": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "13": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "14": {
        loc: {
          start: {
            line: 85,
            column: 21
          },
          end: {
            line: 85,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 33
          },
          end: {
            line: 85,
            column: 42
          }
        }, {
          start: {
            line: 85,
            column: 45
          },
          end: {
            line: 85,
            column: 97
          }
        }],
        line: 85
      },
      "15": {
        loc: {
          start: {
            line: 93,
            column: 19
          },
          end: {
            line: 93,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 19
          },
          end: {
            line: 93,
            column: 36
          }
        }, {
          start: {
            line: 93,
            column: 40
          },
          end: {
            line: 93,
            column: 49
          }
        }],
        line: 93
      },
      "16": {
        loc: {
          start: {
            line: 96,
            column: 25
          },
          end: {
            line: 98,
            column: 176
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 10
          },
          end: {
            line: 97,
            column: 226
          }
        }, {
          start: {
            line: 98,
            column: 10
          },
          end: {
            line: 98,
            column: 176
          }
        }],
        line: 96
      },
      "17": {
        loc: {
          start: {
            line: 103,
            column: 18
          },
          end: {
            line: 103,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 18
          },
          end: {
            line: 103,
            column: 26
          }
        }, {
          start: {
            line: 103,
            column: 30
          },
          end: {
            line: 103,
            column: 32
          }
        }],
        line: 103
      },
      "18": {
        loc: {
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 44
          }
        }, {
          start: {
            line: 104,
            column: 48
          },
          end: {
            line: 104,
            column: 57
          }
        }],
        line: 104
      },
      "19": {
        loc: {
          start: {
            line: 105,
            column: 18
          },
          end: {
            line: 105,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 105,
            column: 33
          },
          end: {
            line: 105,
            column: 68
          }
        }, {
          start: {
            line: 105,
            column: 71
          },
          end: {
            line: 105,
            column: 80
          }
        }],
        line: 105
      },
      "20": {
        loc: {
          start: {
            line: 106,
            column: 15
          },
          end: {
            line: 106,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 30
          },
          end: {
            line: 106,
            column: 44
          }
        }, {
          start: {
            line: 106,
            column: 47
          },
          end: {
            line: 106,
            column: 56
          }
        }],
        line: 106
      },
      "21": {
        loc: {
          start: {
            line: 107,
            column: 18
          },
          end: {
            line: 107,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 36
          },
          end: {
            line: 107,
            column: 53
          }
        }, {
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 107,
            column: 65
          }
        }],
        line: 107
      },
      "22": {
        loc: {
          start: {
            line: 111,
            column: 44
          },
          end: {
            line: 111,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 111,
            column: 51
          },
          end: {
            line: 111,
            column: 52
          }
        }],
        line: 111
      },
      "23": {
        loc: {
          start: {
            line: 111,
            column: 54
          },
          end: {
            line: 111,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 111,
            column: 64
          },
          end: {
            line: 111,
            column: 66
          }
        }],
        line: 111
      },
      "24": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 119,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 119,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "25": {
        loc: {
          start: {
            line: 124,
            column: 71
          },
          end: {
            line: 124,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 71
          },
          end: {
            line: 124,
            column: 81
          }
        }, {
          start: {
            line: 124,
            column: 85
          },
          end: {
            line: 124,
            column: 91
          }
        }, {
          start: {
            line: 124,
            column: 95
          },
          end: {
            line: 124,
            column: 97
          }
        }],
        line: 124
      },
      "26": {
        loc: {
          start: {
            line: 126,
            column: 24
          },
          end: {
            line: 126,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 24
          },
          end: {
            line: 126,
            column: 39
          }
        }, {
          start: {
            line: 126,
            column: 43
          },
          end: {
            line: 126,
            column: 45
          }
        }],
        line: 126
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/subPlanService.ts",
      mappings: "AAAA,OAAO,EAAE,MAAM,EAAU,MAAM,WAAW,CAAC;AAC3C,OAAO,WAAW,MAAM,QAAQ,CAAC;AACjC,OAAO,EAAE,kBAAkB,EAAE,MAAM,oBAAoB,CAAC;AAmCxD,SAAS,SAAS,CAAC,GAAW;IAC5B,MAAM,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACxD,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC5C,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;AACrB,CAAC;AAUD,MAAM,CAAC,KAAK,UAAU,gBAAgB,CACpC,IAAY,EACZ,UAA0B,EAAE;IAE5B,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,QAAQ,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;IAE7C,MAAM,EACJ,YAAY,GAAG,IAAI,EACnB,eAAe,GAAG,IAAI,EACtB,YAAY,GAAG,IAAI,EACnB,SAAS,GAAG,KAAK,EACjB,MAAM,GAAG,CAAC,GACX,GAAG,OAAO,CAAC;IAEZ,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;QAC9E,6DAA6D;QAC7D,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,kCAAkC;QAChG,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC;YAC5B,KAAK,EAAE,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE;SAC1D,CAAC;QACF,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC;QAC/D,IAAI,EAAE,yEAAyE;QAC/E,eAAe;YACb,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;gBAC3B,KAAK,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;gBACjC,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;aACrD,CAAC;YACJ,CAAC,CAAC,EAAE;QACN,YAAY;YACV,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;gBAC1B,KAAK,EAAE;oBACL,MAAM,EAAE,QAAQ;oBAChB,OAAO,EAAE,EAAE,MAAM,EAAE;iBACpB;gBACD,OAAO,EAAE;oBACP,OAAO,EAAE,IAAI;iBACd;gBACD,IAAI,EAAE,EAAE,EAAE,+BAA+B;aAC1C,CAAC;YACJ,CAAC,CAAC,EAAE;KACP,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAoB,EAAE,CAAC;IACrC,IAAI,IAAI,EAAE,CAAC;QACT,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YAC9B,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,EAAE,SAAS,IAAI,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,SAAS,CAAC;YAC9E,4DAA4D;YAC5D,wDAAwD;YACxD,MAAM,GAAG,GAAG,IAAI,CAAC;YACjB,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,IAAI,EAAE,EAAE,CAAC,CAAC;QAChF,CAAC;IACH,CAAC;IACD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CACnB,QAAQ,CAAC,IAAI,CAAC;QACZ,IAAI,EAAE,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,CAAC;QACzF,IAAI,EAAE,CAAC,CAAC,KAAK;KACd,CAAC,CACH,CAAC;IACF,MAAM;SACH,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,iBAAiB,CAAC;SAChD,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAElF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAEtD,MAAM,QAAQ,GAAG,MAAM;SACpB,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,SAAS,KAAK,kBAAkB,CAAC;SACjD,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAEnE,MAAM,QAAQ,GAAG,KAAK,EAAE,eAEX,CAAC;IAEd,8CAA8C;IAC9C,MAAM,cAAc,GAAG,IAAI,GAAG,EAO3B,CAAC;IAEJ,IAAI,IAAI,EAAE,CAAC;QACT,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;YAC9B,IAAI,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC;gBAC5B,KAAK,MAAM,eAAe,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACrD,MAAM,OAAO,GAAG,eAAe,CAAC,OAAO,CAAC;oBACxC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE;wBAC7B,IAAI,EAAE,OAAO,CAAC,IAAI;wBAClB,WAAW,EAAE,OAAO,CAAC,WAAW;wBAChC,OAAO,EAAE,OAAO,CAAC,OAAO;qBACzB,CAAC,CAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,2CAA2C;IAC3C,MAAM,cAAc,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACjD,EAAE,EAAE,IAAI,CAAC,EAAE;QACX,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,MAAM,EAAE,IAAI,CAAC,MAAM;QACnB,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;KAC1F,CAAC,CAAC,CAAC;IAEJ,kBAAkB;IAClB,MAAM,iBAAiB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACnD,EAAE,EAAE,OAAO,CAAC,EAAE;QACd,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,WAAW,EAAE,OAAO,CAAC,WAAW;QAChC,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,SAAS,EAAE,OAAO,CAAC,SAAS,IAAI,SAAS;KAC1C,CAAC,CAAC,CAAC;IAEJ,yBAAyB;IACzB,MAAM,YAAY,GAAG,KAAK,EAAE,iBAAiB;QAC3C,CAAC,CAAC,uBAAuB,KAAK,CAAC,iBAAiB,0KAA0K;QAC1N,CAAC,CAAC,sKAAsK,CAAC;IAE3K,OAAO;QACL,IAAI,EAAE,QAAQ,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1C,QAAQ;QACR,QAAQ;QACR,QAAQ,EAAE,QAAQ,IAAI,EAAE;QACxB,UAAU,EAAE,KAAK,EAAE,iBAAiB,IAAI,SAAS;QACjD,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS;QACxE,KAAK,EAAE,YAAY,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS;QAChD,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,SAAS;QACzD,YAAY;KACb,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,eAAe,CACnC,IAAY,EACZ,IAAI,GAAG,CAAC,EACR,UAA0B,EAAE;IAE5B,MAAM,GAAG,GAAG,IAAI,WAAW,EAAE,CAAC;IAC9B,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,qGAAqG;IACrG,MAAM,KAAK,GAAG,IAAI,CAAC;IAEnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;QAC9B,IAAI,CAAC,GAAG,CAAC;YAAE,GAAG,CAAC,OAAO,EAAE,CAAC;QACzB,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;QACjC,MAAM,IAAI,GAAG,MAAM,gBAAgB,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;QAE3E,MAAM,kBAAkB,CACtB;YACE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;YACzF,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,IAAI,CAAC,UAAU,IAAI,EAAE;YACjC,YAAY,EACV,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,yCAAyC;YACxE,iBAAiB,EAAE,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC;YAChD,kBAAkB,EAAE,IAAI,CAAC,QAAQ;YACjC,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,EACD,GAAG,CACJ,CAAC;IACJ,CAAC;IACD,GAAG,CAAC,GAAG,EAAE,CAAC;IACV,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC;AAED,SAAS,YAAY,CAAC,QAA4C;IAChE,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnE,CAAC;AAED,SAAS,cAAc,CAAC,CAAyB;IAC/C,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;SACrB,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;SAC7B,IAAI,CAAC,IAAI,CAAC,CAAC;AAChB,CAAC",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/subPlanService.ts"],
      sourcesContent: ["import { prisma, Prisma } from '../prisma';\nimport PDFDocument from 'pdfkit';\nimport { generateSubPlanPDF } from './subPlanGenerator';\n\nexport interface ScheduleEntry {\n  time: string;\n  activity?: string;\n  note?: string;\n}\n\nexport interface SubPlanData {\n  date: string;\n  schedule: ScheduleEntry[];\n  pullOuts: { time: string; reason: string }[];\n  contacts: Record<string, string>;\n  procedures?: string;\n  outcomes?: Array<{\n    code: string;\n    description: string;\n    subject: string;\n  }>;\n  goals?: Array<{\n    id: number;\n    text: string;\n    status: string;\n    studentName?: string;\n  }>;\n  routines?: Array<{\n    id: number;\n    title: string;\n    description: string;\n    category: string;\n    timeOfDay?: string;\n  }>;\n  fallbackPlan?: string;\n}\n\nfunction minToTime(min: number): string {\n  const h = String(Math.floor(min / 60)).padStart(2, '0');\n  const m = String(min % 60).padStart(2, '0');\n  return `${h}:${m}`;\n}\n\nexport interface SubPlanOptions {\n  includeGoals?: boolean;\n  includeRoutines?: boolean;\n  includePlans?: boolean;\n  anonymize?: boolean;\n  userId?: number;\n}\n\nexport async function buildSubPlanData(\n  date: string,\n  options: SubPlanOptions = {},\n): Promise<SubPlanData> {\n  const dayStart = new Date(date);\n  dayStart.setUTCHours(0, 0, 0, 0);\n  const dayEnd = new Date(dayStart);\n  dayEnd.setUTCDate(dayStart.getUTCDate() + 1);\n\n  const {\n    includeGoals = true,\n    includeRoutines = true,\n    includePlans = true,\n    anonymize = false,\n    userId = 1,\n  } = options;\n\n  const [plan, events, blocks, prefs, routines, studentGoals] = await Promise.all([\n    // DISABLED: Legacy dailyPlan model removed in ETFO migration\n    includePlans ? Promise.resolve(null) : Promise.resolve(null), // Legacy dailyPlan query disabled\n    prisma.calendarEvent.findMany({\n      where: { start: { lte: dayEnd }, end: { gte: dayStart } },\n    }),\n    prisma.unavailableBlock.findMany({ where: { date: dayStart } }),\n    null, // teacherPreferences archived - preferences now in User and ClassRoutine\n    includeRoutines\n      ? prisma.classRoutine.findMany({\n          where: { userId, isActive: true },\n          orderBy: [{ priority: 'desc' }, { category: 'asc' }],\n        })\n      : [],\n    includeGoals\n      ? prisma.studentGoal.findMany({\n          where: {\n            status: 'active',\n            student: { userId },\n          },\n          include: {\n            student: true,\n          },\n          take: 10, // Limit to most relevant goals\n        })\n      : [],\n  ]);\n\n  const schedule: ScheduleEntry[] = [];\n  if (plan) {\n    for (const item of plan.items) {\n      const _subjectId = item.slot?.subjectId ?? item.activity?.milestone.subjectId;\n      // DISABLED: Legacy activity model removed in ETFO migration\n      // const act = null; // Legacy activity queries disabled\n      const act = null;\n      schedule.push({ time: minToTime(item.startMin), activity: act?.title ?? '' });\n    }\n  }\n  events.forEach((e) =>\n    schedule.push({\n      time: minToTime(new Date(e.start).getUTCHours() * 60 + new Date(e.start).getUTCMinutes()),\n      note: e.title,\n    }),\n  );\n  blocks\n    .filter((b) => b.blockType === 'TEACHER_ABSENCE')\n    .forEach((b) => schedule.push({ time: minToTime(b.startMin), note: b.reason }));\n\n  schedule.sort((a, b) => a.time.localeCompare(b.time));\n\n  const pullOuts = blocks\n    .filter((b) => b.blockType === 'STUDENT_PULL_OUT')\n    .map((b) => ({ time: minToTime(b.startMin), reason: b.reason }));\n\n  const contacts = prefs?.subPlanContacts as Prisma.JsonValue | null as\n    | Record<string, string>\n    | undefined;\n\n  // Extract all unique outcomes from activities\n  const uniqueOutcomes = new Map<\n    string,\n    {\n      code: string;\n      description: string;\n      subject: string;\n    }\n  >();\n\n  if (plan) {\n    for (const item of plan.items) {\n      if (item.activity?.outcomes) {\n        for (const outcomeRelation of item.activity.outcomes) {\n          const outcome = outcomeRelation.outcome;\n          uniqueOutcomes.set(outcome.id, {\n            code: outcome.code,\n            description: outcome.description,\n            subject: outcome.subject,\n          });\n        }\n      }\n    }\n  }\n\n  // Format goals with optional anonymization\n  const formattedGoals = studentGoals.map((goal) => ({\n    id: goal.id,\n    text: goal.text,\n    status: goal.status,\n    studentName: anonymize ? undefined : `${goal.student.firstName} ${goal.student.lastName}`,\n  }));\n\n  // Format routines\n  const formattedRoutines = routines.map((routine) => ({\n    id: routine.id,\n    title: routine.title,\n    description: routine.description,\n    category: routine.category,\n    timeOfDay: routine.timeOfDay || undefined,\n  }));\n\n  // Generate fallback plan\n  const fallbackPlan = prefs?.subPlanProcedures\n    ? `Emergency Fallback: ${prefs.subPlanProcedures}\\n\\nIf technology fails or activities cannot be completed, use print materials from the substitute folder and engage students in quiet reading or journaling activities.`\n    : 'If technology fails or activities cannot be completed, use print materials from the substitute folder and engage students in quiet reading or journaling activities.';\n\n  return {\n    date: dayStart.toISOString().split('T')[0],\n    schedule,\n    pullOuts,\n    contacts: contacts || {},\n    procedures: prefs?.subPlanProcedures || undefined,\n    outcomes: includePlans ? Array.from(uniqueOutcomes.values()) : undefined,\n    goals: includeGoals ? formattedGoals : undefined,\n    routines: includeRoutines ? formattedRoutines : undefined,\n    fallbackPlan,\n  };\n}\n\nexport async function generateSubPlan(\n  date: string,\n  days = 1,\n  options: SubPlanOptions = {},\n): Promise<Buffer> {\n  const doc = new PDFDocument();\n  const chunks: Buffer[] = [];\n  doc.on('data', (c) => chunks.push(c));\n  // SubstituteInfo model archived - substitute information now managed in User and ClassRoutine models\n  const _info = null;\n\n  for (let i = 0; i < days; i++) {\n    if (i > 0) doc.addPage();\n    const d = new Date(date);\n    d.setUTCDate(d.getUTCDate() + i);\n    const data = await buildSubPlanData(d.toISOString().slice(0, 10), options);\n\n    await generateSubPlanPDF(\n      {\n        today: data.schedule.map((s) => ({ time: s.time, activity: s.activity ?? s.note ?? '' })),\n        upcoming: [],\n        procedures: data.procedures || '',\n        studentNotes:\n          pullOutsText(data.pullOuts), // Allergies now managed in Student model\n        emergencyContacts: formatContacts(data.contacts),\n        curriculumOutcomes: data.outcomes,\n        goals: data.goals,\n        routines: data.routines,\n        fallbackPlan: data.fallbackPlan,\n      },\n      doc,\n    );\n  }\n  doc.end();\n  return new Promise((resolve) => doc.on('end', () => resolve(Buffer.concat(chunks))));\n}\n\nfunction pullOutsText(pullOuts: { time: string; reason: string }[]): string {\n  return pullOuts.map((p) => `${p.time} - ${p.reason}`).join('\\n');\n}\n\nfunction formatContacts(c: Record<string, string>): string {\n  return Object.entries(c)\n    .map(([k, v]) => `${k}: ${v}`)\n    .join('\\n');\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "640c0558865d7e98a90a99f46f7010d5182e84d4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ulyxmsrrx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ulyxmsrrx();
import { prisma } from '../prisma';
import PDFDocument from 'pdfkit';
import { generateSubPlanPDF } from './subPlanGenerator';
function minToTime(min) {
  /* istanbul ignore next */
  cov_1ulyxmsrrx().f[0]++;
  const h =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[0]++, String(Math.floor(min / 60)).padStart(2, '0'));
  const m =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[1]++, String(min % 60).padStart(2, '0'));
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[2]++;
  return `${h}:${m}`;
}
export async function buildSubPlanData(date, options =
/* istanbul ignore next */
(cov_1ulyxmsrrx().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_1ulyxmsrrx().f[1]++;
  const dayStart =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[3]++, new Date(date));
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[4]++;
  dayStart.setUTCHours(0, 0, 0, 0);
  const dayEnd =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[5]++, new Date(dayStart));
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[6]++;
  dayEnd.setUTCDate(dayStart.getUTCDate() + 1);
  const {
    includeGoals =
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[1][0]++, true),
    includeRoutines =
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[2][0]++, true),
    includePlans =
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[3][0]++, true),
    anonymize =
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[4][0]++, false),
    userId =
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[5][0]++, 1)
  } =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[7]++, options);
  const [plan, events, blocks, prefs, routines, studentGoals] =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[8]++, await Promise.all([
  // DISABLED: Legacy dailyPlan model removed in ETFO migration
  includePlans ?
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().b[6][0]++, Promise.resolve(null)) :
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().b[6][1]++, Promise.resolve(null)),
  // Legacy dailyPlan query disabled
  prisma.calendarEvent.findMany({
    where: {
      start: {
        lte: dayEnd
      },
      end: {
        gte: dayStart
      }
    }
  }), prisma.unavailableBlock.findMany({
    where: {
      date: dayStart
    }
  }), null,
  // teacherPreferences archived - preferences now in User and ClassRoutine
  includeRoutines ?
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().b[7][0]++, prisma.classRoutine.findMany({
    where: {
      userId,
      isActive: true
    },
    orderBy: [{
      priority: 'desc'
    }, {
      category: 'asc'
    }]
  })) :
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().b[7][1]++, []), includeGoals ?
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().b[8][0]++, prisma.studentGoal.findMany({
    where: {
      status: 'active',
      student: {
        userId
      }
    },
    include: {
      student: true
    },
    take: 10 // Limit to most relevant goals
  })) :
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().b[8][1]++, [])]));
  const schedule =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[9]++, []);
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[10]++;
  if (plan) {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().b[9][0]++;
    cov_1ulyxmsrrx().s[11]++;
    for (const item of plan.items) {
      const _subjectId =
      /* istanbul ignore next */
      (cov_1ulyxmsrrx().s[12]++,
      /* istanbul ignore next */
      (cov_1ulyxmsrrx().b[10][0]++, item.slot?.subjectId) ??
      /* istanbul ignore next */
      (cov_1ulyxmsrrx().b[10][1]++, item.activity?.milestone.subjectId));
      // DISABLED: Legacy activity model removed in ETFO migration
      // const act = null; // Legacy activity queries disabled
      const act =
      /* istanbul ignore next */
      (cov_1ulyxmsrrx().s[13]++, null);
      /* istanbul ignore next */
      cov_1ulyxmsrrx().s[14]++;
      schedule.push({
        time: minToTime(item.startMin),
        activity:
        /* istanbul ignore next */
        (cov_1ulyxmsrrx().b[11][0]++, act?.title) ??
        /* istanbul ignore next */
        (cov_1ulyxmsrrx().b[11][1]++, '')
      });
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ulyxmsrrx().b[9][1]++;
  }
  cov_1ulyxmsrrx().s[15]++;
  events.forEach(e => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[2]++;
    cov_1ulyxmsrrx().s[16]++;
    return schedule.push({
      time: minToTime(new Date(e.start).getUTCHours() * 60 + new Date(e.start).getUTCMinutes()),
      note: e.title
    });
  });
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[17]++;
  blocks.filter(b => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[3]++;
    cov_1ulyxmsrrx().s[18]++;
    return b.blockType === 'TEACHER_ABSENCE';
  }).forEach(b => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[4]++;
    cov_1ulyxmsrrx().s[19]++;
    return schedule.push({
      time: minToTime(b.startMin),
      note: b.reason
    });
  });
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[20]++;
  schedule.sort((a, b) => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[5]++;
    cov_1ulyxmsrrx().s[21]++;
    return a.time.localeCompare(b.time);
  });
  const pullOuts =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[22]++, blocks.filter(b => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[6]++;
    cov_1ulyxmsrrx().s[23]++;
    return b.blockType === 'STUDENT_PULL_OUT';
  }).map(b => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[7]++;
    cov_1ulyxmsrrx().s[24]++;
    return {
      time: minToTime(b.startMin),
      reason: b.reason
    };
  }));
  const contacts =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[25]++, prefs?.subPlanContacts);
  // Extract all unique outcomes from activities
  const uniqueOutcomes =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[26]++, new Map());
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[27]++;
  if (plan) {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().b[12][0]++;
    cov_1ulyxmsrrx().s[28]++;
    for (const item of plan.items) {
      /* istanbul ignore next */
      cov_1ulyxmsrrx().s[29]++;
      if (item.activity?.outcomes) {
        /* istanbul ignore next */
        cov_1ulyxmsrrx().b[13][0]++;
        cov_1ulyxmsrrx().s[30]++;
        for (const outcomeRelation of item.activity.outcomes) {
          const outcome =
          /* istanbul ignore next */
          (cov_1ulyxmsrrx().s[31]++, outcomeRelation.outcome);
          /* istanbul ignore next */
          cov_1ulyxmsrrx().s[32]++;
          uniqueOutcomes.set(outcome.id, {
            code: outcome.code,
            description: outcome.description,
            subject: outcome.subject
          });
        }
      } else
      /* istanbul ignore next */
      {
        cov_1ulyxmsrrx().b[13][1]++;
      }
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ulyxmsrrx().b[12][1]++;
  }
  // Format goals with optional anonymization
  const formattedGoals =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[33]++, studentGoals.map(goal => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[8]++;
    cov_1ulyxmsrrx().s[34]++;
    return {
      id: goal.id,
      text: goal.text,
      status: goal.status,
      studentName: anonymize ?
      /* istanbul ignore next */
      (cov_1ulyxmsrrx().b[14][0]++, undefined) :
      /* istanbul ignore next */
      (cov_1ulyxmsrrx().b[14][1]++, `${goal.student.firstName} ${goal.student.lastName}`)
    };
  }));
  // Format routines
  const formattedRoutines =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[35]++, routines.map(routine => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[9]++;
    cov_1ulyxmsrrx().s[36]++;
    return {
      id: routine.id,
      title: routine.title,
      description: routine.description,
      category: routine.category,
      timeOfDay:
      /* istanbul ignore next */
      (cov_1ulyxmsrrx().b[15][0]++, routine.timeOfDay) ||
      /* istanbul ignore next */
      (cov_1ulyxmsrrx().b[15][1]++, undefined)
    };
  }));
  // Generate fallback plan
  const fallbackPlan =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[37]++, prefs?.subPlanProcedures ?
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().b[16][0]++, `Emergency Fallback: ${prefs.subPlanProcedures}\n\nIf technology fails or activities cannot be completed, use print materials from the substitute folder and engage students in quiet reading or journaling activities.`) :
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().b[16][1]++, 'If technology fails or activities cannot be completed, use print materials from the substitute folder and engage students in quiet reading or journaling activities.'));
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[38]++;
  return {
    date: dayStart.toISOString().split('T')[0],
    schedule,
    pullOuts,
    contacts:
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[17][0]++, contacts) ||
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[17][1]++, {}),
    procedures:
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[18][0]++, prefs?.subPlanProcedures) ||
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[18][1]++, undefined),
    outcomes: includePlans ?
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[19][0]++, Array.from(uniqueOutcomes.values())) :
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[19][1]++, undefined),
    goals: includeGoals ?
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[20][0]++, formattedGoals) :
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[20][1]++, undefined),
    routines: includeRoutines ?
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[21][0]++, formattedRoutines) :
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().b[21][1]++, undefined),
    fallbackPlan
  };
}
export async function generateSubPlan(date, days =
/* istanbul ignore next */
(cov_1ulyxmsrrx().b[22][0]++, 1), options =
/* istanbul ignore next */
(cov_1ulyxmsrrx().b[23][0]++, {})) {
  /* istanbul ignore next */
  cov_1ulyxmsrrx().f[10]++;
  const doc =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[39]++, new PDFDocument());
  const chunks =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[40]++, []);
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[41]++;
  doc.on('data', c => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[11]++;
    cov_1ulyxmsrrx().s[42]++;
    return chunks.push(c);
  });
  // SubstituteInfo model archived - substitute information now managed in User and ClassRoutine models
  const _info =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[43]++, null);
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[44]++;
  for (let i =
  /* istanbul ignore next */
  (cov_1ulyxmsrrx().s[45]++, 0); i < days; i++) {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().s[46]++;
    if (i > 0) {
      /* istanbul ignore next */
      cov_1ulyxmsrrx().b[24][0]++;
      cov_1ulyxmsrrx().s[47]++;
      doc.addPage();
    } else
    /* istanbul ignore next */
    {
      cov_1ulyxmsrrx().b[24][1]++;
    }
    const d =
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().s[48]++, new Date(date));
    /* istanbul ignore next */
    cov_1ulyxmsrrx().s[49]++;
    d.setUTCDate(d.getUTCDate() + i);
    const data =
    /* istanbul ignore next */
    (cov_1ulyxmsrrx().s[50]++, await buildSubPlanData(d.toISOString().slice(0, 10), options));
    /* istanbul ignore next */
    cov_1ulyxmsrrx().s[51]++;
    await generateSubPlanPDF({
      today: data.schedule.map(s => {
        /* istanbul ignore next */
        cov_1ulyxmsrrx().f[12]++;
        cov_1ulyxmsrrx().s[52]++;
        return {
          time: s.time,
          activity:
          /* istanbul ignore next */
          (cov_1ulyxmsrrx().b[25][0]++, s.activity) ??
          /* istanbul ignore next */
          (cov_1ulyxmsrrx().b[25][1]++, s.note) ??
          /* istanbul ignore next */
          (cov_1ulyxmsrrx().b[25][2]++, '')
        };
      }),
      upcoming: [],
      procedures:
      /* istanbul ignore next */
      (cov_1ulyxmsrrx().b[26][0]++, data.procedures) ||
      /* istanbul ignore next */
      (cov_1ulyxmsrrx().b[26][1]++, ''),
      studentNotes: pullOutsText(data.pullOuts),
      // Allergies now managed in Student model
      emergencyContacts: formatContacts(data.contacts),
      curriculumOutcomes: data.outcomes,
      goals: data.goals,
      routines: data.routines,
      fallbackPlan: data.fallbackPlan
    }, doc);
  }
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[53]++;
  doc.end();
  /* istanbul ignore next */
  cov_1ulyxmsrrx().s[54]++;
  return new Promise(resolve => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[13]++;
    cov_1ulyxmsrrx().s[55]++;
    return doc.on('end', () => {
      /* istanbul ignore next */
      cov_1ulyxmsrrx().f[14]++;
      cov_1ulyxmsrrx().s[56]++;
      return resolve(Buffer.concat(chunks));
    });
  });
}
function pullOutsText(pullOuts) {
  /* istanbul ignore next */
  cov_1ulyxmsrrx().f[15]++;
  cov_1ulyxmsrrx().s[57]++;
  return pullOuts.map(p => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[16]++;
    cov_1ulyxmsrrx().s[58]++;
    return `${p.time} - ${p.reason}`;
  }).join('\n');
}
function formatContacts(c) {
  /* istanbul ignore next */
  cov_1ulyxmsrrx().f[17]++;
  cov_1ulyxmsrrx().s[59]++;
  return Object.entries(c).map(([k, v]) => {
    /* istanbul ignore next */
    cov_1ulyxmsrrx().f[18]++;
    cov_1ulyxmsrrx().s[60]++;
    return `${k}: ${v}`;
  }).join('\n');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,