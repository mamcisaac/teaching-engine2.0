{"version":3,"names":["cov_9l4kftptv","actualCoverage","PDFDocument","generateSubPlanPDF","data","doc","f","s","Promise","resolve","d","b","chunks","on","chunk","push","Buffer","concat","fontSize","text","align","moveDown","underline","today","forEach","item","time","activity","upcoming","day","date","summary","procedures","studentNotes","emergencyContacts","routines","length","byCategory","routine","category","Object","entries","font","charAt","toUpperCase","slice","timeStr","timeOfDay","title","indent","continued","description","goals","goal","studentStr","studentName","curriculumOutcomes","bySubject","outcome","subject","code","outcomes","fallbackPlan","end"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/subPlanGenerator.ts"],"sourcesContent":["import PDFDocument from 'pdfkit';\nimport type * as PDFKit from 'pdfkit';\n\nexport interface DaySchedule {\n  time: string;\n  activity: string;\n}\n\nexport interface UpcomingOverview {\n  date: string;\n  summary: string;\n}\n\nexport interface SubPlanInput {\n  today: DaySchedule[];\n  upcoming: UpcomingOverview[];\n  procedures: string;\n  studentNotes: string;\n  emergencyContacts: string;\n  curriculumOutcomes?: Array<{\n    code: string;\n    description: string;\n    subject: string;\n  }>;\n  goals?: Array<{\n    id: number;\n    text: string;\n    status: string;\n    studentName?: string;\n  }>;\n  routines?: Array<{\n    id: number;\n    title: string;\n    description: string;\n    category: string;\n    timeOfDay?: string;\n  }>;\n  fallbackPlan?: string;\n}\n\n/**\n * Generate a PDF buffer for an emergency substitute plan.\n */\nexport function generateSubPlanPDF(\n  data: SubPlanInput,\n  doc?: PDFKit.PDFDocument,\n): Promise<Buffer | void> {\n  return new Promise((resolve) => {\n    const d = doc ?? new PDFDocument();\n    const chunks: Buffer[] = [];\n    if (!doc) {\n      d.on('data', (chunk: Buffer) => chunks.push(chunk));\n      d.on('end', () => resolve(Buffer.concat(chunks)));\n    }\n\n    d.fontSize(16).text('Emergency Sub Plan', { align: 'center' });\n    d.moveDown();\n\n    d.fontSize(12).text('Today', { underline: true });\n    data.today.forEach((item) => {\n      d.text(`${item.time} - ${item.activity}`);\n    });\n    d.moveDown();\n\n    d.text('Next 3 Days', { underline: true });\n    data.upcoming.forEach((day) => {\n      d.text(`${day.date}: ${day.summary}`);\n    });\n    d.moveDown();\n\n    d.text('Classroom Procedures', { underline: true });\n    d.text(data.procedures);\n    d.moveDown();\n\n    d.text('Student Notes', { underline: true });\n    d.text(data.studentNotes);\n    d.moveDown();\n\n    d.text('Emergency Contacts', { underline: true });\n    d.text(data.emergencyContacts);\n    d.moveDown();\n\n    // Add class routines section if available\n    if (data.routines && data.routines.length > 0) {\n      d.text('Class Routines', { underline: true });\n      \n      // Group routines by category\n      const byCategory: Record<string, typeof data.routines> = {};\n      data.routines.forEach((routine) => {\n        if (!byCategory[routine.category]) {\n          byCategory[routine.category] = [];\n        }\n        byCategory[routine.category].push(routine);\n      });\n\n      // Print routines by category\n      Object.entries(byCategory).forEach(([category, routines]) => {\n        d.font('Helvetica-Bold').text(category.charAt(0).toUpperCase() + category.slice(1));\n        d.font('Helvetica');\n\n        routines.forEach((routine) => {\n          const timeStr = routine.timeOfDay ? ` (${routine.timeOfDay})` : '';\n          d.text(`• ${routine.title}${timeStr}`, {\n            indent: 20,\n            continued: true,\n          });\n          d.text(` - ${routine.description}`, {\n            indent: 30,\n            continued: false,\n          });\n        });\n        d.moveDown(0.5);\n      });\n      d.moveDown();\n    }\n\n    // Add student goals section if available\n    if (data.goals && data.goals.length > 0) {\n      d.text('Current Student Goals', { underline: true });\n      data.goals.forEach((goal) => {\n        const studentStr = goal.studentName ? `${goal.studentName}: ` : '';\n        d.text(`• ${studentStr}${goal.text}`, {\n          indent: 20,\n          continued: false,\n        });\n      });\n      d.moveDown();\n    }\n\n    // Add curriculum outcomes section if available\n    if (data.curriculumOutcomes && data.curriculumOutcomes.length > 0) {\n      d.text('Learning Goals (Curriculum Outcomes)', { underline: true });\n\n      // Group outcomes by subject\n      const bySubject: Record<string, Array<{ code: string; description: string }>> = {};\n      data.curriculumOutcomes.forEach((outcome) => {\n        if (!bySubject[outcome.subject]) {\n          bySubject[outcome.subject] = [];\n        }\n        bySubject[outcome.subject].push({\n          code: outcome.code,\n          description: outcome.description,\n        });\n      });\n\n      // Print outcomes by subject\n      Object.entries(bySubject).forEach(([subject, outcomes]) => {\n        d.font('Helvetica-Bold').text(subject);\n        d.font('Helvetica');\n\n        outcomes.forEach((outcome) => {\n          d.text(`• ${outcome.code} – ${outcome.description}`, {\n            indent: 20,\n            continued: false,\n          });\n        });\n        d.moveDown(0.5);\n      });\n      d.moveDown();\n    }\n\n    // Add fallback plan section if available\n    if (data.fallbackPlan) {\n      d.text('Emergency Fallback Plan', { underline: true });\n      d.text(data.fallbackPlan);\n      d.moveDown();\n    }\n\n    if (!doc) {\n      d.end();\n    } else {\n      resolve();\n    }\n  });\n}\n"],"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","ignoreList":[]}