{"version":3,"names":["cov_17xg0gp44y","actualCoverage","Router","z","authMiddleware","AIActivityGeneratorService","ActivityDiscoveryService","router","s","aiGenerator","activityService","generateActivitySchema","object","searchQuery","string","optional","lessonContext","title","grade","number","min","max","subject","learningGoals","array","duration","section","enum","specificRequirements","activityType","materials","groupSize","language","curriculumExpectations","useSearchResults","boolean","default","enhanceActivitySchema","activityId","enhancements","addDifferentiation","addAssessment","adaptForGrade","translateTo","alignToCurriculum","saveActivitySchema","activity","description","detailedInstructions","assessmentSuggestions","differentiation","support","extension","safetyConsiderations","technologyRequirements","metadata","lessonPlanId","basedOnActivities","post","req","res","f","params","parse","body","searchResults","undefined","b","searchParams","query","gradeLevel","limit","results","search","Number","user","id","generatedActivity","generateActivity","json","success","data","error","console","status","count","Math","variations","generateActivityVariations","length","activityDetails","getActivityDetails","enhanceActivity","activityWithDefaults","savedActivity","saveGeneratedActivity"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/ai-activity-generation.ts"],"sourcesContent":["import { Router, Request, Response } from 'express';\nimport { z } from 'zod';\nimport { authMiddleware } from '../middleware/auth';\nimport { AIActivityGeneratorService } from '../services/aiActivityGeneratorService';\nimport { ActivityDiscoveryService } from '../services/activityDiscoveryService';\n\nconst router = Router();\nconst aiGenerator = new AIActivityGeneratorService();\nconst activityService = new ActivityDiscoveryService();\n\n// Schema for activity generation request\nconst generateActivitySchema = z.object({\n  searchQuery: z.string().optional(),\n  lessonContext: z\n    .object({\n      title: z.string(),\n      grade: z.number().min(1).max(8),\n      subject: z.string(),\n      learningGoals: z.array(z.string()),\n      duration: z.number().min(5).max(180),\n      section: z.enum(['mindsOn', 'action', 'consolidation']).optional(),\n    })\n    .optional(),\n  specificRequirements: z\n    .object({\n      activityType: z.string().optional(),\n      materials: z.array(z.string()).optional(),\n      groupSize: z.string().optional(),\n      language: z.string().optional(),\n      curriculumExpectations: z.array(z.string()).optional(),\n    })\n    .optional(),\n  useSearchResults: z.boolean().default(true),\n});\n\n// Schema for activity enhancement request\nconst enhanceActivitySchema = z.object({\n  activityId: z.string(),\n  enhancements: z.object({\n    addDifferentiation: z.boolean().optional(),\n    addAssessment: z.boolean().optional(),\n    adaptForGrade: z.number().min(1).max(8).optional(),\n    translateTo: z.string().optional(),\n    alignToCurriculum: z.array(z.string()).optional(),\n  }),\n});\n\n// Schema for saving generated activity\nconst saveActivitySchema = z.object({\n  activity: z.object({\n    title: z.string(),\n    description: z.string(),\n    detailedInstructions: z.array(z.string()),\n    duration: z.number(),\n    activityType: z.string(),\n    materials: z.array(z.string()),\n    groupSize: z.string(),\n    learningGoals: z.array(z.string()),\n    assessmentSuggestions: z.array(z.string()),\n    differentiation: z.object({\n      support: z.array(z.string()),\n      extension: z.array(z.string()),\n    }),\n    safetyConsiderations: z.array(z.string()).optional(),\n    technologyRequirements: z.array(z.string()).optional(),\n  }),\n  metadata: z\n    .object({\n      lessonPlanId: z.string().optional(),\n      basedOnActivities: z.array(z.string()).optional(),\n    })\n    .optional(),\n});\n\n/**\n * Generate an AI-powered activity\n */\nrouter.post('/generate', authMiddleware, async (req: Request, res: Response) => {\n  try {\n    const params = generateActivitySchema.parse(req.body);\n    let searchResults = undefined;\n\n    // If requested, perform a search first to get inspiration\n    if (params.useSearchResults && (params.searchQuery || params.lessonContext)) {\n      const searchParams = {\n        query: params.searchQuery || params.lessonContext?.title || '',\n        gradeLevel: params.lessonContext?.grade,\n        subject: params.lessonContext?.subject,\n        language: params.specificRequirements?.language || 'fr',\n        limit: 5,\n      };\n\n      const results = await activityService.search(searchParams, Number(req.user!.id));\n      searchResults = results;\n    }\n\n    // Generate the activity\n    const generatedActivity = await aiGenerator.generateActivity({\n      searchResults,\n      lessonContext: params.lessonContext,\n      specificRequirements: params.specificRequirements,\n    });\n\n    res.json({\n      success: true,\n      data: generatedActivity,\n    });\n  } catch (error) {\n    console.error('Error generating activity:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to generate activity',\n    });\n  }\n});\n\n/**\n * Generate multiple activity variations\n */\nrouter.post('/generate-variations', authMiddleware, async (req: Request, res: Response) => {\n  try {\n    const params = generateActivitySchema.parse(req.body);\n    const count = Math.min(req.body.count || 3, 5); // Max 5 variations\n\n    let searchResults = undefined;\n\n    // If requested, perform a search first\n    if (params.useSearchResults && (params.searchQuery || params.lessonContext)) {\n      const searchParams = {\n        query: params.searchQuery || params.lessonContext?.title || '',\n        gradeLevel: params.lessonContext?.grade,\n        subject: params.lessonContext?.subject,\n        language: params.specificRequirements?.language || 'fr',\n        limit: 10,\n      };\n\n      const results = await activityService.search(searchParams, Number(req.user!.id));\n      searchResults = results;\n    }\n\n    // Generate variations\n    const variations = await aiGenerator.generateActivityVariations(\n      {\n        searchResults,\n        lessonContext: params.lessonContext,\n        specificRequirements: params.specificRequirements,\n      },\n      count,\n    );\n\n    res.json({\n      success: true,\n      data: {\n        variations,\n        count: variations.length,\n      },\n    });\n  } catch (error) {\n    console.error('Error generating activity variations:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to generate activity variations',\n    });\n  }\n});\n\n/**\n * Enhance an existing activity\n */\nrouter.post('/enhance', authMiddleware, async (req: Request, res: Response) => {\n  try {\n    const params = enhanceActivitySchema.parse(req.body);\n\n    // Get the activity details\n    const activityDetails = await activityService.getActivityDetails(params.activityId);\n\n    if (!activityDetails) {\n      return res.status(404).json({\n        success: false,\n        error: 'Activity not found',\n      });\n    }\n\n    // Enhance the activity\n    const enhancements = await aiGenerator.enhanceActivity(activityDetails, params.enhancements);\n\n    res.json({\n      success: true,\n      data: enhancements,\n    });\n  } catch (error) {\n    console.error('Error enhancing activity:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to enhance activity',\n    });\n  }\n});\n\n/**\n * Save a generated activity\n */\nrouter.post('/save', authMiddleware, async (req: Request, res: Response) => {\n  try {\n    const params = saveActivitySchema.parse(req.body);\n\n    // Convert the activity object with proper defaults for required fields\n    const activityWithDefaults = {\n      title: params.activity.title,\n      description: params.activity.description,\n      detailedInstructions: params.activity.detailedInstructions,\n      duration: params.activity.duration,\n      activityType: params.activity.activityType,\n      materials: params.activity.materials,\n      groupSize: params.activity.groupSize,\n      learningGoals: params.activity.learningGoals,\n      assessmentSuggestions: params.activity.assessmentSuggestions,\n      differentiation: {\n        support: params.activity.differentiation.support,\n        extension: params.activity.differentiation.extension,\n      },\n      safetyConsiderations: params.activity.safetyConsiderations,\n      technologyRequirements: params.activity.technologyRequirements,\n    };\n\n    // Save the generated activity\n    const savedActivity = await aiGenerator.saveGeneratedActivity(\n      activityWithDefaults,\n      Number(req.user!.id),\n      params.metadata,\n    );\n\n    res.json({\n      success: true,\n      data: savedActivity,\n    });\n  } catch (error) {\n    console.error('Error saving generated activity:', error);\n    res.status(500).json({\n      success: false,\n      error: 'Failed to save generated activity',\n    });\n  }\n});\n\nexport default router;\n"],"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","ignoreList":[]}