{"version":3,"names":["cov_1njajv6dpf","actualCoverage","express","prisma","z","rateLimit","cuidSchema","DOMPurify","router","s","Router","stateRateLimit","windowMs","max","message","error","standardHeaders","legacyHeaders","sanitizeText","text","f","sanitize","ALLOWED_TAGS","ALLOWED_ATTR","csrfProtection","req","res","next","origin","get","referer","allowedOrigins","b","process","env","CLIENT_URL","method","status","json","sourceUrl","URL","includes","WorkingHoursSchema","object","start","string","regex","end","DraftChangesSchema","planId","optional","title","content","timestamp","number","positive","changes","record","strict","OfflineDataSchema","pendingChanges","array","syncVersion","WeeklyPlannerStateSchema","defaultView","enum","default","timeSlotDuration","int","min","showWeekends","boolean","startOfWeek","workingHours","sidebarExpanded","showMiniCalendar","showResourcePanel","compactMode","theme","autoSave","autoSaveInterval","showUncoveredOutcomes","defaultLessonDuration","currentWeekStart","datetime","lastActiveView","draftChanges","maxHistorySize","hasOfflineChanges","offlineData","user","id","userId","plannerState","weeklyPlannerState","findUnique","where","create","data","JSON","stringify","Date","undoHistory","redoHistory","lastSyncedAt","responseState","parse","console","put","validationResult","safeParse","body","success","details","errors","stateData","sanitizedDraftChanges","undefined","Object","fromEntries","entries","map","key","value","updateData","upsert","update","weekStart","params","isNaN","getTime","weekEnd","setDate","getDate","lessonPlans","eTFOLessonPlan","findMany","date","gte","lt","include","unitPlan","select","expectations","expectation","resources","orderBy","daybookEntries","daybookEntry","lessonPlan","allExpectations","curriculumExpectation","count","coveredExpectations","some","getFullYear","weeklyState","progress","totalExpectations","coveragePercentage","Math","round","post","defaultState"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/planner-state.ts"],"sourcesContent":["import express, { Response } from 'express';\nimport { prisma } from '../prisma';\nimport { z } from 'zod';\nimport rateLimit from 'express-rate-limit';\nimport { cuidSchema } from '../validation';\nimport DOMPurify from 'isomorphic-dompurify';\n\nconst router = express.Router();\n\n// Rate limiting for state operations\nconst stateRateLimit = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // Limit each IP to 100 requests per windowMs\n  message: { error: 'Too many state update requests, please try again later' },\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\n// Sanitize text content to prevent XSS\nconst sanitizeText = (text: string): string => {\n  return DOMPurify.sanitize(text, { ALLOWED_TAGS: [], ALLOWED_ATTR: [] });\n};\n\n// CSRF protection middleware\nconst csrfProtection = (\n  req: express.Request,\n  res: express.Response,\n  next: express.NextFunction,\n) => {\n  const origin = req.get('origin');\n  const referer = req.get('referer');\n  const allowedOrigins = [\n    process.env.CLIENT_URL || 'http://localhost:5173',\n    'http://localhost:5173',\n    'http://localhost:3000',\n  ];\n\n  if (req.method !== 'GET' && req.method !== 'HEAD') {\n    if (!origin && !referer) {\n      return res.status(403).json({ error: 'CSRF protection: Missing origin/referer header' });\n    }\n\n    const sourceUrl = origin || (referer ? new URL(referer).origin : '');\n    if (!allowedOrigins.includes(sourceUrl)) {\n      return res.status(403).json({ error: 'CSRF protection: Invalid origin' });\n    }\n  }\n\n  next();\n};\n\n// Secure validation schema for weekly planner state\nconst WorkingHoursSchema = z.object({\n  start: z.string().regex(/^\\d{2}:\\d{2}$/),\n  end: z.string().regex(/^\\d{2}:\\d{2}$/),\n});\n\n// Secure schema for draft changes to prevent injection\nconst DraftChangesSchema = z\n  .object({\n    planId: cuidSchema().optional(),\n    title: z.string().max(200).optional(),\n    content: z.string().max(10000).optional(),\n    timestamp: z.number().positive().optional(),\n    changes: z.record(z.string().max(100), z.string().max(1000)).optional(),\n  })\n  .strict();\n\n// Secure schema for offline data\nconst OfflineDataSchema = z\n  .object({\n    pendingChanges: z.array(DraftChangesSchema).max(50).optional(),\n    timestamp: z.number().positive().optional(),\n    syncVersion: z.string().max(50).optional(),\n  })\n  .strict();\n\nconst WeeklyPlannerStateSchema = z\n  .object({\n    // View preferences\n    defaultView: z.enum(['week', 'month', 'agenda']).default('week'),\n    timeSlotDuration: z.number().int().min(15).max(60).default(30),\n    showWeekends: z.boolean().default(false),\n    startOfWeek: z.number().int().min(0).max(1).default(1),\n    workingHours: WorkingHoursSchema.default({ start: '08:00', end: '16:00' }),\n\n    // UI preferences\n    sidebarExpanded: z.boolean().default(true),\n    showMiniCalendar: z.boolean().default(true),\n    showResourcePanel: z.boolean().default(true),\n    compactMode: z.boolean().default(false),\n    theme: z.enum(['light', 'dark', 'system']).default('light'),\n\n    // Planning preferences\n    autoSave: z.boolean().default(true),\n    autoSaveInterval: z.number().min(5).max(300).default(30),\n    showUncoveredOutcomes: z.boolean().default(true),\n    defaultLessonDuration: z.number().min(15).max(240).default(60),\n\n    // Current state\n    currentWeekStart: z.string().datetime().optional(),\n    lastActiveView: z.string().max(100).optional(),\n    draftChanges: DraftChangesSchema.optional(),\n\n    // Advanced features\n    maxHistorySize: z.number().min(10).max(100).default(50),\n\n    // Offline support\n    hasOfflineChanges: z.boolean().default(false),\n    offlineData: OfflineDataSchema.optional(),\n  })\n  .strict();\n\n// Use global Express.Request type extended with user property\n\n// GET /api/planner/state - Get user's planner state\nrouter.get('/state', async (req: express.Request, res: express.Response) => {\n  try {\n    if (!req.user?.id) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const userId = req.user.id;\n\n    let plannerState = await prisma.weeklyPlannerState.findUnique({\n      where: { userId },\n    });\n\n    // Create default state if it doesn't exist\n    if (!plannerState) {\n      plannerState = await prisma.weeklyPlannerState.create({\n        data: {\n          userId,\n          defaultView: 'week',\n          timeSlotDuration: 30,\n          showWeekends: false,\n          startOfWeek: 1,\n          workingHours: JSON.stringify({ start: '08:00', end: '16:00' }),\n          sidebarExpanded: true,\n          showMiniCalendar: true,\n          showResourcePanel: true,\n          compactMode: false,\n          theme: 'light',\n          autoSave: true,\n          autoSaveInterval: 30,\n          showUncoveredOutcomes: true,\n          defaultLessonDuration: 60,\n          currentWeekStart: new Date(),\n          undoHistory: '[]',\n          redoHistory: '[]',\n          maxHistorySize: 50,\n          lastSyncedAt: new Date(),\n          hasOfflineChanges: false,\n        },\n      });\n    }\n\n    // Parse JSON fields for response\n    const responseState = {\n      ...plannerState,\n      workingHours: JSON.parse(plannerState.workingHours),\n      draftChanges: plannerState.draftChanges ? JSON.parse(plannerState.draftChanges) : null,\n      undoHistory: JSON.parse(plannerState.undoHistory),\n      redoHistory: JSON.parse(plannerState.redoHistory),\n      offlineData: plannerState.offlineData ? JSON.parse(plannerState.offlineData) : null,\n    };\n\n    res.json(responseState);\n  } catch (error) {\n    console.error('Error fetching planner state:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\n// PUT /api/planner/state - Update user's planner state\nrouter.put(\n  '/state',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  stateRateLimit as any,\n  csrfProtection,\n  async (req: express.Request, res: Response) => {\n    try {\n      if (!req.user?.id) {\n        return res.status(401).json({ error: 'Unauthorized' });\n      }\n\n      const userId = req.user.id;\n\n      // Validate the request body\n      const validationResult = WeeklyPlannerStateSchema.safeParse(req.body);\n      if (!validationResult.success) {\n        return res.status(400).json({\n          error: 'Invalid planner state data',\n          details: validationResult.error.errors,\n        });\n      }\n\n      const stateData = validationResult.data;\n\n      // Sanitize text fields to prevent XSS\n      const sanitizedDraftChanges = stateData.draftChanges\n        ? {\n            ...stateData.draftChanges,\n            title: stateData.draftChanges.title\n              ? sanitizeText(stateData.draftChanges.title)\n              : undefined,\n            content: stateData.draftChanges.content\n              ? sanitizeText(stateData.draftChanges.content)\n              : undefined,\n            changes: stateData.draftChanges.changes\n              ? Object.fromEntries(\n                  Object.entries(stateData.draftChanges.changes).map(([key, value]) => [\n                    sanitizeText(key),\n                    sanitizeText(value),\n                  ]),\n                )\n              : undefined,\n          }\n        : undefined;\n\n      // Prepare data for database with JSON serialization\n      const updateData = {\n        defaultView: stateData.defaultView,\n        timeSlotDuration: stateData.timeSlotDuration,\n        showWeekends: stateData.showWeekends,\n        startOfWeek: stateData.startOfWeek,\n        workingHours: JSON.stringify(stateData.workingHours),\n        sidebarExpanded: stateData.sidebarExpanded,\n        showMiniCalendar: stateData.showMiniCalendar,\n        showResourcePanel: stateData.showResourcePanel,\n        compactMode: stateData.compactMode,\n        theme: stateData.theme,\n        autoSave: stateData.autoSave,\n        autoSaveInterval: stateData.autoSaveInterval,\n        showUncoveredOutcomes: stateData.showUncoveredOutcomes,\n        defaultLessonDuration: stateData.defaultLessonDuration,\n        currentWeekStart: stateData.currentWeekStart\n          ? new Date(stateData.currentWeekStart)\n          : new Date(),\n        lastActiveView: stateData.lastActiveView ? sanitizeText(stateData.lastActiveView) : null,\n        draftChanges: sanitizedDraftChanges ? JSON.stringify(sanitizedDraftChanges) : null,\n        maxHistorySize: stateData.maxHistorySize,\n        hasOfflineChanges: stateData.hasOfflineChanges,\n        offlineData: stateData.offlineData ? JSON.stringify(stateData.offlineData) : null,\n        lastSyncedAt: new Date(),\n      };\n\n      // Upsert the planner state\n      const plannerState = await prisma.weeklyPlannerState.upsert({\n        where: { userId },\n        update: updateData,\n        create: {\n          userId,\n          ...updateData,\n          undoHistory: '[]',\n          redoHistory: '[]',\n        },\n      });\n\n      // Parse JSON fields for response\n      const responseState = {\n        ...plannerState,\n        workingHours: JSON.parse(plannerState.workingHours),\n        draftChanges: plannerState.draftChanges ? JSON.parse(plannerState.draftChanges) : null,\n        undoHistory: JSON.parse(plannerState.undoHistory),\n        redoHistory: JSON.parse(plannerState.redoHistory),\n        offlineData: plannerState.offlineData ? JSON.parse(plannerState.offlineData) : null,\n      };\n\n      res.json(responseState);\n    } catch (error) {\n      console.error('Error updating planner state:', error);\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  },\n);\n\n// GET /api/planner/week/:weekStart/state - Get state for specific week\nrouter.get('/week/:weekStart/state', async (req: express.Request, res: Response) => {\n  try {\n    if (!req.user?.id) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const userId = req.user.id;\n    const weekStart = new Date(req.params.weekStart);\n\n    if (isNaN(weekStart.getTime())) {\n      return res.status(400).json({ error: 'Invalid week start date' });\n    }\n\n    // Get lesson plans for the week\n    const weekEnd = new Date(weekStart);\n    weekEnd.setDate(weekEnd.getDate() + 7);\n\n    const lessonPlans = await prisma.eTFOLessonPlan.findMany({\n      where: {\n        userId,\n        date: {\n          gte: weekStart,\n          lt: weekEnd,\n        },\n      },\n      include: {\n        unitPlan: {\n          select: {\n            id: true,\n            title: true,\n          },\n        },\n        expectations: {\n          include: {\n            expectation: true,\n          },\n        },\n        resources: true,\n      },\n      orderBy: {\n        date: 'asc',\n      },\n    });\n\n    // Get daybook entries for the week\n    const daybookEntries = await prisma.daybookEntry.findMany({\n      where: {\n        userId,\n        date: {\n          gte: weekStart,\n          lt: weekEnd,\n        },\n      },\n      include: {\n        lessonPlan: {\n          select: {\n            id: true,\n            title: true,\n          },\n        },\n        expectations: {\n          include: {\n            expectation: true,\n          },\n        },\n      },\n      orderBy: {\n        date: 'asc',\n      },\n    });\n\n    // Get uncovered curriculum expectations for progress tracking\n    const allExpectations = await prisma.curriculumExpectation.count({\n      where: {\n        // Add any filters for user's grade/subject preferences\n      },\n    });\n\n    const coveredExpectations = await prisma.curriculumExpectation.count({\n      where: {\n        lessonPlans: {\n          some: {\n            lessonPlan: {\n              userId,\n              date: {\n                gte: new Date(new Date().getFullYear(), 0, 1), // Start of academic year\n                lt: new Date(new Date().getFullYear() + 1, 0, 1),\n              },\n            },\n          },\n        },\n      },\n    });\n\n    const weeklyState = {\n      weekStart,\n      weekEnd,\n      lessonPlans,\n      daybookEntries,\n      progress: {\n        totalExpectations: allExpectations,\n        coveredExpectations,\n        coveragePercentage:\n          allExpectations > 0 ? Math.round((coveredExpectations / allExpectations) * 100) : 0,\n      },\n    };\n\n    res.json(weeklyState);\n  } catch (error) {\n    console.error('Error fetching weekly state:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\n// POST /api/planner/state/reset - Reset planner state to defaults\nrouter.post(\n  '/state/reset',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  stateRateLimit as any,\n  csrfProtection,\n  async (req: express.Request, res: Response) => {\n    try {\n      if (!req.user?.id) {\n        return res.status(401).json({ error: 'Unauthorized' });\n      }\n\n      const userId = req.user.id;\n\n      const defaultState = {\n        defaultView: 'week' as const,\n        timeSlotDuration: 30,\n        showWeekends: false,\n        startOfWeek: 1,\n        workingHours: JSON.stringify({ start: '08:00', end: '16:00' }),\n        sidebarExpanded: true,\n        showMiniCalendar: true,\n        showResourcePanel: true,\n        compactMode: false,\n        theme: 'light' as const,\n        autoSave: true,\n        autoSaveInterval: 30,\n        showUncoveredOutcomes: true,\n        defaultLessonDuration: 60,\n        currentWeekStart: new Date(),\n        lastActiveView: null,\n        draftChanges: null,\n        undoHistory: '[]',\n        redoHistory: '[]',\n        maxHistorySize: 50,\n        lastSyncedAt: new Date(),\n        hasOfflineChanges: false,\n        offlineData: null,\n      };\n\n      const plannerState = await prisma.weeklyPlannerState.upsert({\n        where: { userId },\n        update: defaultState,\n        create: {\n          userId,\n          ...defaultState,\n        },\n      });\n\n      // Parse JSON fields for response\n      const responseState = {\n        ...plannerState,\n        workingHours: JSON.parse(plannerState.workingHours),\n        draftChanges: plannerState.draftChanges ? JSON.parse(plannerState.draftChanges) : null,\n        undoHistory: JSON.parse(plannerState.undoHistory),\n        redoHistory: JSON.parse(plannerState.redoHistory),\n        offlineData: plannerState.offlineData ? JSON.parse(plannerState.offlineData) : null,\n      };\n\n      res.json(responseState);\n    } catch (error) {\n      console.error('Error resetting planner state:', error);\n      res.status(500).json({ error: 'Internal server error' });\n    }\n  },\n);\n\nexport default router;\n"],"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","ignoreList":[]}