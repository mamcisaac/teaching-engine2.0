{"version":3,"names":["cov_zlqgnnl0c","actualCoverage","DEFAULT_OPTIONS","s","allowedDomains","allowedProtocols","allowPrivateIPs","maxRedirects","isValidExternalURL","urlString","options","b","f","config","url","URL","includes","protocol","valid","error","join","isAllowedDomain","some","domain","hostname","endsWith","isPrivateIP","isLocalhost","Error","message","ipv4PrivateRanges","ipv6PrivateRanges","range","test","localhostPatterns","toLowerCase","sanitizeURL","trim","replace","slice","safeFetch","init","sanitizedUrl","validation","headers","Headers","set","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","redirect","clearTimeout","validateFileSize","maxSizeBytes","contentLength","get","size","parseInt","getAllowedDomains","addAllowedDomain","push","removeAllowedDomain","index","indexOf","splice"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/utils/urlValidator.ts"],"sourcesContent":["/**\n * URL Validation Utilities for Security\n * Prevents SSRF attacks and validates external URLs\n */\n\nexport interface URLValidationOptions {\n  allowedDomains?: string[];\n  allowedProtocols?: string[];\n  allowPrivateIPs?: boolean;\n  maxRedirects?: number;\n}\n\n// Default safe configuration\nconst DEFAULT_OPTIONS: Required<URLValidationOptions> = {\n  allowedDomains: [\n    'curriculum.gov.bc.ca',\n    'www.princeedwardisland.ca',\n    'www.dcp.edu.gov.on.ca',\n    'edu.gov.on.ca',\n    'oercommons.org',\n    'www.khanacademy.org',\n    'www.readworks.org',\n  ],\n  allowedProtocols: ['https:', 'http:'],\n  allowPrivateIPs: false,\n  maxRedirects: 3,\n};\n\n/**\n * Validate if a URL is safe for external requests\n * Prevents SSRF attacks by checking domain whitelist and blocking private IPs\n */\nexport function isValidExternalURL(\n  urlString: string,\n  options: URLValidationOptions = {}\n): { valid: boolean; error?: string; url?: URL } {\n  const config = { ...DEFAULT_OPTIONS, ...options };\n\n  try {\n    const url = new URL(urlString);\n\n    // Check protocol\n    if (!config.allowedProtocols.includes(url.protocol)) {\n      return {\n        valid: false,\n        error: `Protocol ${url.protocol} not allowed. Only ${config.allowedProtocols.join(', ')} are permitted.`,\n      };\n    }\n\n    // Check if domain is in allowlist\n    const isAllowedDomain = config.allowedDomains.some((domain) => {\n      return url.hostname === domain || url.hostname.endsWith('.' + domain);\n    });\n\n    if (!isAllowedDomain) {\n      return {\n        valid: false,\n        error: `Domain ${url.hostname} not in allowlist. Only trusted educational domains are permitted.`,\n      };\n    }\n\n    // Check for private IP addresses if not allowed\n    if (!config.allowPrivateIPs && isPrivateIP(url.hostname)) {\n      return {\n        valid: false,\n        error: 'Private IP addresses are not allowed for security reasons.',\n      };\n    }\n\n    // Check for localhost/loopback\n    if (isLocalhost(url.hostname)) {\n      return {\n        valid: false,\n        error: 'Localhost and loopback addresses are not allowed for security reasons.',\n      };\n    }\n\n    return { valid: true, url };\n  } catch (error) {\n    return {\n      valid: false,\n      error: `Invalid URL format: ${error instanceof Error ? error.message : 'Unknown error'}`,\n    };\n  }\n}\n\n/**\n * Check if hostname is a private IP address\n */\nfunction isPrivateIP(hostname: string): boolean {\n  // IPv4 private ranges\n  const ipv4PrivateRanges = [\n    /^10\\./,                    // 10.0.0.0/8\n    /^172\\.(1[6-9]|2[0-9]|3[0-1])\\./, // 172.16.0.0/12\n    /^192\\.168\\./,              // 192.168.0.0/16\n    /^169\\.254\\./,              // 169.254.0.0/16 (link-local)\n  ];\n\n  // IPv6 private ranges (simplified)\n  const ipv6PrivateRanges = [\n    /^fc00:/,                   // fc00::/7\n    /^fe80:/,                   // fe80::/10 (link-local)\n    /^::1$/,                    // ::1 (loopback)\n  ];\n\n  // Check IPv4\n  for (const range of ipv4PrivateRanges) {\n    if (range.test(hostname)) {\n      return true;\n    }\n  }\n\n  // Check IPv6\n  for (const range of ipv6PrivateRanges) {\n    if (range.test(hostname)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Check if hostname is localhost/loopback\n */\nfunction isLocalhost(hostname: string): boolean {\n  const localhostPatterns = [\n    'localhost',\n    '127.0.0.1',\n    '0.0.0.0',\n    '::1',\n    '0:0:0:0:0:0:0:1',\n  ];\n\n  return localhostPatterns.includes(hostname.toLowerCase());\n}\n\n/**\n * Sanitize URL input by removing dangerous characters\n */\nexport function sanitizeURL(url: string): string {\n  return url\n    .trim()\n    // eslint-disable-next-line no-control-regex\n    .replace(/[\\x00-\\x1f\\x7f-\\x9f]/g, '') // Remove control characters\n    .replace(/[<>\"'{}|\\\\^`]/g, '')        // Remove dangerous characters\n    .slice(0, 2048);                      // Limit length\n}\n\n/**\n * Safe fetch wrapper that validates URLs before making requests\n */\nexport async function safeFetch(\n  urlString: string,\n  init?: RequestInit,\n  options?: URLValidationOptions\n): Promise<Response> {\n  const sanitizedUrl = sanitizeURL(urlString);\n  const validation = isValidExternalURL(sanitizedUrl, options);\n\n  if (!validation.valid) {\n    throw new Error(`URL validation failed: ${validation.error}`);\n  }\n\n  // Add security headers\n  const headers = new Headers(init?.headers);\n  headers.set('User-Agent', 'Teaching Engine 2.0 Educational Bot (+https://teaching-engine.ca/bot)');\n  \n  // Set timeouts to prevent hanging requests\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout\n\n  try {\n    const response = await fetch(validation.url!, {\n      ...init,\n      headers,\n      signal: controller.signal,\n      // Prevent following redirects automatically for security\n      redirect: 'manual',\n    });\n\n    clearTimeout(timeoutId);\n    return response;\n  } catch (error) {\n    clearTimeout(timeoutId);\n    throw error;\n  }\n}\n\n/**\n * Validate file size from response headers before downloading\n */\nexport function validateFileSize(response: Response, maxSizeBytes: number = 50 * 1024 * 1024): boolean {\n  const contentLength = response.headers.get('content-length');\n  if (contentLength) {\n    const size = parseInt(contentLength, 10);\n    return size <= maxSizeBytes;\n  }\n  // If no content-length header, we'll need to check during download\n  return true;\n}\n\n/**\n * Get allowed domains for configuration display\n */\nexport function getAllowedDomains(): string[] {\n  return [...DEFAULT_OPTIONS.allowedDomains];\n}\n\n/**\n * Add allowed domain (for admin configuration)\n */\nexport function addAllowedDomain(domain: string): void {\n  if (!DEFAULT_OPTIONS.allowedDomains.includes(domain)) {\n    DEFAULT_OPTIONS.allowedDomains.push(domain);\n  }\n}\n\n/**\n * Remove allowed domain (for admin configuration)\n */\nexport function removeAllowedDomain(domain: string): void {\n  const index = DEFAULT_OPTIONS.allowedDomains.indexOf(domain);\n  if (index > -1) {\n    DEFAULT_OPTIONS.allowedDomains.splice(index, 1);\n  }\n}"],"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","ignoreList":[]}