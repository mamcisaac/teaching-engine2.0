{"version":3,"names":["cov_1x9o80dy6a","actualCoverage","Router","z","authenticate","generateAuthToken","hashPassword","validatePassword","asyncHandler","logger","loginSchema","s","object","email","string","password","min","registerSchema","name","authRoutes","prisma","f","router","post","req","res","parse","body","result","isProduction","process","env","NODE_ENV","cookieOptions","httpOnly","secure","sameSite","b","maxAge","path","cookie","token","json","error","warn","status","existingUser","user","findUnique","where","hashedPassword","create","data","role","id","toString","_","userWithoutPassword"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/auth.ts"],"sourcesContent":["/**\n * Authentication Routes\n * Handles user authentication and registration\n */\n\nimport { Router } from 'express';\nimport { PrismaClient } from '@teaching-engine/database';\nimport { z } from 'zod';\nimport {\n  authenticate,\n  generateAuthToken,\n  hashPassword,\n  validatePassword,\n} from '@/services/authService';\nimport { asyncHandler } from '@/middleware/errorHandler';\nimport logger from '@/logger';\n\nconst loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(1),\n});\n\nconst registerSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n  name: z.string().min(1),\n});\n\nexport function authRoutes(prisma: PrismaClient): Router {\n  const router = Router();\n\n  // Login endpoint\n  router.post(\n    '/login',\n    asyncHandler(async (req, res) => {\n      const { email, password } = loginSchema.parse(req.body);\n\n      try {\n        const result = await authenticate(email, password, prisma);\n\n        // Set JWT in httpOnly cookie for security\n        const isProduction = process.env.NODE_ENV === 'production';\n        const cookieOptions = {\n          httpOnly: true,\n          secure: isProduction,\n          sameSite: isProduction ? ('strict' as const) : ('lax' as const),\n          maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n          path: '/',\n        };\n\n        res.cookie('authToken', result.token, cookieOptions);\n        res.json(result);\n      } catch (error) {\n        logger.warn(`Failed login attempt for email: ${email}`, { error });\n        res.status(401).json({ error: 'Invalid credentials' });\n      }\n    }),\n  );\n\n  // Register endpoint\n  router.post(\n    '/register',\n    asyncHandler(async (req, res) => {\n      const { email, password, name } = registerSchema.parse(req.body);\n\n      // Validate password strength\n      await validatePassword(password);\n\n      // Check if user already exists\n      const existingUser = await prisma.user.findUnique({\n        where: { email },\n      });\n\n      if (existingUser) {\n        return res.status(409).json({ error: 'Email already exists' });\n      }\n\n      // Hash password\n      const hashedPassword = await hashPassword(password);\n\n      // Create user\n      const user = await prisma.user.create({\n        data: {\n          email,\n          password: hashedPassword,\n          name,\n          role: 'USER',\n        },\n      });\n\n      // Generate token\n      const token = await generateAuthToken(user.id.toString(), user.email);\n\n      // Return user without password\n      const { password: _, ...userWithoutPassword } = user;\n\n      // Set JWT in httpOnly cookie for security\n      const isProduction = process.env.NODE_ENV === 'production';\n      const cookieOptions = {\n        httpOnly: true,\n        secure: isProduction,\n        sameSite: isProduction ? ('strict' as const) : ('lax' as const),\n        maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n        path: '/',\n      };\n\n      res.cookie('authToken', token, cookieOptions);\n      res.status(201).json({\n        user: userWithoutPassword,\n        token,\n      });\n    }),\n  );\n\n  return router;\n}\n"],"mappings":"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","ignoreList":[]}