{"version":3,"names":["cov_2bd3yiomca","actualCoverage","extractMaterials","note","f","items","s","Set","lines","split","i","length","line","trim","header","match","b","rest","map","filter","Boolean","forEach","m","add","j","next","test","replace","Array","from","generateMaterialList","_weekStart","console","warn","updateMaterialList","weekStart","generateMaterialDetails","zipWeeklyPrintables","Buffer","alloc"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/materialGenerator.ts"],"sourcesContent":["// import { prisma } from '../prisma'; // Unused import\n\nexport function extractMaterials(note: string): string[] {\n  const items = new Set<string>();\n  const lines = note.split(/\\r?\\n/);\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i].trim();\n    const header = line.match(\n      /^(?:additional\\s+|extra\\s+)?(?:materials?|supplies)(?:\\s+needed)?:?\\s*(.*)/i,\n    );\n    if (header) {\n      const rest = header[1];\n      if (rest) {\n        rest\n          .split(/[;,]/)\n          .map((s) => s.trim())\n          .filter(Boolean)\n          .forEach((m) => items.add(m));\n      }\n      // Look for list items after the header\n      for (let j = i + 1; j < lines.length; j++) {\n        const next = lines[j].trim();\n        if (/^[-*]\\s+/.test(next)) {\n          next\n            .replace(/^[-*]\\s+/, '')\n            .split(/[;,]/)\n            .map((s) => s.trim())\n            .filter(Boolean)\n            .forEach((m) => items.add(m));\n        } else if (!next) {\n          continue;\n        } else {\n          break;\n        }\n      }\n      // Don't break - continue looking for more material sections\n    }\n  }\n  return Array.from(items);\n}\n\n/**\n * Generate a list of materials needed for the given week by scanning\n * activity notes for lines beginning with \"Materials:\".\n */\nexport async function generateMaterialList(_weekStart: string): Promise<string[]> {\n  // DISABLED: Legacy function that used lessonPlan/Activity models\n  // TODO: Reimplement using ETFO lesson plans and daybook entries\n  console.warn('generateMaterialList is disabled - legacy models removed');\n  return [];\n}\n\n/**\n * Update or create the material list record for the given week.\n */\nexport async function updateMaterialList(weekStart: string): Promise<void> {\n  const items = await generateMaterialList(weekStart);\n  \n  // DISABLED: MaterialList model has been archived\n  // TODO: Implement using ETFO UnitPlanResource and ETFOLessonPlanResource models\n  console.warn(`updateMaterialList is disabled - MaterialList model archived. Items for ${weekStart}:`, items);\n}\n\nexport interface ActivityMaterials {\n  day: number;\n  activityId: number;\n  title: string;\n  materials: string[];\n}\n\nexport async function generateMaterialDetails(_weekStart: string): Promise<ActivityMaterials[]> {\n  // DISABLED: Legacy function that used lessonPlan/Activity models\n  // TODO: Reimplement using ETFO lesson plans and daybook entries\n  console.warn('generateMaterialDetails is disabled - legacy models removed');\n  return [];\n}\n\nexport async function zipWeeklyPrintables(_weekStart: string): Promise<Buffer> {\n  // DISABLED: Legacy function that used lessonPlan/Activity models\n  // TODO: Reimplement using ETFO lesson plans and resources\n  console.warn('zipWeeklyPrintables is disabled - legacy models removed');\n  return Buffer.alloc(0);\n}\n"],"mappingskBM;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAlBN;AAEA,OAAM,SAAUE,gBAAgBA,CAACC,IAAY;EAAA;EAAAH,cAAA,GAAAI,CAAA;EAC3C,MAAMC,KAAK;EAAA;EAAA,CAAAL,cAAA,GAAAM,CAAA,OAAG,IAAIC,GAAG,EAAU;EAC/B,MAAMC,KAAK;EAAA;EAAA,CAAAR,cAAA,GAAAM,CAAA,OAAGH,IAAI,CAACM,KAAK,CAAC,OAAO,CAAC;EAAC;EAAAT,cAAA,GAAAM,CAAA;EAClC,KAAK,IAAII,CAAC;EAAA;EAAA,CAAAV,cAAA,GAAAM,CAAA,OAAG,CAAC,GAAEI,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,MAAME,IAAI;IAAA;IAAA,CAAAZ,cAAA,GAAAM,CAAA,OAAGE,KAAK,CAACE,CAAC,CAAC,CAACG,IAAI,EAAE;IAC5B,MAAMC,MAAM;IAAA;IAAA,CAAAd,cAAA,GAAAM,CAAA,OAAGM,IAAI,CAACG,KAAK,CACvB,6EAA6E,CAC9E;IAAC;IAAAf,cAAA,GAAAM,CAAA;IACF,IAAIQ,MAAM,EAAE;MAAA;MAAAd,cAAA,GAAAgB,CAAA;MACV,MAAMC,IAAI;MAAA;MAAA,CAAAjB,cAAA,GAAAM,CAAA,OAAGQ,MAAM,CAAC,CAAC,CAAC;MAAC;MAAAd,cAAA,GAAAM,CAAA;MACvB,IAAIW,IAAI,EAAE;QAAA;QAAAjB,cAAA,GAAAgB,CAAA;QAAAhB,cAAA,GAAAM,CAAA;QACRW,IAAI,CACDR,KAAK,CAAC,MAAM,CAAC,CACbS,GAAG,CAAEZ,CAAC,IAAK;UAAA;UAAAN,cAAA,GAAAI,CAAA;UAAAJ,cAAA,GAAAM,CAAA;UAAA,OAAAA,CAAC,CAACO,IAAI,EAAE;QAAF,CAAE,CAAC,CACpBM,MAAM,CAACC,OAAO,CAAC,CACfC,OAAO,CAAEC,CAAC,IAAK;UAAA;UAAAtB,cAAA,GAAAI,CAAA;UAAAJ,cAAA,GAAAM,CAAA;UAAA,OAAAD,KAAK,CAACkB,GAAG,CAACD,CAAC,CAAC;QAAD,CAAC,CAAC;MACjC,CAAC;MAAA;MAAA;QAAAtB,cAAA,GAAAgB,CAAA;MAAA;MACD;MAAAhB,cAAA,GAAAM,CAAA;MACA,KAAK,IAAIkB,CAAC;MAAA;MAAA,CAAAxB,cAAA,GAAAM,CAAA,QAAGI,CAAC,GAAG,CAAC,GAAEc,CAAC,GAAGhB,KAAK,CAACG,MAAM,EAAEa,CAAC,EAAE,EAAE;QACzC,MAAMC,IAAI;QAAA;QAAA,CAAAzB,cAAA,GAAAM,CAAA,QAAGE,KAAK,CAACgB,CAAC,CAAC,CAACX,IAAI,EAAE;QAAC;QAAAb,cAAA,GAAAM,CAAA;QAC7B,IAAI,UAAU,CAACoB,IAAI,CAACD,IAAI,CAAC,EAAE;UAAA;UAAAzB,cAAA,GAAAgB,CAAA;UAAAhB,cAAA,GAAAM,CAAA;UACzBmB,IAAI,CACDE,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CACvBlB,KAAK,CAAC,MAAM,CAAC,CACbS,GAAG,CAAEZ,CAAC,IAAK;YAAA;YAAAN,cAAA,GAAAI,CAAA;YAAAJ,cAAA,GAAAM,CAAA;YAAA,OAAAA,CAAC,CAACO,IAAI,EAAE;UAAF,CAAE,CAAC,CACpBM,MAAM,CAACC,OAAO,CAAC,CACfC,OAAO,CAAEC,CAAC,IAAK;YAAA;YAAAtB,cAAA,GAAAI,CAAA;YAAAJ,cAAA,GAAAM,CAAA;YAAA,OAAAD,KAAK,CAACkB,GAAG,CAACD,CAAC,CAAC;UAAD,CAAC,CAAC;QACjC,CAAC,MAAM;UAAA;UAAAtB,cAAA,GAAAgB,CAAA;UAAAhB,cAAA,GAAAM,CAAA;UAAA,IAAI,CAACmB,IAAI,EAAE;YAAA;YAAAzB,cAAA,GAAAgB,CAAA;YAAAhB,cAAA,GAAAM,CAAA;YAChB;UACF,CAAC,MAAM;YAAA;YAAAN,cAAA,GAAAgB,CAAA;YAAAhB,cAAA,GAAAM,CAAA;YACL;UACF;QAAA;MACF;MACA;IACF,CAAC;IAAA;IAAA;MAAAN,cAAA,GAAAgB,CAAA;IAAA;EACH;EAAC;EAAAhB,cAAA,GAAAM,CAAA;EACD,OAAOsB,KAAK,CAACC,IAAI,CAACxB,KAAK,CAAC;AAC1B;AAEA;;;;AAIA,OAAO,eAAeyB,oBAAoBA,CAACC,UAAkB;EAAA;EAAA/B,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAM,CAAA;EAC3D;EACA;EACA0B,OAAO,CAACC,IAAI,CAAC,0DAA0D,CAAC;EAAC;EAAAjC,cAAA,GAAAM,CAAA;EACzE,OAAO,EAAE;AACX;AAEA;;;AAGA,OAAO,eAAe4B,kBAAkBA,CAACC,SAAiB;EAAA;EAAAnC,cAAA,GAAAI,CAAA;EACxD,MAAMC,KAAK;EAAA;EAAA,CAAAL,cAAA,GAAAM,CAAA,QAAG,MAAMwB,oBAAoB,CAACK,SAAS,CAAC;EAEnD;EACA;EAAA;EAAAnC,cAAA,GAAAM,CAAA;EACA0B,OAAO,CAACC,IAAI,CAAC,2EAA2EE,SAAS,GAAG,EAAE9B,KAAK,CAAC;AAC9G;AASA,OAAO,eAAe+B,uBAAuBA,CAACL,UAAkB;EAAA;EAAA/B,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAM,CAAA;EAC9D;EACA;EACA0B,OAAO,CAACC,IAAI,CAAC,6DAA6D,CAAC;EAAC;EAAAjC,cAAA,GAAAM,CAAA;EAC5E,OAAO,EAAE;AACX;AAEA,OAAO,eAAe+B,mBAAmBA,CAACN,UAAkB;EAAA;EAAA/B,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAM,CAAA;EAC1D;EACA;EACA0B,OAAO,CAACC,IAAI,CAAC,yDAAyD,CAAC;EAAC;EAAAjC,cAAA,GAAAM,CAAA;EACxE,OAAOgC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;AACxB","ignoreList":[]}