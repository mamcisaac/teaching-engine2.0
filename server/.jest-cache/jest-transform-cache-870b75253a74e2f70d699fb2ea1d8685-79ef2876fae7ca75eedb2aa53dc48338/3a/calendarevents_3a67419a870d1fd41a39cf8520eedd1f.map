{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/calendar-events.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/calendar-events.ts"],"sourcesContent":["import { Router } from 'express';\nimport { z } from 'zod';\nimport { CalendarEventType, CalendarEventSource, Prisma } from '@teaching-engine/database';\nimport { requireAuth } from '../middleware/auth';\nimport { validateRequest } from '../middleware/validateRequest';\nimport { startOfDay, endOfDay, parseISO } from 'date-fns';\nimport { prisma } from '../prisma';\n\nconst router = Router();\n\n// Validation schemas\nconst calendarEventSchema = z.object({\n  title: z.string().min(1).max(255),\n  description: z.string().optional(),\n  start: z.string().datetime(),\n  end: z.string().datetime(),\n  allDay: z.boolean().default(false),\n  eventType: z.enum(['PD_DAY', 'ASSEMBLY', 'TRIP', 'HOLIDAY', 'CUSTOM']),\n  source: z.enum(['MANUAL', 'ICAL_FEED']).default('MANUAL'),\n});\n\nconst querySchema = z.object({\n  start: z.string().optional(),\n  end: z.string().optional(),\n  eventType: z.enum(['PD_DAY', 'ASSEMBLY', 'TRIP', 'HOLIDAY', 'CUSTOM']).optional(),\n});\n\n// Get calendar events for a date range\nrouter.get('/', requireAuth, validateRequest({ query: querySchema }), async (req, res) => {\n  try {\n    const { start, end, eventType } = req.query as z.infer<typeof querySchema>;\n    const userId = req.user!.userId;\n\n    const where: Prisma.CalendarEventWhereInput = {\n      OR: [\n        { teacherId: parseInt(userId) },\n        { teacherId: null }, // School-wide events\n      ],\n    };\n\n    if (start) {\n      where.start = { gte: parseISO(start) };\n    }\n\n    if (end) {\n      where.end = { lte: endOfDay(parseISO(end)) };\n    }\n\n    if (eventType) {\n      where.eventType = eventType;\n    }\n\n    const events = await prisma.calendarEvent.findMany({\n      where,\n      orderBy: { start: 'asc' },\n    });\n\n    res.json(events);\n  } catch (error) {\n    console.error('Error fetching calendar events:', error);\n    res.status(500).json({ error: 'Failed to fetch calendar events' });\n  }\n});\n\n// Create a new calendar event\nrouter.post('/', requireAuth, validateRequest({ body: calendarEventSchema }), async (req, res) => {\n  try {\n    const data = req.body as z.infer<typeof calendarEventSchema>;\n    const userId = req.user!.userId;\n\n    const event = await prisma.calendarEvent.create({\n      data: {\n        title: data.title,\n        description: data.description,\n        start: new Date(data.start),\n        end: new Date(data.end),\n        allDay: data.allDay,\n        eventType: data.eventType,\n        source: data.source,\n        teacherId: parseInt(userId),\n      },\n    });\n\n    res.status(201).json(event);\n  } catch (error) {\n    console.error('Error creating calendar event:', error);\n    res.status(500).json({ error: 'Failed to create calendar event' });\n  }\n});\n\n// Update a calendar event\nrouter.patch('/:id', requireAuth, async (req, res) => {\n  try {\n    const { id } = req.params;\n    const userId = req.user!.userId;\n    const updates = req.body;\n\n    // Check ownership\n    const event = await prisma.calendarEvent.findFirst({\n      where: {\n        id: parseInt(id),\n        teacherId: parseInt(userId),\n      },\n    });\n\n    if (!event) {\n      return res.status(404).json({ error: 'Event not found or unauthorized' });\n    }\n\n    // Convert date strings to Date objects if present\n    if (updates.start) updates.start = new Date(updates.start);\n    if (updates.end) updates.end = new Date(updates.end);\n\n    const updatedEvent = await prisma.calendarEvent.update({\n      where: { id: parseInt(id) },\n      data: updates,\n    });\n\n    res.json(updatedEvent);\n  } catch (error) {\n    console.error('Error updating calendar event:', error);\n    res.status(500).json({ error: 'Failed to update calendar event' });\n  }\n});\n\n// Delete a calendar event\nrouter.delete('/:id', requireAuth, async (req, res) => {\n  try {\n    const { id } = req.params;\n    const userId = req.user!.userId;\n\n    // Check ownership\n    const event = await prisma.calendarEvent.findFirst({\n      where: {\n        id: parseInt(id),\n        teacherId: parseInt(userId),\n      },\n    });\n\n    if (!event) {\n      return res.status(404).json({ error: 'Event not found or unauthorized' });\n    }\n\n    await prisma.calendarEvent.delete({\n      where: { id: parseInt(id) },\n    });\n\n    res.status(204).send();\n  } catch (error) {\n    console.error('Error deleting calendar event:', error);\n    res.status(500).json({ error: 'Failed to delete calendar event' });\n  }\n});\n\n// Import holidays from a standard calendar\nrouter.post('/import-holidays', requireAuth, async (req, res) => {\n  try {\n    const { year = new Date().getFullYear() } = req.body;\n\n    // Common Ontario school holidays\n    const holidays = [\n      { title: 'Labour Day', month: 9, day: 1 },\n      { title: 'Thanksgiving', month: 10, day: 2 }, // 2nd Monday\n      { title: 'Winter Break Start', month: 12, day: 23 },\n      { title: 'Winter Break End', month: 1, day: 2 },\n      { title: 'Family Day', month: 2, day: 3 }, // 3rd Monday\n      { title: 'March Break Start', month: 3, day: 2 }, // 2nd week\n      { title: 'March Break End', month: 3, day: 3 },\n      { title: 'Good Friday', month: 4, day: 1 }, // Varies\n      { title: 'Easter Monday', month: 4, day: 2 }, // Varies\n      { title: 'Victoria Day', month: 5, day: 3 }, // Monday before May 25\n    ];\n\n    const createdEvents = [];\n\n    for (const holiday of holidays) {\n      const date = new Date(year, holiday.month - 1, holiday.day);\n      \n      const existing = await prisma.calendarEvent.findFirst({\n        where: {\n          title: holiday.title,\n          start: {\n            gte: startOfDay(date),\n            lte: endOfDay(date),\n          },\n        },\n      });\n\n      if (!existing) {\n        const event = await prisma.calendarEvent.create({\n          data: {\n            title: holiday.title,\n            start: startOfDay(date),\n            end: endOfDay(date),\n            allDay: true,\n            eventType: CalendarEventType.HOLIDAY,\n            source: CalendarEventSource.SYSTEM,\n          },\n        });\n        createdEvents.push(event);\n      }\n    }\n\n    res.json({\n      message: `Imported ${createdEvents.length} holidays`,\n      events: createdEvents,\n    });\n  } catch (error) {\n    console.error('Error importing holidays:', error);\n    res.status(500).json({ error: 'Failed to import holidays' });\n  }\n});\n\nexport default router;"],"version":3}