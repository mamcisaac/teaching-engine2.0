{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/setup/global-db-setup.ts","mappings":";AAAA;;;GAGG;;;;;AAMH,8BAgCC;AApCD,iDAAyC;AACzC,gDAAwB;AACxB,4CAAoB;AAEL,KAAK,UAAU,WAAW;IACvC,wBAAwB;IACxB,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,4BAA4B,CAAC;IACxD,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;IAE9B,uCAAuC;IACvC,MAAM,MAAM,GAAG,cAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,qBAAqB,CAAC,CAAC;IAC/D,MAAM,KAAK,GAAG,cAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnC,IAAI,CAAC,YAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;QAC1B,YAAE,CAAC,SAAS,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,gCAAgC;IAChC,IAAI,YAAE,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,YAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC;IACD,IAAI,YAAE,CAAC,UAAU,CAAC,GAAG,MAAM,UAAU,CAAC,EAAE,CAAC;QACvC,YAAE,CAAC,UAAU,CAAC,GAAG,MAAM,UAAU,CAAC,CAAC;IACrC,CAAC;IAED,IAAI,CAAC;QACH,mCAAmC;QACnC,IAAA,wBAAQ,EAAC,kBAAkB,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QAEhD,mBAAmB;QACnB,IAAA,wBAAQ,EAAC,6DAA6D,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QAE3F,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAChD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QACzD,MAAM,KAAK,CAAC;IACd,CAAC;AACH,CAAC","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/setup/global-db-setup.ts"],"sourcesContent":["/**\n * Global database setup for integration tests\n * Runs once before all integration tests\n */\n\nimport { execSync } from 'child_process';\nimport path from 'path';\nimport fs from 'fs';\n\nexport default async function globalSetup() {\n  // Set test database URL\n  process.env.DATABASE_URL = 'file:./test-integration.db';\n  process.env.NODE_ENV = 'test';\n  \n  // Ensure the database directory exists\n  const dbPath = path.join(process.cwd(), 'test-integration.db');\n  const dbDir = path.dirname(dbPath);\n  if (!fs.existsSync(dbDir)) {\n    fs.mkdirSync(dbDir, { recursive: true });\n  }\n  \n  // Remove existing test database\n  if (fs.existsSync(dbPath)) {\n    fs.unlinkSync(dbPath);\n  }\n  if (fs.existsSync(`${dbPath}-journal`)) {\n    fs.unlinkSync(`${dbPath}-journal`);\n  }\n  \n  try {\n    // Generate Prisma client if needed\n    execSync('pnpm db:generate', { stdio: 'pipe' });\n    \n    // Apply migrations\n    execSync('pnpm --filter @teaching-engine/database db:push --skip-seed', { stdio: 'pipe' });\n    \n    console.log('✅ Test database setup complete');\n  } catch (error) {\n    console.error('❌ Failed to setup test database:', error);\n    throw error;\n  }\n}"],"version":3}