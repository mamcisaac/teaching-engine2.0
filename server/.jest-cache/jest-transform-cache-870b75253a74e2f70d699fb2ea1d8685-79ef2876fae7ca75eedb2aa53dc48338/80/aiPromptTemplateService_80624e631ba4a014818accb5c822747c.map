{"version":3,"names":["cov_bajp32t4g","actualCoverage","AIPromptTemplateService","templates","s","Map","constructor","f","initializeDefaultTemplates","addTemplate","id","version","createdAt","Date","description","template","getLongRangePlanTemplate","systemPrompt","getETFOSystemPrompt","temperature","metadata","etfoAligned","bilingualSupport","differentiationIncluded","assessmentFramework","getUnitPlanTemplate","getLessonPlanTemplate","getActivityGenerationTemplate","type","has","b","set","get","push","getTemplate","length","find","t","sort","a","getTime","getAllVersions","compileTemplate","context","compiled","replace","match","key","undefined","String","content","trim","generateLongRangePlanPrompt","expectations","Error","promptContext","map","exp","code","join","frenchImmersion","isImmersion","termStructure","term","specialConsiderations","specialNeeds","prompt","generateUnitPlanPrompt","unitTitle","duration","longRangePlanContext","strand","substrand","generateLessonPlanPrompt","unitContext","lessonNumber","accommodations","generateActivityPrompt","activityContext","learningGoals","materials","inspiration","i","safetyConsiderations","recordPromptUsage","_templateId","success","feedback","console","log","getTemplateMetrics","usageCount","successRate","avgRating","commonFeedback","aiPromptTemplateService"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/aiPromptTemplateService.ts"],"sourcesContent":["/**\n * AI Prompt Template Service\n * \n * This service provides improved AI prompts that:\n * 1. Use natural teacher language and voice\n * 2. Follow ETFO Planning for Student Learning framework accurately\n * 3. Include proper differentiation and assessment strategies\n * 4. Support bilingual/French immersion contexts\n * 5. Provide version control and A/B testing capabilities\n */\n\n\nexport interface PromptContext {\n  grade: number;\n  subject: string;\n  language?: 'en' | 'fr' | 'both';\n  isImmersion?: boolean;\n  academicYear?: string;\n  term?: string;\n  timeframe?: string;\n  specialNeeds?: string[];\n}\n\nexport interface CurriculumExpectation {\n  id?: string;\n  code: string;\n  description: string;\n  type: 'overall' | 'specific';\n  strand: string;\n  substrand?: string;\n  grade?: number;\n  subject?: string;\n  keywords?: string[];\n}\n\n// Version control for prompt templates\ninterface PromptTemplate {\n  id: string;\n  version: string;\n  createdAt: Date;\n  description: string;\n  template: string;\n  systemPrompt: string;\n  temperature: number;\n  metadata: {\n    etfoAligned: boolean;\n    bilingualSupport: boolean;\n    differentiationIncluded: boolean;\n    assessmentFramework: 'FOR_AS_OF' | 'OTHER';\n  };\n}\n\nclass AIPromptTemplateService {\n  private templates: Map<string, PromptTemplate[]> = new Map();\n  \n  constructor() {\n    this.initializeDefaultTemplates();\n  }\n\n  private initializeDefaultTemplates() {\n    // Long-Range Plan Templates\n    this.addTemplate('long-range-plan', {\n      id: 'lrp-v2.0',\n      version: '2.0',\n      createdAt: new Date(),\n      description: 'ETFO-aligned Long-Range Plan generation with natural teacher voice',\n      template: this.getLongRangePlanTemplate(),\n      systemPrompt: this.getETFOSystemPrompt(),\n      temperature: 0.3,\n      metadata: {\n        etfoAligned: true,\n        bilingualSupport: true,\n        differentiationIncluded: true,\n        assessmentFramework: 'FOR_AS_OF'\n      }\n    });\n\n    // Unit Plan Templates\n    this.addTemplate('unit-plan', {\n      id: 'up-v2.0',\n      version: '2.0',\n      createdAt: new Date(),\n      description: 'Three-part ETFO unit planning with comprehensive assessment',\n      template: this.getUnitPlanTemplate(),\n      systemPrompt: this.getETFOSystemPrompt(),\n      temperature: 0.3,\n      metadata: {\n        etfoAligned: true,\n        bilingualSupport: true,\n        differentiationIncluded: true,\n        assessmentFramework: 'FOR_AS_OF'\n      }\n    });\n\n    // Lesson Plan Templates\n    this.addTemplate('lesson-plan', {\n      id: 'lp-v2.0',\n      version: '2.0',\n      createdAt: new Date(),\n      description: 'Three-part lesson structure with authentic teacher language',\n      template: this.getLessonPlanTemplate(),\n      systemPrompt: this.getETFOSystemPrompt(),\n      temperature: 0.4,\n      metadata: {\n        etfoAligned: true,\n        bilingualSupport: true,\n        differentiationIncluded: true,\n        assessmentFramework: 'FOR_AS_OF'\n      }\n    });\n\n    // Activity Generation Templates\n    this.addTemplate('activity-generation', {\n      id: 'ag-v2.0',\n      version: '2.0',\n      createdAt: new Date(),\n      description: 'Engaging, age-appropriate activity generation',\n      template: this.getActivityGenerationTemplate(),\n      systemPrompt: this.getETFOSystemPrompt(),\n      temperature: 0.6,\n      metadata: {\n        etfoAligned: true,\n        bilingualSupport: true,\n        differentiationIncluded: true,\n        assessmentFramework: 'FOR_AS_OF'\n      }\n    });\n  }\n\n  private getETFOSystemPrompt(): string {\n    return `You are an experienced elementary school teacher and ETFO member with 15+ years of classroom experience. You understand child development, Ontario curriculum, and practical classroom realities.\n\nYour planning follows the ETFO Planning for Student Learning framework with authentic teacher voice - you write like a real teacher talking to another teacher.\n\nKey principles you follow:\n- Students come first - all decisions center on what's best for kids\n- Curriculum serves learning, not the other way around\n- Assessment drives instruction (Assessment FOR, AS, and OF learning)\n- Differentiation is natural and embedded, not an add-on\n- Cross-curricular connections happen organically\n- You understand that real classrooms are messy and plans need flexibility\n- French immersion considerations when applicable\n- Indigenous ways of knowing are respectfully incorporated\n- You write in a warm, professional teacher voice - not robotic or overly formal\n\nYou avoid educational jargon overload and focus on practical, actionable content that real teachers can actually use in their busy classrooms.`;\n  }\n\n  private getLongRangePlanTemplate(): string {\n    return `I'm planning my long-range plan for Grade {{grade}} {{subject}} for the {{academicYear}} school year. I need to organize these curriculum expectations into meaningful units that make sense for how kids learn and grow throughout the year.\n\nHere's what I'm working with:\n\n**Curriculum Expectations to Cover:**\n{{expectations}}\n\n**My Context:**\n- Grade: {{grade}}\n- Subject: {{subject}}\n- {{#isImmersion}}French Immersion Program{{/isImmersion}}\n- School year structure: {{termStructure}}\n{{#specialConsiderations}}\n- Special considerations: {{specialConsiderations}}\n{{/specialConsiderations}}\n\n**What I need from you:**\nHelp me create 4-6 units that feel natural and build on each other. I want units that excite kids and make connections they can understand. Think about:\n\n1. **Unit Flow**: How do the big ideas connect and build throughout the year?\n2. **Seasonal Connections**: What makes sense when? (e.g., nature units in fall/spring)\n3. **Student Development**: How do Grade {{grade}} kids typically grow over the year?\n4. **Real Classroom Life**: Accounting for holidays, assemblies, and the reality of school life\n5. **Cross-Curricular Magic**: Where can we naturally connect subjects?\n\nFor each unit, I need:\n- A title that kids would find interesting (not just \"Unit 1\")\n- Big ideas that connect to their world\n- Which curriculum expectations fit naturally\n- Realistic timing (considering everything else happening in school)\n- Quick notes about assessment opportunities\n\nPlease organize this in a JSON format I can work with, but write like you're talking to a fellow teacher. I want to feel excited about teaching these units!\n\n{{#frenchImmersion}}\nNote: Since this is French immersion, please consider how concepts transfer between languages and suggest opportunities for language development alongside content learning.\n{{/frenchImmersion}}`;\n  }\n\n  private getUnitPlanTemplate(): string {\n    return `I'm diving deeper into planning my \"{{unitTitle}}\" unit for Grade {{grade}} {{subject}}. This unit is part of my year-long plan and needs to fit with what we've learned before and what's coming next.\n\n**Unit Context:**\n- Grade: {{grade}} {{subject}}\n- Estimated Duration: {{duration}} weeks\n- {{#longRangePlanContext}}Connected to: {{longRangePlanContext}}{{/longRangePlanContext}}\n{{#isImmersion}}\n- French Immersion context\n{{/isImmersion}}\n\n**Curriculum Expectations I'm addressing:**\n{{expectations}}\n\n**The Three-Part ETFO Framework I'm following:**\n\n**PART 1: FRAMING THE UNIT**\nHelp me identify the big ideas that will anchor this unit - the \"so what?\" that helps kids see why this matters in their world. What essential questions will drive our inquiry and keep kids curious?\n\n**PART 2: LEARNING GOALS & SUCCESS CRITERIA**\nI need learning goals that are clear but written in kid-friendly language. Success criteria should help students self-assess and understand what good work looks like in Grade {{grade}}.\n\n**PART 3: ASSESSMENT PLAN**\nThis is where the magic happens - how will I:\n- **Assess FOR learning**: Find out what kids already know/think (diagnostics)\n- **Assess AS learning**: Support their learning journey with feedback (formatives)  \n- **Assess OF learning**: Celebrate their growth and determine next steps (summatives)\n\n**What I'm hoping for:**\n- Big ideas that Grade {{grade}} kids can grasp and get excited about\n- Essential questions that spark genuine curiosity\n- Learning goals that feel achievable but challenging\n- Assessment ideas that feel natural, not forced\n- Differentiation strategies that work in real classrooms\n- Cross-curricular connections that emerge organically\n- A timeline that accounts for actual school life\n\nPlease respond in JSON format, but keep the teacher voice - like you're sharing ideas with a colleague over coffee.\n\n{{#specialNeeds}}\n**Classroom considerations**: {{specialNeeds}}\n{{/specialNeeds}}`;\n  }\n\n  private getLessonPlanTemplate(): string {\n    return `I'm planning a lesson for my Grade {{grade}} {{subject}} class as part of our \"{{unitTitle}}\" unit. This is {{#lessonNumber}}lesson {{lessonNumber}} in the unit{{/lessonNumber}}{{^lessonNumber}}one of our key lessons{{/lessonNumber}}, and I have {{duration}} minutes to work with.\n\n**What I'm covering:**\n{{expectations}}\n\n**Unit context:**\n{{#unitContext}}{{unitContext}}{{/unitContext}}\n\n**The lesson structure I'm following (Three-Part ETFO Model):**\n\n**MINDS ON** (~15% of time - getting kids hooked and ready)\nThis is where I grab their attention and connect to what they already know. What's a great way to start that will have them leaning in and curious?\n\n**ACTION** (~70% of time - the main learning)\nThis is the heart of the lesson where kids are actively engaged with the new learning. I need activities that are hands-on, minds-on, and appropriate for Grade {{grade}} attention spans and abilities.\n\n**CONSOLIDATION** (~15% of time - making sense of it all)\nHow do we wrap up in a way that helps kids reflect on their learning and make connections? This should feel like a satisfying conclusion, not just \"time's up!\"\n\n**What I need:**\n- A lesson that feels engaging and purposeful\n- Activities that match Grade {{grade}} developmental needs\n- Clear learning goals kids can understand\n- Success criteria that help them self-assess\n- Materials I can actually get/afford\n- Differentiation that's built in, not tacked on\n- Assessment opportunities that feel natural\n- Timing that's realistic (including transitions!)\n\n**Classroom reality check:**\n- I have typical Grade {{grade}} energy levels and attention spans\n- Mixed ability group with diverse learners\n- {{#accommodations}}Need to consider: {{accommodations}}{{/accommodations}}\n- Need backup plans for when technology doesn't work\n- Should work for a substitute if needed\n\nPlease give me a practical lesson plan in JSON format, written like you're sharing with a fellow teacher. I want to feel confident and excited about teaching this!\n\n{{#frenchImmersion}}\n**Language considerations**: This is French immersion, so please consider vocabulary development and language scaffolding alongside content learning.\n{{/frenchImmersion}}`;\n  }\n\n  private getActivityGenerationTemplate(): string {\n    return `I need an engaging activity for my Grade {{grade}} {{subject}} class. Here's what I'm working with:\n\n**Context:**\n- Grade: {{grade}}\n- Subject: {{subject}}\n- Duration: {{duration}} minutes\n- Part of lesson: {{section}}\n{{#learningGoals}}\n- Learning goals: {{learningGoals}}\n{{/learningGoals}}\n\n**What I'm hoping for:**\n{{#activityType}}\n- Activity type: {{activityType}}\n{{/activityType}}\n{{#materials}}\n- Materials I have available: {{materials}}\n{{/materials}}\n{{#groupSize}}\n- Group arrangement: {{groupSize}}\n{{/groupSize}}\n\n**My classroom reality:**\n- Typical Grade {{grade}} energy and attention spans\n- Mix of learning styles and abilities\n- Some kids who need extra support, others ready for challenges\n- Limited prep time (let's be honest!)\n- Need activities that actually work in practice\n\n**What makes a great activity for my kids:**\n- Clear purpose that connects to their world\n- Hands-on engagement (they learn by doing)\n- Appropriate challenge level - not too easy, not impossible\n- Built-in opportunities for different entry points\n- Materials that won't break the budget\n- Instructions kids can follow without me repeating 10 times\n- Natural assessment opportunities\n- Cleanup that doesn't take forever\n\n{{#inspiration}}\n**For inspiration, here are some activities I've seen work well:**\n{{inspiration}}\n{{/inspiration}}\n\nPlease suggest an activity that feels doable and exciting. Include step-by-step instructions I can actually follow, differentiation ideas that work in real classrooms, and assessment suggestions that feel natural.\n\nRespond in JSON format but keep that practical teacher voice - like you're sharing a great idea you just tried with your class!\n\n{{#safetyConsiderations}}\n**Safety note**: Please consider any safety aspects for Grade {{grade}} students.\n{{/safetyConsiderations}}`;\n  }\n\n  // Template management methods\n  private addTemplate(type: string, template: PromptTemplate) {\n    if (!this.templates.has(type)) {\n      this.templates.set(type, []);\n    }\n    this.templates.get(type)!.push(template);\n  }\n\n  public getTemplate(type: string, version?: string): PromptTemplate | null {\n    const templates = this.templates.get(type);\n    if (!templates || templates.length === 0) return null;\n\n    if (version) {\n      return templates.find(t => t.version === version) || null;\n    }\n    \n    // Return latest version\n    return templates.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())[0];\n  }\n\n  public getAllVersions(type: string): PromptTemplate[] {\n    return this.templates.get(type) || [];\n  }\n\n  // Template compilation with Handlebars-like syntax\n  public compileTemplate(template: string, context: Record<string, unknown>): string {\n    let compiled = template;\n    \n    // Replace simple variables {{variable}}\n    compiled = compiled.replace(/\\{\\{(\\w+)\\}\\}/g, (match, key) => {\n      return context[key] !== undefined ? String(context[key]) : match;\n    });\n\n    // Handle conditional blocks {{#if}}{{/if}}\n    compiled = compiled.replace(/\\{\\{#(\\w+)\\}\\}([\\s\\S]*?)\\{\\{\\/\\1\\}\\}/g, (match, key, content) => {\n      return context[key] ? content : '';\n    });\n\n    // Handle negative conditional blocks {{^if}}{{/if}}\n    compiled = compiled.replace(/\\{\\{\\^(\\w+)\\}\\}([\\s\\S]*?)\\{\\{\\/\\1\\}\\}/g, (match, key, content) => {\n      return !context[key] ? content : '';\n    });\n\n    return compiled.trim();\n  }\n\n  // Generate prompts for specific planning types\n  public generateLongRangePlanPrompt(context: PromptContext, expectations: CurriculumExpectation[]): { prompt: string; systemPrompt: string; temperature: number } {\n    const template = this.getTemplate('long-range-plan');\n    if (!template) throw new Error('Long-range plan template not found');\n\n    const promptContext = {\n      ...context,\n      expectations: expectations.map(exp => \n        `${exp.code} (${exp.type}): ${exp.description}`\n      ).join('\\n'),\n      frenchImmersion: context.isImmersion,\n      termStructure: context.term || 'semester',\n      specialConsiderations: context.specialNeeds?.join(', ') || ''\n    };\n\n    return {\n      prompt: this.compileTemplate(template.template, promptContext),\n      systemPrompt: template.systemPrompt,\n      temperature: template.temperature\n    };\n  }\n\n  public generateUnitPlanPrompt(\n    context: PromptContext, \n    unitTitle: string, \n    expectations: CurriculumExpectation[],\n    duration: number = 3,\n    longRangePlanContext?: string\n  ): { prompt: string; systemPrompt: string; temperature: number } {\n    const template = this.getTemplate('unit-plan');\n    if (!template) throw new Error('Unit plan template not found');\n\n    const promptContext = {\n      ...context,\n      unitTitle,\n      duration,\n      longRangePlanContext,\n      expectations: expectations.map(exp => \n        `${exp.code} (${exp.type}): ${exp.description}\\n  → ${exp.strand}${exp.substrand ? ` / ${exp.substrand}` : ''}`\n      ).join('\\n'),\n      specialNeeds: context.specialNeeds?.join(', ') || ''\n    };\n\n    return {\n      prompt: this.compileTemplate(template.template, promptContext),\n      systemPrompt: template.systemPrompt,\n      temperature: template.temperature\n    };\n  }\n\n  public generateLessonPlanPrompt(\n    context: PromptContext,\n    unitTitle: string,\n    expectations: CurriculumExpectation[],\n    duration: number,\n    unitContext?: string,\n    lessonNumber?: number,\n    accommodations?: string[]\n  ): { prompt: string; systemPrompt: string; temperature: number } {\n    const template = this.getTemplate('lesson-plan');\n    if (!template) throw new Error('Lesson plan template not found');\n\n    const promptContext = {\n      ...context,\n      unitTitle,\n      duration,\n      unitContext,\n      lessonNumber,\n      expectations: expectations.map(exp => \n        `${exp.code}: ${exp.description}`\n      ).join('\\n'),\n      accommodations: accommodations?.join(', ') || '',\n      frenchImmersion: context.isImmersion\n    };\n\n    return {\n      prompt: this.compileTemplate(template.template, promptContext),\n      systemPrompt: template.systemPrompt,\n      temperature: template.temperature\n    };\n  }\n\n  public generateActivityPrompt(\n    context: PromptContext,\n    activityContext: {\n      duration: number;\n      section: 'mindsOn' | 'action' | 'consolidation';\n      learningGoals?: string[];\n      activityType?: string;\n      materials?: string[];\n      groupSize?: string;\n      inspiration?: string[];\n      safetyConsiderations?: boolean;\n    }\n  ): { prompt: string; systemPrompt: string; temperature: number } {\n    const template = this.getTemplate('activity-generation');\n    if (!template) throw new Error('Activity generation template not found');\n\n    const promptContext = {\n      ...context,\n      ...activityContext,\n      learningGoals: activityContext.learningGoals?.join(', ') || '',\n      materials: activityContext.materials?.join(', ') || 'standard classroom materials',\n      inspiration: activityContext.inspiration?.map(i => `- ${i}`).join('\\n') || '',\n      safetyConsiderations: activityContext.safetyConsiderations\n    };\n\n    return {\n      prompt: this.compileTemplate(template.template, promptContext),\n      systemPrompt: template.systemPrompt,\n      temperature: template.temperature\n    };\n  }\n\n  // A/B Testing and Analytics\n  public recordPromptUsage(_templateId: string, success: boolean, feedback?: string) {\n    // In a real implementation, this would log to analytics\n    console.log(`Template ${_templateId}: ${success ? 'SUCCESS' : 'FAILURE'}`, feedback);\n  }\n\n  public getTemplateMetrics(_templateId: string) {\n    // In a real implementation, this would return usage analytics\n    return {\n      usageCount: 0,\n      successRate: 0,\n      avgRating: 0,\n      commonFeedback: []\n    };\n  }\n}\n\nexport const aiPromptTemplateService = new AIPromptTemplateService();"],"mappingsaAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AA3DV;;;;;;;;;;AAoDA,MAAME,uBAAuB;EACnBC,SAAS;EAAA;EAAA,CAAAH,aAAA,GAAAI,CAAA,OAAkC,IAAIC,GAAG,EAAE;EAE5DC,YAAA;IAAA;IAAAN,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IACE,IAAI,CAACI,0BAA0B,EAAE;EACnC;EAEQA,0BAA0BA,CAAA;IAAA;IAAAR,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IAChC;IACA,IAAI,CAACK,WAAW,CAAC,iBAAiB,EAAE;MAClCC,EAAE,EAAE,UAAU;MACdC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,IAAIC,IAAI,EAAE;MACrBC,WAAW,EAAE,oEAAoE;MACjFC,QAAQ,EAAE,IAAI,CAACC,wBAAwB,EAAE;MACzCC,YAAY,EAAE,IAAI,CAACC,mBAAmB,EAAE;MACxCC,WAAW,EAAE,GAAG;MAChBC,QAAQ,EAAE;QACRC,WAAW,EAAE,IAAI;QACjBC,gBAAgB,EAAE,IAAI;QACtBC,uBAAuB,EAAE,IAAI;QAC7BC,mBAAmB,EAAE;;KAExB,CAAC;IAEF;IAAA;IAAAxB,aAAA,GAAAI,CAAA;IACA,IAAI,CAACK,WAAW,CAAC,WAAW,EAAE;MAC5BC,EAAE,EAAE,SAAS;MACbC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,IAAIC,IAAI,EAAE;MACrBC,WAAW,EAAE,6DAA6D;MAC1EC,QAAQ,EAAE,IAAI,CAACU,mBAAmB,EAAE;MACpCR,YAAY,EAAE,IAAI,CAACC,mBAAmB,EAAE;MACxCC,WAAW,EAAE,GAAG;MAChBC,QAAQ,EAAE;QACRC,WAAW,EAAE,IAAI;QACjBC,gBAAgB,EAAE,IAAI;QACtBC,uBAAuB,EAAE,IAAI;QAC7BC,mBAAmB,EAAE;;KAExB,CAAC;IAEF;IAAA;IAAAxB,aAAA,GAAAI,CAAA;IACA,IAAI,CAACK,WAAW,CAAC,aAAa,EAAE;MAC9BC,EAAE,EAAE,SAAS;MACbC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,IAAIC,IAAI,EAAE;MACrBC,WAAW,EAAE,6DAA6D;MAC1EC,QAAQ,EAAE,IAAI,CAACW,qBAAqB,EAAE;MACtCT,YAAY,EAAE,IAAI,CAACC,mBAAmB,EAAE;MACxCC,WAAW,EAAE,GAAG;MAChBC,QAAQ,EAAE;QACRC,WAAW,EAAE,IAAI;QACjBC,gBAAgB,EAAE,IAAI;QACtBC,uBAAuB,EAAE,IAAI;QAC7BC,mBAAmB,EAAE;;KAExB,CAAC;IAEF;IAAA;IAAAxB,aAAA,GAAAI,CAAA;IACA,IAAI,CAACK,WAAW,CAAC,qBAAqB,EAAE;MACtCC,EAAE,EAAE,SAAS;MACbC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,IAAIC,IAAI,EAAE;MACrBC,WAAW,EAAE,+CAA+C;MAC5DC,QAAQ,EAAE,IAAI,CAACY,6BAA6B,EAAE;MAC9CV,YAAY,EAAE,IAAI,CAACC,mBAAmB,EAAE;MACxCC,WAAW,EAAE,GAAG;MAChBC,QAAQ,EAAE;QACRC,WAAW,EAAE,IAAI;QACjBC,gBAAgB,EAAE,IAAI;QACtBC,uBAAuB,EAAE,IAAI;QAC7BC,mBAAmB,EAAE;;KAExB,CAAC;EACJ;EAEQN,mBAAmBA,CAAA;IAAA;IAAAlB,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IACzB,OAAO;;;;;;;;;;;;;;;+IAeoI;EAC7I;EAEQY,wBAAwBA,CAAA;IAAA;IAAAhB,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IAC9B,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAoCU;EACnB;EAEQqB,mBAAmBA,CAAA;IAAA;IAAAzB,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IACzB,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAwCO;EAChB;EAEQsB,qBAAqBA,CAAA;IAAA;IAAA1B,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IAC3B,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAwCU;EACnB;EAEQuB,6BAA6BA,CAAA;IAAA;IAAA3B,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IACnC,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAkDe;EACxB;EAEA;EACQK,WAAWA,CAACmB,IAAY,EAAEb,QAAwB;IAAA;IAAAf,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IACxD,IAAI,CAAC,IAAI,CAACD,SAAS,CAAC0B,GAAG,CAACD,IAAI,CAAC,EAAE;MAAA;MAAA5B,aAAA,GAAA8B,CAAA;MAAA9B,aAAA,GAAAI,CAAA;MAC7B,IAAI,CAACD,SAAS,CAAC4B,GAAG,CAACH,IAAI,EAAE,EAAE,CAAC;IAC9B,CAAC;IAAA;IAAA;MAAA5B,aAAA,GAAA8B,CAAA;IAAA;IAAA9B,aAAA,GAAAI,CAAA;IACD,IAAI,CAACD,SAAS,CAAC6B,GAAG,CAACJ,IAAI,CAAE,CAACK,IAAI,CAAClB,QAAQ,CAAC;EAC1C;EAEOmB,WAAWA,CAACN,IAAY,EAAEjB,OAAgB;IAAA;IAAAX,aAAA,GAAAO,CAAA;IAC/C,MAAMJ,SAAS;IAAA;IAAA,CAAAH,aAAA,GAAAI,CAAA,QAAG,IAAI,CAACD,SAAS,CAAC6B,GAAG,CAACJ,IAAI,CAAC;IAAC;IAAA5B,aAAA,GAAAI,CAAA;IAC3C;IAAI;IAAA,CAAAJ,aAAA,GAAA8B,CAAA,WAAC3B,SAAS;IAAA;IAAA,CAAAH,aAAA,GAAA8B,CAAA,UAAI3B,SAAS,CAACgC,MAAM,KAAK,CAAC,GAAE;MAAA;MAAAnC,aAAA,GAAA8B,CAAA;MAAA9B,aAAA,GAAAI,CAAA;MAAA,OAAO,IAAI;IAAA,CAAC;IAAA;IAAA;MAAAJ,aAAA,GAAA8B,CAAA;IAAA;IAAA9B,aAAA,GAAAI,CAAA;IAEtD,IAAIO,OAAO,EAAE;MAAA;MAAAX,aAAA,GAAA8B,CAAA;MAAA9B,aAAA,GAAAI,CAAA;MACX,OAAO,2BAAAJ,aAAA,GAAA8B,CAAA,UAAA3B,SAAS,CAACiC,IAAI,CAACC,CAAC,IAAI;QAAA;QAAArC,aAAA,GAAAO,CAAA;QAAAP,aAAA,GAAAI,CAAA;QAAA,OAAAiC,CAAC,CAAC1B,OAAO,KAAKA,OAAO;MAAP,CAAO,CAAC;MAAA;MAAA,CAAAX,aAAA,GAAA8B,CAAA,UAAI,IAAI;IAC3D,CAAC;IAAA;IAAA;MAAA9B,aAAA,GAAA8B,CAAA;IAAA;IAED;IAAA9B,aAAA,GAAAI,CAAA;IACA,OAAOD,SAAS,CAACmC,IAAI,CAAC,CAACC,CAAC,EAAET,CAAC,KAAK;MAAA;MAAA9B,aAAA,GAAAO,CAAA;MAAAP,aAAA,GAAAI,CAAA;MAAA,WAAIS,IAAI,CAACiB,CAAC,CAAClB,SAAS,CAAC,CAAC4B,OAAO,EAAE,GAAG,IAAI3B,IAAI,CAAC0B,CAAC,CAAC3B,SAAS,CAAC,CAAC4B,OAAO,EAAE;IAAF,CAAE,CAAC,CAAC,CAAC,CAAC;EACvG;EAEOC,cAAcA,CAACb,IAAY;IAAA;IAAA5B,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IAChC,OAAO,2BAAAJ,aAAA,GAAA8B,CAAA,cAAI,CAAC3B,SAAS,CAAC6B,GAAG,CAACJ,IAAI,CAAC;IAAA;IAAA,CAAA5B,aAAA,GAAA8B,CAAA,UAAI,EAAE;EACvC;EAEA;EACOY,eAAeA,CAAC3B,QAAgB,EAAE4B,OAAgC;IAAA;IAAA3C,aAAA,GAAAO,CAAA;IACvE,IAAIqC,QAAQ;IAAA;IAAA,CAAA5C,aAAA,GAAAI,CAAA,QAAGW,QAAQ;IAEvB;IAAA;IAAAf,aAAA,GAAAI,CAAA;IACAwC,QAAQ,GAAGA,QAAQ,CAACC,OAAO,CAAC,gBAAgB,EAAE,CAACC,KAAK,EAAEC,GAAG,KAAI;MAAA;MAAA/C,aAAA,GAAAO,CAAA;MAAAP,aAAA,GAAAI,CAAA;MAC3D,OAAOuC,OAAO,CAACI,GAAG,CAAC,KAAKC,SAAS;MAAA;MAAA,CAAAhD,aAAA,GAAA8B,CAAA,UAAGmB,MAAM,CAACN,OAAO,CAACI,GAAG,CAAC,CAAC;MAAA;MAAA,CAAA/C,aAAA,GAAA8B,CAAA,UAAGgB,KAAK;IAClE,CAAC,CAAC;IAEF;IAAA;IAAA9C,aAAA,GAAAI,CAAA;IACAwC,QAAQ,GAAGA,QAAQ,CAACC,OAAO,CAAC,uCAAuC,EAAE,CAACC,KAAK,EAAEC,GAAG,EAAEG,OAAO,KAAI;MAAA;MAAAlD,aAAA,GAAAO,CAAA;MAAAP,aAAA,GAAAI,CAAA;MAC3F,OAAOuC,OAAO,CAACI,GAAG,CAAC;MAAA;MAAA,CAAA/C,aAAA,GAAA8B,CAAA,UAAGoB,OAAO;MAAA;MAAA,CAAAlD,aAAA,GAAA8B,CAAA,UAAG,EAAE;IACpC,CAAC,CAAC;IAEF;IAAA;IAAA9B,aAAA,GAAAI,CAAA;IACAwC,QAAQ,GAAGA,QAAQ,CAACC,OAAO,CAAC,wCAAwC,EAAE,CAACC,KAAK,EAAEC,GAAG,EAAEG,OAAO,KAAI;MAAA;MAAAlD,aAAA,GAAAO,CAAA;MAAAP,aAAA,GAAAI,CAAA;MAC5F,OAAO,CAACuC,OAAO,CAACI,GAAG,CAAC;MAAA;MAAA,CAAA/C,aAAA,GAAA8B,CAAA,UAAGoB,OAAO;MAAA;MAAA,CAAAlD,aAAA,GAAA8B,CAAA,UAAG,EAAE;IACrC,CAAC,CAAC;IAAC;IAAA9B,aAAA,GAAAI,CAAA;IAEH,OAAOwC,QAAQ,CAACO,IAAI,EAAE;EACxB;EAEA;EACOC,2BAA2BA,CAACT,OAAsB,EAAEU,YAAqC;IAAA;IAAArD,aAAA,GAAAO,CAAA;IAC9F,MAAMQ,QAAQ;IAAA;IAAA,CAAAf,aAAA,GAAAI,CAAA,QAAG,IAAI,CAAC8B,WAAW,CAAC,iBAAiB,CAAC;IAAC;IAAAlC,aAAA,GAAAI,CAAA;IACrD,IAAI,CAACW,QAAQ,EAAE;MAAA;MAAAf,aAAA,GAAA8B,CAAA;MAAA9B,aAAA,GAAAI,CAAA;MAAA,MAAM,IAAIkD,KAAK,CAAC,oCAAoC,CAAC;IAAA,CAAC;IAAA;IAAA;MAAAtD,aAAA,GAAA8B,CAAA;IAAA;IAErE,MAAMyB,aAAa;IAAA;IAAA,CAAAvD,aAAA,GAAAI,CAAA,QAAG;MACpB,GAAGuC,OAAO;MACVU,YAAY,EAAEA,YAAY,CAACG,GAAG,CAACC,GAAG,IAChC;QAAA;QAAAzD,aAAA,GAAAO,CAAA;QAAAP,aAAA,GAAAI,CAAA;QAAA,UAAGqD,GAAG,CAACC,IAAI,KAAKD,GAAG,CAAC7B,IAAI,MAAM6B,GAAG,CAAC3C,WAAW,EAAE;MAAF,CAAE,CAChD,CAAC6C,IAAI,CAAC,IAAI,CAAC;MACZC,eAAe,EAAEjB,OAAO,CAACkB,WAAW;MACpCC,aAAa;MAAE;MAAA,CAAA9D,aAAA,GAAA8B,CAAA,WAAAa,OAAO,CAACoB,IAAI;MAAA;MAAA,CAAA/D,aAAA,GAAA8B,CAAA,WAAI,UAAU;MACzCkC,qBAAqB;MAAE;MAAA,CAAAhE,aAAA,GAAA8B,CAAA,WAAAa,OAAO,CAACsB,YAAY,EAAEN,IAAI,CAAC,IAAI,CAAC;MAAA;MAAA,CAAA3D,aAAA,GAAA8B,CAAA,WAAI,EAAE;KAC9D;IAAC;IAAA9B,aAAA,GAAAI,CAAA;IAEF,OAAO;MACL8D,MAAM,EAAE,IAAI,CAACxB,eAAe,CAAC3B,QAAQ,CAACA,QAAQ,EAAEwC,aAAa,CAAC;MAC9DtC,YAAY,EAAEF,QAAQ,CAACE,YAAY;MACnCE,WAAW,EAAEJ,QAAQ,CAACI;KACvB;EACH;EAEOgD,sBAAsBA,CAC3BxB,OAAsB,EACtByB,SAAiB,EACjBf,YAAqC,EACrCgB,QAAA;EAAA;EAAA,CAAArE,aAAA,GAAA8B,CAAA,WAAmB,CAAC,GACpBwC,oBAA6B;IAAA;IAAAtE,aAAA,GAAAO,CAAA;IAE7B,MAAMQ,QAAQ;IAAA;IAAA,CAAAf,aAAA,GAAAI,CAAA,QAAG,IAAI,CAAC8B,WAAW,CAAC,WAAW,CAAC;IAAC;IAAAlC,aAAA,GAAAI,CAAA;IAC/C,IAAI,CAACW,QAAQ,EAAE;MAAA;MAAAf,aAAA,GAAA8B,CAAA;MAAA9B,aAAA,GAAAI,CAAA;MAAA,MAAM,IAAIkD,KAAK,CAAC,8BAA8B,CAAC;IAAA,CAAC;IAAA;IAAA;MAAAtD,aAAA,GAAA8B,CAAA;IAAA;IAE/D,MAAMyB,aAAa;IAAA;IAAA,CAAAvD,aAAA,GAAAI,CAAA,QAAG;MACpB,GAAGuC,OAAO;MACVyB,SAAS;MACTC,QAAQ;MACRC,oBAAoB;MACpBjB,YAAY,EAAEA,YAAY,CAACG,GAAG,CAACC,GAAG,IAChC;QAAA;QAAAzD,aAAA,GAAAO,CAAA;QAAAP,aAAA,GAAAI,CAAA;QAAA,UAAGqD,GAAG,CAACC,IAAI,KAAKD,GAAG,CAAC7B,IAAI,MAAM6B,GAAG,CAAC3C,WAAW,SAAS2C,GAAG,CAACc,MAAM,GAAGd,GAAG,CAACe,SAAS;QAAA;QAAA,CAAAxE,aAAA,GAAA8B,CAAA,WAAG,MAAM2B,GAAG,CAACe,SAAS,EAAE;QAAA;QAAA,CAAAxE,aAAA,GAAA8B,CAAA,WAAG,EAAE,GAAE;MAAF,CAAE,CAChH,CAAC6B,IAAI,CAAC,IAAI,CAAC;MACZM,YAAY;MAAE;MAAA,CAAAjE,aAAA,GAAA8B,CAAA,WAAAa,OAAO,CAACsB,YAAY,EAAEN,IAAI,CAAC,IAAI,CAAC;MAAA;MAAA,CAAA3D,aAAA,GAAA8B,CAAA,WAAI,EAAE;KACrD;IAAC;IAAA9B,aAAA,GAAAI,CAAA;IAEF,OAAO;MACL8D,MAAM,EAAE,IAAI,CAACxB,eAAe,CAAC3B,QAAQ,CAACA,QAAQ,EAAEwC,aAAa,CAAC;MAC9DtC,YAAY,EAAEF,QAAQ,CAACE,YAAY;MACnCE,WAAW,EAAEJ,QAAQ,CAACI;KACvB;EACH;EAEOsD,wBAAwBA,CAC7B9B,OAAsB,EACtByB,SAAiB,EACjBf,YAAqC,EACrCgB,QAAgB,EAChBK,WAAoB,EACpBC,YAAqB,EACrBC,cAAyB;IAAA;IAAA5E,aAAA,GAAAO,CAAA;IAEzB,MAAMQ,QAAQ;IAAA;IAAA,CAAAf,aAAA,GAAAI,CAAA,QAAG,IAAI,CAAC8B,WAAW,CAAC,aAAa,CAAC;IAAC;IAAAlC,aAAA,GAAAI,CAAA;IACjD,IAAI,CAACW,QAAQ,EAAE;MAAA;MAAAf,aAAA,GAAA8B,CAAA;MAAA9B,aAAA,GAAAI,CAAA;MAAA,MAAM,IAAIkD,KAAK,CAAC,gCAAgC,CAAC;IAAA,CAAC;IAAA;IAAA;MAAAtD,aAAA,GAAA8B,CAAA;IAAA;IAEjE,MAAMyB,aAAa;IAAA;IAAA,CAAAvD,aAAA,GAAAI,CAAA,QAAG;MACpB,GAAGuC,OAAO;MACVyB,SAAS;MACTC,QAAQ;MACRK,WAAW;MACXC,YAAY;MACZtB,YAAY,EAAEA,YAAY,CAACG,GAAG,CAACC,GAAG,IAChC;QAAA;QAAAzD,aAAA,GAAAO,CAAA;QAAAP,aAAA,GAAAI,CAAA;QAAA,UAAGqD,GAAG,CAACC,IAAI,KAAKD,GAAG,CAAC3C,WAAW,EAAE;MAAF,CAAE,CAClC,CAAC6C,IAAI,CAAC,IAAI,CAAC;MACZiB,cAAc;MAAE;MAAA,CAAA5E,aAAA,GAAA8B,CAAA,WAAA8C,cAAc,EAAEjB,IAAI,CAAC,IAAI,CAAC;MAAA;MAAA,CAAA3D,aAAA,GAAA8B,CAAA,WAAI,EAAE;MAChD8B,eAAe,EAAEjB,OAAO,CAACkB;KAC1B;IAAC;IAAA7D,aAAA,GAAAI,CAAA;IAEF,OAAO;MACL8D,MAAM,EAAE,IAAI,CAACxB,eAAe,CAAC3B,QAAQ,CAACA,QAAQ,EAAEwC,aAAa,CAAC;MAC9DtC,YAAY,EAAEF,QAAQ,CAACE,YAAY;MACnCE,WAAW,EAAEJ,QAAQ,CAACI;KACvB;EACH;EAEO0D,sBAAsBA,CAC3BlC,OAAsB,EACtBmC,eASC;IAAA;IAAA9E,aAAA,GAAAO,CAAA;IAED,MAAMQ,QAAQ;IAAA;IAAA,CAAAf,aAAA,GAAAI,CAAA,QAAG,IAAI,CAAC8B,WAAW,CAAC,qBAAqB,CAAC;IAAC;IAAAlC,aAAA,GAAAI,CAAA;IACzD,IAAI,CAACW,QAAQ,EAAE;MAAA;MAAAf,aAAA,GAAA8B,CAAA;MAAA9B,aAAA,GAAAI,CAAA;MAAA,MAAM,IAAIkD,KAAK,CAAC,wCAAwC,CAAC;IAAA,CAAC;IAAA;IAAA;MAAAtD,aAAA,GAAA8B,CAAA;IAAA;IAEzE,MAAMyB,aAAa;IAAA;IAAA,CAAAvD,aAAA,GAAAI,CAAA,QAAG;MACpB,GAAGuC,OAAO;MACV,GAAGmC,eAAe;MAClBC,aAAa;MAAE;MAAA,CAAA/E,aAAA,GAAA8B,CAAA,WAAAgD,eAAe,CAACC,aAAa,EAAEpB,IAAI,CAAC,IAAI,CAAC;MAAA;MAAA,CAAA3D,aAAA,GAAA8B,CAAA,WAAI,EAAE;MAC9DkD,SAAS;MAAE;MAAA,CAAAhF,aAAA,GAAA8B,CAAA,WAAAgD,eAAe,CAACE,SAAS,EAAErB,IAAI,CAAC,IAAI,CAAC;MAAA;MAAA,CAAA3D,aAAA,GAAA8B,CAAA,WAAI,8BAA8B;MAClFmD,WAAW;MAAE;MAAA,CAAAjF,aAAA,GAAA8B,CAAA,WAAAgD,eAAe,CAACG,WAAW,EAAEzB,GAAG,CAAC0B,CAAC,IAAI;QAAA;QAAAlF,aAAA,GAAAO,CAAA;QAAAP,aAAA,GAAAI,CAAA;QAAA,YAAK8E,CAAC,EAAE;MAAF,CAAE,CAAC,CAACvB,IAAI,CAAC,IAAI,CAAC;MAAA;MAAA,CAAA3D,aAAA,GAAA8B,CAAA,WAAI,EAAE;MAC7EqD,oBAAoB,EAAEL,eAAe,CAACK;KACvC;IAAC;IAAAnF,aAAA,GAAAI,CAAA;IAEF,OAAO;MACL8D,MAAM,EAAE,IAAI,CAACxB,eAAe,CAAC3B,QAAQ,CAACA,QAAQ,EAAEwC,aAAa,CAAC;MAC9DtC,YAAY,EAAEF,QAAQ,CAACE,YAAY;MACnCE,WAAW,EAAEJ,QAAQ,CAACI;KACvB;EACH;EAEA;EACOiE,iBAAiBA,CAACC,WAAmB,EAAEC,OAAgB,EAAEC,QAAiB;IAAA;IAAAvF,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IAC/E;IACAoF,OAAO,CAACC,GAAG,CAAC,YAAYJ,WAAW,KAAKC,OAAO;IAAA;IAAA,CAAAtF,aAAA,GAAA8B,CAAA,WAAG,SAAS;IAAA;IAAA,CAAA9B,aAAA,GAAA8B,CAAA,WAAG,SAAS,GAAE,EAAEyD,QAAQ,CAAC;EACtF;EAEOG,kBAAkBA,CAACL,WAAmB;IAAA;IAAArF,aAAA,GAAAO,CAAA;IAAAP,aAAA,GAAAI,CAAA;IAC3C;IACA,OAAO;MACLuF,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC;MACdC,SAAS,EAAE,CAAC;MACZC,cAAc,EAAE;KACjB;EACH;;AAGF,OAAO,MAAMC,uBAAuB;AAAA;AAAA,CAAA/F,aAAA,GAAAI,CAAA,QAAG,IAAIF,uBAAuB,EAAE","ignoreList":[]}