{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/templates.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/templates.ts"],"sourcesContent":["import { Router, Request } from 'express';\nimport { Prisma } from '../prisma';\nimport { prisma } from '../prisma';\nimport { validate } from '../validation';\nimport { z } from 'zod';\n\nconst router = Router();\n\n// Validation schemas\nconst templateCreateSchema = z.object({\n  title: z\n    .string()\n    .min(1)\n    .max(255)\n    .regex(/^[^<>]*$/, 'Title cannot contain HTML tags'),\n  titleFr: z\n    .string()\n    .max(255)\n    .regex(/^[^<>]*$/, 'French title cannot contain HTML tags')\n    .optional(),\n  description: z.string().max(2000).optional(),\n  descriptionFr: z.string().max(2000).optional(),\n  type: z.enum(['UNIT_PLAN', 'LESSON_PLAN']),\n  category: z.enum(['BY_SUBJECT', 'BY_GRADE', 'BY_THEME', 'BY_SEASON', 'BY_SKILL', 'CUSTOM']),\n  subject: z.string().max(100).optional(),\n  gradeMin: z.number().int().min(1).max(12).optional(),\n  gradeMax: z.number().int().min(1).max(12).optional(),\n  tags: z.array(z.string().max(50)).max(20).optional(),\n  keywords: z.array(z.string().max(50)).max(20).optional(),\n  isPublic: z.boolean().optional(),\n  estimatedWeeks: z.number().int().positive().max(52).optional(),\n  estimatedMinutes: z.number().int().positive().max(480).optional(),\n  content: z.object({\n    // Unit Plan fields\n    overview: z.string().optional(),\n    learningGoals: z.array(z.string()).optional(),\n    bigIdeas: z.string().optional(),\n    essentialQuestions: z.array(z.string()).optional(),\n    assessments: z.array(z.record(z.unknown())).optional(),\n    activities: z.array(z.record(z.unknown())).optional(),\n    successCriteria: z.array(z.string()).optional(),\n    keyVocabulary: z.array(z.string()).optional(),\n    crossCurricularConnections: z.string().optional(),\n    differentiationStrategies: z\n      .object({\n        forStruggling: z.array(z.string()).optional(),\n        forAdvanced: z.array(z.string()).optional(),\n        forELL: z.array(z.string()).optional(),\n        forIEP: z.array(z.string()).optional(),\n      })\n      .optional(),\n    // Lesson Plan fields\n    objectives: z.array(z.string()).optional(),\n    materials: z.array(z.string()).optional(),\n    mindsOn: z.string().optional(),\n    action: z.string().optional(),\n    consolidation: z.string().optional(),\n    grouping: z.string().optional(),\n    accommodations: z.array(z.string()).optional(),\n    modifications: z.array(z.string()).optional(),\n    extensions: z.array(z.string()).optional(),\n    assessmentType: z.string().optional(),\n    assessmentNotes: z.string().optional(),\n  }),\n  unitStructure: z\n    .object({\n      phases: z\n        .array(\n          z.object({\n            name: z.string(),\n            description: z.string().optional(),\n            estimatedDays: z.number().optional(),\n            learningGoals: z.array(z.string()).optional(),\n          }),\n        )\n        .optional(),\n      resources: z\n        .array(\n          z.object({\n            title: z.string(),\n            type: z.string(),\n            url: z.string().optional(),\n            notes: z.string().optional(),\n          }),\n        )\n        .optional(),\n    })\n    .optional(),\n  lessonStructure: z\n    .object({\n      duration: z.number().optional(),\n      sections: z\n        .array(\n          z.object({\n            name: z.string(),\n            description: z.string(),\n            timeAllocation: z.number().optional(),\n            activities: z.array(z.string()).optional(),\n          }),\n        )\n        .optional(),\n    })\n    .optional(),\n});\n\nconst templateUpdateSchema = templateCreateSchema.partial();\n\nconst templateSearchSchema = z.object({\n  type: z.enum(['UNIT_PLAN', 'LESSON_PLAN']).optional(),\n  category: z\n    .enum(['BY_SUBJECT', 'BY_GRADE', 'BY_THEME', 'BY_SEASON', 'BY_SKILL', 'CUSTOM'])\n    .optional(),\n  subject: z.string().optional(),\n  gradeMin: z.number().int().min(1).max(12).optional(),\n  gradeMax: z.number().int().min(1).max(12).optional(),\n  isSystem: z.boolean().optional(),\n  isPublic: z.boolean().optional(),\n  createdByUserId: z.number().int().optional(),\n  search: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  sortBy: z.enum(['title', 'usageCount', 'averageRating', 'createdAt', 'lastUsedAt']).optional(),\n  sortOrder: z.enum(['asc', 'desc']).optional(),\n  limit: z.number().int().min(1).max(100).optional(),\n  offset: z.number().int().min(0).optional(),\n});\n\n// Get all templates with filtering and search\nrouter.get('/', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const queryValidation = templateSearchSchema.safeParse(req.query);\n    if (!queryValidation.success) {\n      return res\n        .status(400)\n        .json({ error: 'Invalid query parameters', details: queryValidation.error });\n    }\n\n    const {\n      type,\n      category,\n      subject,\n      gradeMin,\n      gradeMax,\n      isSystem,\n      isPublic,\n      createdByUserId,\n      search,\n      tags,\n      sortBy = 'createdAt',\n      sortOrder = 'desc',\n      limit = 20,\n      offset = 0,\n    } = queryValidation.data;\n\n    const where: Prisma.PlanTemplateWhereInput = {\n      OR: [\n        { isSystem: true }, // System templates visible to all\n        { isPublic: true }, // Public templates visible to all\n        { createdByUserId: userId }, // User's own templates\n      ],\n    };\n\n    // Apply filters\n    if (type) where.type = type;\n    if (category) where.category = category;\n    if (subject) where.subject = subject;\n    if (gradeMin !== undefined || gradeMax !== undefined) {\n      where.AND = [];\n      if (gradeMin !== undefined) {\n        where.AND.push({\n          OR: [{ gradeMin: { lte: gradeMin } }, { gradeMin: null }],\n        });\n      }\n      if (gradeMax !== undefined) {\n        where.AND.push({\n          OR: [{ gradeMax: { gte: gradeMax } }, { gradeMax: null }],\n        });\n      }\n    }\n    if (isSystem !== undefined) where.isSystem = isSystem;\n    if (isPublic !== undefined) where.isPublic = isPublic;\n    if (createdByUserId !== undefined) where.createdByUserId = createdByUserId;\n\n    // Text search with database-specific case handling\n    if (search) {\n      const mode = process.env.DATABASE_URL?.includes('postgresql')\n        ? { mode: 'insensitive' as const }\n        : {};\n\n      where.OR = [\n        { title: { contains: search, ...mode } },\n        { description: { contains: search, ...mode } },\n        { titleFr: { contains: search, ...mode } },\n        { descriptionFr: { contains: search, ...mode } },\n      ];\n    }\n\n    // Tag filtering - Using JSON array contains for tags\n    if (tags && tags.length > 0) {\n      where.tags = {\n        path: [],\n        array_contains: tags,\n      } as Prisma.JsonFilter; // Type assertion for JSON array operations\n    }\n\n    // Sorting\n    const orderBy: Prisma.PlanTemplateOrderByWithRelationInput = {};\n    if (sortBy === 'title') orderBy.title = sortOrder;\n    else if (sortBy === 'usageCount') orderBy.usageCount = sortOrder;\n    else if (sortBy === 'averageRating') orderBy.averageRating = sortOrder;\n    else if (sortBy === 'createdAt') orderBy.createdAt = sortOrder;\n    else if (sortBy === 'lastUsedAt') orderBy.lastUsedAt = sortOrder;\n\n    const templates = await prisma.planTemplate.findMany({\n      where,\n      orderBy,\n      take: limit,\n      skip: offset,\n      include: {\n        createdByUser: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            ratings: true,\n            variations: true,\n          },\n        },\n      },\n    });\n\n    const total = await prisma.planTemplate.count({ where });\n\n    res.json({\n      templates,\n      pagination: {\n        total,\n        limit,\n        offset,\n        hasMore: offset + limit < total,\n      },\n    });\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Get a single template\nrouter.get('/:id', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const template = await prisma.planTemplate.findFirst({\n      where: {\n        id: req.params.id,\n        OR: [{ isSystem: true }, { isPublic: true }, { createdByUserId: userId }],\n      },\n      include: {\n        createdByUser: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n        ratings: {\n          select: {\n            id: true,\n            userId: true,\n            rating: true,\n            comment: true,\n            createdAt: true,\n          },\n          orderBy: { createdAt: 'desc' },\n          take: 5,\n        },\n        variations: {\n          orderBy: { createdAt: 'desc' },\n        },\n        _count: {\n          select: {\n            ratings: true,\n          },\n        },\n      },\n    });\n\n    if (!template) {\n      return res.status(404).json({ error: 'Template not found' });\n    }\n\n    res.json(template);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Create a new template\nrouter.post('/', validate(templateCreateSchema), async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const {\n      tags = [],\n      keywords = [],\n      isPublic = false,\n      content,\n      unitStructure,\n      lessonStructure,\n      ...templateData\n    } = req.body;\n\n    // Validate grade range\n    if (\n      templateData.gradeMin &&\n      templateData.gradeMax &&\n      templateData.gradeMin > templateData.gradeMax\n    ) {\n      return res.status(400).json({ error: 'Minimum grade cannot be greater than maximum grade' });\n    }\n\n    const template = await prisma.planTemplate.create({\n      data: {\n        ...templateData,\n        createdByUserId: userId,\n        tags,\n        keywords,\n        isPublic,\n        content,\n        unitStructure: unitStructure || null,\n        lessonStructure: lessonStructure || null,\n      },\n      include: {\n        createdByUser: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            ratings: true,\n            variations: true,\n          },\n        },\n      },\n    });\n\n    res.status(201).json(template);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Update a template\nrouter.put('/:id', validate(templateUpdateSchema), async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    // Verify ownership (only creator can edit)\n    const existing = await prisma.planTemplate.findFirst({\n      where: {\n        id: req.params.id,\n        createdByUserId: userId,\n        isSystem: false, // System templates cannot be edited\n      },\n    });\n\n    if (!existing) {\n      return res.status(404).json({ error: 'Template not found or not editable' });\n    }\n\n    const { gradeMin, gradeMax, ...updateData } = req.body;\n\n    // Validate grade range if provided\n    if (gradeMin && gradeMax && gradeMin > gradeMax) {\n      return res.status(400).json({ error: 'Minimum grade cannot be greater than maximum grade' });\n    }\n\n    const template = await prisma.planTemplate.update({\n      where: { id: req.params.id },\n      data: {\n        ...updateData,\n        gradeMin,\n        gradeMax,\n      },\n      include: {\n        createdByUser: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n        variations: true,\n        _count: {\n          select: {\n            ratings: true,\n          },\n        },\n      },\n    });\n\n    res.json(template);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Delete a template\nrouter.delete('/:id', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    // Verify ownership\n    const template = await prisma.planTemplate.findFirst({\n      where: {\n        id: req.params.id,\n        createdByUserId: userId,\n        isSystem: false, // System templates cannot be deleted\n      },\n    });\n\n    if (!template) {\n      return res.status(404).json({ error: 'Template not found or not deletable' });\n    }\n\n    await prisma.planTemplate.delete({\n      where: { id: req.params.id },\n    });\n\n    res.status(204).end();\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Duplicate a template\nrouter.post('/:id/duplicate', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { title, isPublic = false } = req.body;\n\n    const original = await prisma.planTemplate.findFirst({\n      where: {\n        id: req.params.id,\n        OR: [{ isSystem: true }, { isPublic: true }, { createdByUserId: userId }],\n      },\n    });\n\n    if (!original) {\n      return res.status(404).json({ error: 'Template not found' });\n    }\n\n    const duplicated = await prisma.planTemplate.create({\n      data: {\n        title: title || `${original.title} (Copy)`,\n        titleFr: original.titleFr ? `${original.titleFr} (Copie)` : null,\n        description: original.description,\n        descriptionFr: original.descriptionFr,\n        type: original.type,\n        category: original.category,\n        subject: original.subject,\n        gradeMin: original.gradeMin,\n        gradeMax: original.gradeMax,\n        tags: original.tags,\n        keywords: original.keywords,\n        createdByUserId: userId,\n        isSystem: false,\n        isPublic,\n        content: original.content,\n        estimatedWeeks: original.estimatedWeeks,\n        unitStructure: original.unitStructure,\n        estimatedMinutes: original.estimatedMinutes,\n        lessonStructure: original.lessonStructure,\n      },\n      include: {\n        createdByUser: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            ratings: true,\n            variations: true,\n          },\n        },\n      },\n    });\n\n    res.status(201).json(duplicated);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Apply template to create a new plan\nrouter.post('/:id/apply', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { customizations = {} } = req.body;\n\n    const template = await prisma.planTemplate.findFirst({\n      where: {\n        id: req.params.id,\n        OR: [{ isSystem: true }, { isPublic: true }, { createdByUserId: userId }],\n      },\n    });\n\n    if (!template) {\n      return res.status(404).json({ error: 'Template not found' });\n    }\n\n    // Update usage tracking\n    await prisma.planTemplate.update({\n      where: { id: template.id },\n      data: {\n        usageCount: { increment: 1 },\n        lastUsedAt: new Date(),\n      },\n    });\n\n    // Merge template content with user customizations\n    const appliedContent = {\n      ...(template.content as Record<string, unknown>),\n      ...(customizations || {}),\n    };\n\n    res.json({\n      template: {\n        id: template.id,\n        title: template.title,\n        type: template.type,\n        content: appliedContent,\n        unitStructure: template.unitStructure,\n        lessonStructure: template.lessonStructure,\n        estimatedWeeks: template.estimatedWeeks,\n        estimatedMinutes: template.estimatedMinutes,\n      },\n      appliedContent,\n    });\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Rate a template\nrouter.post('/:id/rate', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const { rating, comment } = req.body;\n\n    if (!rating || rating < 1 || rating > 5) {\n      return res.status(400).json({ error: 'Rating must be between 1 and 5' });\n    }\n\n    // Check if template exists and is accessible\n    const template = await prisma.planTemplate.findFirst({\n      where: {\n        id: req.params.id,\n        OR: [{ isSystem: true }, { isPublic: true }, { createdByUserId: userId }],\n      },\n    });\n\n    if (!template) {\n      return res.status(404).json({ error: 'Template not found' });\n    }\n\n    // Upsert rating\n    const templateRating = await prisma.templateRating.upsert({\n      where: {\n        templateId_userId: {\n          templateId: req.params.id,\n          userId,\n        },\n      },\n      update: {\n        rating,\n        comment,\n      },\n      create: {\n        templateId: req.params.id,\n        userId,\n        rating,\n        comment,\n      },\n    });\n\n    // Recalculate average rating\n    const ratings = await prisma.templateRating.findMany({\n      where: { templateId: req.params.id },\n      select: { rating: true },\n    });\n\n    const averageRating =\n      ratings.length > 0 ? ratings.reduce((sum, r) => sum + r.rating, 0) / ratings.length : 0;\n\n    await prisma.planTemplate.update({\n      where: { id: req.params.id },\n      data: { averageRating },\n    });\n\n    res.json(templateRating);\n  } catch (err) {\n    _next(err);\n  }\n});\n\n// Get categories and subjects for filtering\nrouter.get('/metadata/options', async (req: Request, res, _next) => {\n  try {\n    const userId = req.user?.id || 0;\n    if (!userId) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const [subjects, grades, categories, tags] = await Promise.all([\n      prisma.planTemplate.findMany({\n        where: {\n          OR: [{ isSystem: true }, { isPublic: true }, { createdByUserId: userId }],\n          subject: { not: null },\n        },\n        select: { subject: true },\n        distinct: ['subject'],\n      }),\n      prisma.planTemplate.findMany({\n        where: {\n          AND: [\n            {\n              OR: [{ isSystem: true }, { isPublic: true }, { createdByUserId: userId }],\n            },\n            {\n              OR: [{ gradeMin: { not: null } }, { gradeMax: { not: null } }],\n            },\n          ],\n        },\n        select: { gradeMin: true, gradeMax: true },\n      }),\n      prisma.planTemplate.findMany({\n        select: { category: true },\n        distinct: ['category'],\n      }),\n      prisma.planTemplate.findMany({\n        where: {\n          OR: [{ isSystem: true }, { isPublic: true }, { createdByUserId: userId }],\n        },\n        select: { tags: true },\n      }),\n    ]);\n\n    const uniqueSubjects = subjects\n      .map((t) => t.subject)\n      .filter((s) => s !== null)\n      .sort();\n\n    const gradeRange = grades.reduce(\n      (range, template) => {\n        if (template.gradeMin) range.min = Math.min(range.min, template.gradeMin);\n        if (template.gradeMax) range.max = Math.max(range.max, template.gradeMax);\n        return range;\n      },\n      { min: 12, max: 1 },\n    );\n\n    const allTags = tags\n      .flatMap((t) => (Array.isArray(t.tags) ? t.tags : []))\n      .filter((tag, index, array) => array.indexOf(tag) === index)\n      .sort();\n\n    res.json({\n      subjects: uniqueSubjects,\n      grades: Array.from(\n        { length: gradeRange.max - gradeRange.min + 1 },\n        (_, i) => gradeRange.min + i,\n      ),\n      categories: categories.map((c) => c.category),\n      tags: allTags,\n    });\n  } catch (err) {\n    _next(err);\n  }\n});\n\nexport default router;\n"],"version":3}