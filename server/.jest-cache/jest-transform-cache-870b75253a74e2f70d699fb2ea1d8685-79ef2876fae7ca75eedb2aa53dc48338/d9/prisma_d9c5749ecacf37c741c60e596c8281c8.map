{"version":3,"names":["cov_20g0ieqrgz","actualCoverage","PrismaClient","globalForPrisma","s","globalThis","isTestEnvironment","b","process","env","NODE_ENV","JEST_WORKER_ID","getPrisma","f","testPrismaClient","prisma","log","Proxy","get","target","prop","client","has"],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/prisma.ts"],"sourcesContent":["// Import from the database package\nimport { PrismaClient } from '@teaching-engine/database';\n\n// Re-export everything from database package (including Prisma namespace)\nexport * from '@teaching-engine/database';\n\n// Create singleton instance for server usage\nconst globalForPrisma = globalThis as unknown as {\n  prisma: InstanceType<typeof PrismaClient> | undefined;\n  testPrismaClient: InstanceType<typeof PrismaClient> | undefined;\n};\n\n// In test environment, use the test client if available\nconst isTestEnvironment = process.env.NODE_ENV === 'test' || process.env.JEST_WORKER_ID;\n\n// Create a getter that always returns the current test client\nconst getPrisma = () => {\n  if (isTestEnvironment && globalForPrisma.testPrismaClient) {\n    return globalForPrisma.testPrismaClient;\n  }\n  return (\n    globalForPrisma.prisma ??\n    new PrismaClient({\n      log: process.env.NODE_ENV === 'development' ? ['query', 'error', 'warn'] : ['error'],\n    })\n  );\n};\n\n// Create a proxy to always use the current client\nexport const prisma = new Proxy({} as InstanceType<typeof PrismaClient>, {\n  get(target, prop) {\n    const client = getPrisma();\n    return client[prop as keyof InstanceType<typeof PrismaClient>];\n  },\n  has(target, prop) {\n    const client = getPrisma();\n    return prop in client;\n  },\n});\n\nif (process.env.NODE_ENV !== 'production' && !isTestEnvironment) {\n  globalForPrisma.prisma = getPrisma();\n}\n\n// Re-export PrismaClient\nexport { PrismaClient };\n"],"mappings":"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","ignoreList":[]}