{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/planner-state.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/routes/planner-state.ts"],"sourcesContent":["import express, { Response } from 'express';\nimport { prisma } from '../prisma';\nimport { z } from 'zod';\nimport rateLimit from 'express-rate-limit';\nimport { cuidSchema } from '../validation';\nimport DOMPurify from 'isomorphic-dompurify';\n\nconst router = express.Router();\n\n// Rate limiting for state operations\nconst stateRateLimit = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // Limit each IP to 100 requests per windowMs\n  message: { error: 'Too many state update requests, please try again later' },\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\n// Sanitize text content to prevent XSS\nconst sanitizeText = (text: string): string => {\n  return DOMPurify.sanitize(text, { ALLOWED_TAGS: [], ALLOWED_ATTR: [] });\n};\n\n// CSRF protection middleware\nconst csrfProtection = (req: express.Request, res: express.Response, next: express.NextFunction) => {\n  const origin = req.get('origin');\n  const referer = req.get('referer');\n  const allowedOrigins = [\n    process.env.CLIENT_URL || 'http://localhost:5173',\n    'http://localhost:5173',\n    'http://localhost:3000'\n  ];\n  \n  if (req.method !== 'GET' && req.method !== 'HEAD') {\n    if (!origin && !referer) {\n      return res.status(403).json({ error: 'CSRF protection: Missing origin/referer header' });\n    }\n    \n    const sourceUrl = origin || (referer ? new URL(referer).origin : '');\n    if (!allowedOrigins.includes(sourceUrl)) {\n      return res.status(403).json({ error: 'CSRF protection: Invalid origin' });\n    }\n  }\n  \n  next();\n};\n\n// Secure validation schema for weekly planner state\nconst WorkingHoursSchema = z.object({\n  start: z.string().regex(/^\\d{2}:\\d{2}$/),\n  end: z.string().regex(/^\\d{2}:\\d{2}$/)\n});\n\n// Secure schema for draft changes to prevent injection\nconst DraftChangesSchema = z.object({\n  planId: cuidSchema().optional(),\n  title: z.string().max(200).optional(),\n  content: z.string().max(10000).optional(),\n  timestamp: z.number().positive().optional(),\n  changes: z.record(z.string().max(100), z.string().max(1000)).optional()\n}).strict();\n\n// Secure schema for offline data\nconst OfflineDataSchema = z.object({\n  pendingChanges: z.array(DraftChangesSchema).max(50).optional(),\n  timestamp: z.number().positive().optional(),\n  syncVersion: z.string().max(50).optional()\n}).strict();\n\nconst WeeklyPlannerStateSchema = z.object({\n  // View preferences\n  defaultView: z.enum(['week', 'month', 'agenda']).default('week'),\n  timeSlotDuration: z.number().int().min(15).max(60).default(30),\n  showWeekends: z.boolean().default(false),\n  startOfWeek: z.number().int().min(0).max(1).default(1),\n  workingHours: WorkingHoursSchema.default({ start: '08:00', end: '16:00' }),\n  \n  // UI preferences\n  sidebarExpanded: z.boolean().default(true),\n  showMiniCalendar: z.boolean().default(true),\n  showResourcePanel: z.boolean().default(true),\n  compactMode: z.boolean().default(false),\n  theme: z.enum(['light', 'dark', 'system']).default('light'),\n  \n  // Planning preferences\n  autoSave: z.boolean().default(true),\n  autoSaveInterval: z.number().min(5).max(300).default(30),\n  showUncoveredOutcomes: z.boolean().default(true),\n  defaultLessonDuration: z.number().min(15).max(240).default(60),\n  \n  // Current state\n  currentWeekStart: z.string().datetime().optional(),\n  lastActiveView: z.string().max(100).optional(),\n  draftChanges: DraftChangesSchema.optional(),\n  \n  // Advanced features\n  maxHistorySize: z.number().min(10).max(100).default(50),\n  \n  // Offline support\n  hasOfflineChanges: z.boolean().default(false),\n  offlineData: OfflineDataSchema.optional()\n}).strict();\n\ninterface AuthenticatedRequest extends express.Request {\n  user?: {\n    id: number;\n    email: string;\n  };\n}\n\n// GET /api/planner/state - Get user's planner state\nrouter.get('/state', async (req: AuthenticatedRequest, res: express.Response) => {\n  try {\n    if (!req.user?.id) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const userId = req.user.id;\n    \n    let plannerState = await prisma.weeklyPlannerState.findUnique({\n      where: { userId }\n    });\n\n    // Create default state if it doesn't exist\n    if (!plannerState) {\n      plannerState = await prisma.weeklyPlannerState.create({\n        data: {\n          userId,\n          defaultView: 'week',\n          timeSlotDuration: 30,\n          showWeekends: false,\n          startOfWeek: 1,\n          workingHours: JSON.stringify({ start: '08:00', end: '16:00' }),\n          sidebarExpanded: true,\n          showMiniCalendar: true,\n          showResourcePanel: true,\n          compactMode: false,\n          theme: 'light',\n          autoSave: true,\n          autoSaveInterval: 30,\n          showUncoveredOutcomes: true,\n          defaultLessonDuration: 60,\n          currentWeekStart: new Date(),\n          undoHistory: '[]',\n          redoHistory: '[]',\n          maxHistorySize: 50,\n          lastSyncedAt: new Date(),\n          hasOfflineChanges: false\n        }\n      });\n    }\n\n    // Parse JSON fields for response\n    const responseState = {\n      ...plannerState,\n      workingHours: JSON.parse(plannerState.workingHours),\n      draftChanges: plannerState.draftChanges ? JSON.parse(plannerState.draftChanges) : null,\n      undoHistory: JSON.parse(plannerState.undoHistory),\n      redoHistory: JSON.parse(plannerState.redoHistory),\n      offlineData: plannerState.offlineData ? JSON.parse(plannerState.offlineData) : null\n    };\n\n    res.json(responseState);\n  } catch (error) {\n    console.error('Error fetching planner state:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\n// PUT /api/planner/state - Update user's planner state\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrouter.put('/state', stateRateLimit as any, csrfProtection, async (req: AuthenticatedRequest, res: Response) => {\n  try {\n    if (!req.user?.id) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const userId = req.user.id;\n    \n    // Validate the request body\n    const validationResult = WeeklyPlannerStateSchema.safeParse(req.body);\n    if (!validationResult.success) {\n      return res.status(400).json({ \n        error: 'Invalid planner state data',\n        details: validationResult.error.errors\n      });\n    }\n\n    const stateData = validationResult.data;\n    \n    // Sanitize text fields to prevent XSS\n    const sanitizedDraftChanges = stateData.draftChanges ? {\n      ...stateData.draftChanges,\n      title: stateData.draftChanges.title ? sanitizeText(stateData.draftChanges.title) : undefined,\n      content: stateData.draftChanges.content ? sanitizeText(stateData.draftChanges.content) : undefined,\n      changes: stateData.draftChanges.changes ? \n        Object.fromEntries(\n          Object.entries(stateData.draftChanges.changes).map(([key, value]) => \n            [sanitizeText(key), sanitizeText(value)]\n          )\n        ) : undefined\n    } : undefined;\n    \n    // Prepare data for database with JSON serialization\n    const updateData = {\n      defaultView: stateData.defaultView,\n      timeSlotDuration: stateData.timeSlotDuration,\n      showWeekends: stateData.showWeekends,\n      startOfWeek: stateData.startOfWeek,\n      workingHours: JSON.stringify(stateData.workingHours),\n      sidebarExpanded: stateData.sidebarExpanded,\n      showMiniCalendar: stateData.showMiniCalendar,\n      showResourcePanel: stateData.showResourcePanel,\n      compactMode: stateData.compactMode,\n      theme: stateData.theme,\n      autoSave: stateData.autoSave,\n      autoSaveInterval: stateData.autoSaveInterval,\n      showUncoveredOutcomes: stateData.showUncoveredOutcomes,\n      defaultLessonDuration: stateData.defaultLessonDuration,\n      currentWeekStart: stateData.currentWeekStart ? new Date(stateData.currentWeekStart) : new Date(),\n      lastActiveView: stateData.lastActiveView ? sanitizeText(stateData.lastActiveView) : null,\n      draftChanges: sanitizedDraftChanges ? JSON.stringify(sanitizedDraftChanges) : null,\n      maxHistorySize: stateData.maxHistorySize,\n      hasOfflineChanges: stateData.hasOfflineChanges,\n      offlineData: stateData.offlineData ? JSON.stringify(stateData.offlineData) : null,\n      lastSyncedAt: new Date()\n    };\n\n    // Upsert the planner state\n    const plannerState = await prisma.weeklyPlannerState.upsert({\n      where: { userId },\n      update: updateData,\n      create: {\n        userId,\n        ...updateData,\n        undoHistory: '[]',\n        redoHistory: '[]'\n      }\n    });\n\n    // Parse JSON fields for response\n    const responseState = {\n      ...plannerState,\n      workingHours: JSON.parse(plannerState.workingHours),\n      draftChanges: plannerState.draftChanges ? JSON.parse(plannerState.draftChanges) : null,\n      undoHistory: JSON.parse(plannerState.undoHistory),\n      redoHistory: JSON.parse(plannerState.redoHistory),\n      offlineData: plannerState.offlineData ? JSON.parse(plannerState.offlineData) : null\n    };\n\n    res.json(responseState);\n  } catch (error) {\n    console.error('Error updating planner state:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\n// GET /api/planner/week/:weekStart/state - Get state for specific week\nrouter.get('/week/:weekStart/state', async (req: AuthenticatedRequest, res: Response) => {\n  try {\n    if (!req.user?.id) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const userId = req.user.id;\n    const weekStart = new Date(req.params.weekStart);\n    \n    if (isNaN(weekStart.getTime())) {\n      return res.status(400).json({ error: 'Invalid week start date' });\n    }\n\n    // Get lesson plans for the week\n    const weekEnd = new Date(weekStart);\n    weekEnd.setDate(weekEnd.getDate() + 7);\n\n    const lessonPlans = await prisma.eTFOLessonPlan.findMany({\n      where: {\n        userId,\n        date: {\n          gte: weekStart,\n          lt: weekEnd\n        }\n      },\n      include: {\n        unitPlan: {\n          select: {\n            id: true,\n            title: true\n          }\n        },\n        expectations: {\n          include: {\n            expectation: true\n          }\n        },\n        resources: true\n      },\n      orderBy: {\n        date: 'asc'\n      }\n    });\n\n    // Get daybook entries for the week\n    const daybookEntries = await prisma.daybookEntry.findMany({\n      where: {\n        userId,\n        date: {\n          gte: weekStart,\n          lt: weekEnd\n        }\n      },\n      include: {\n        lessonPlan: {\n          select: {\n            id: true,\n            title: true\n          }\n        },\n        expectations: {\n          include: {\n            expectation: true\n          }\n        }\n      },\n      orderBy: {\n        date: 'asc'\n      }\n    });\n\n    // Get uncovered curriculum expectations for progress tracking\n    const allExpectations = await prisma.curriculumExpectation.count({\n      where: {\n        // Add any filters for user's grade/subject preferences\n      }\n    });\n\n    const coveredExpectations = await prisma.curriculumExpectation.count({\n      where: {\n        lessonPlans: {\n          some: {\n            lessonPlan: {\n              userId,\n              date: {\n                gte: new Date(new Date().getFullYear(), 0, 1), // Start of academic year\n                lt: new Date(new Date().getFullYear() + 1, 0, 1)\n              }\n            }\n          }\n        }\n      }\n    });\n\n    const weeklyState = {\n      weekStart,\n      weekEnd,\n      lessonPlans,\n      daybookEntries,\n      progress: {\n        totalExpectations: allExpectations,\n        coveredExpectations,\n        coveragePercentage: allExpectations > 0 ? Math.round((coveredExpectations / allExpectations) * 100) : 0\n      }\n    };\n\n    res.json(weeklyState);\n  } catch (error) {\n    console.error('Error fetching weekly state:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\n// POST /api/planner/state/reset - Reset planner state to defaults\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrouter.post('/state/reset', stateRateLimit as any, csrfProtection, async (req: AuthenticatedRequest, res: Response) => {\n  try {\n    if (!req.user?.id) {\n      return res.status(401).json({ error: 'Unauthorized' });\n    }\n\n    const userId = req.user.id;\n    \n    const defaultState = {\n      defaultView: 'week' as const,\n      timeSlotDuration: 30,\n      showWeekends: false,\n      startOfWeek: 1,\n      workingHours: JSON.stringify({ start: '08:00', end: '16:00' }),\n      sidebarExpanded: true,\n      showMiniCalendar: true,\n      showResourcePanel: true,\n      compactMode: false,\n      theme: 'light' as const,\n      autoSave: true,\n      autoSaveInterval: 30,\n      showUncoveredOutcomes: true,\n      defaultLessonDuration: 60,\n      currentWeekStart: new Date(),\n      lastActiveView: null,\n      draftChanges: null,\n      undoHistory: '[]',\n      redoHistory: '[]',\n      maxHistorySize: 50,\n      lastSyncedAt: new Date(),\n      hasOfflineChanges: false,\n      offlineData: null\n    };\n\n    const plannerState = await prisma.weeklyPlannerState.upsert({\n      where: { userId },\n      update: defaultState,\n      create: {\n        userId,\n        ...defaultState\n      }\n    });\n\n    // Parse JSON fields for response\n    const responseState = {\n      ...plannerState,\n      workingHours: JSON.parse(plannerState.workingHours),\n      draftChanges: plannerState.draftChanges ? JSON.parse(plannerState.draftChanges) : null,\n      undoHistory: JSON.parse(plannerState.undoHistory),\n      redoHistory: JSON.parse(plannerState.redoHistory),\n      offlineData: plannerState.offlineData ? JSON.parse(plannerState.offlineData) : null\n    };\n\n    res.json(responseState);\n  } catch (error) {\n    console.error('Error resetting planner state:', error);\n    res.status(500).json({ error: 'Internal server error' });\n  }\n});\n\nexport default router;"],"version":3}