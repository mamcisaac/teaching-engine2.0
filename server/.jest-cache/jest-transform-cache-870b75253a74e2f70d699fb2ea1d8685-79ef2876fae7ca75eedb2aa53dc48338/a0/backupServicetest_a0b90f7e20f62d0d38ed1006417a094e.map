{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/integration/backupService.test.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/tests/integration/backupService.test.ts"],"sourcesContent":["import fs from 'fs/promises';\nimport path from 'path';\nimport { describe, it, expect, beforeAll, afterAll } from '@jest/globals';\nimport { createBackup, restoreBackup } from '../../src/services/backupService';\n\ndescribe('backup service', () => {\n  const dbPath = path.resolve('test-backup.sqlite');\n  // Use the same uploads path that the service uses: src/uploads\n  const uploads = path.join(process.cwd(), 'server/src/uploads');\n\n  beforeAll(async () => {\n    process.env.DATABASE_URL = `file:${dbPath}`;\n    await fs.writeFile(dbPath, 'data');\n    await fs.mkdir(uploads, { recursive: true });\n    await fs.writeFile(path.join(uploads, 'file.txt'), 'hi');\n  });\n\n  afterAll(async () => {\n    await fs.rm(dbPath, { force: true });\n    await fs.rm(uploads, { recursive: true, force: true });\n  });\n\n  it('creates and restores backup', async () => {\n    console.log('Test uploads path:', uploads);\n    console.log('Working directory:', process.cwd());\n\n    const buf = await createBackup();\n    console.log('Backup created, size:', buf.length);\n\n    await fs.rm(dbPath, { force: true });\n    await fs.rm(uploads, { recursive: true, force: true });\n\n    await restoreBackup(buf);\n    console.log('Backup restored');\n\n    const fileExists = async (p: string) => !!(await fs.stat(p).catch(() => false));\n    const dbExists = await fileExists(dbPath);\n    const fileInUploadsExists = await fileExists(path.join(uploads, 'file.txt'));\n\n    console.log('DB exists:', dbExists);\n    console.log('File in uploads exists:', fileInUploadsExists);\n    console.log('Expected file path:', path.join(uploads, 'file.txt'));\n\n    expect(dbExists).toBe(true);\n    expect(fileInUploadsExists).toBe(true);\n  }, 10000);\n});\n"],"version":3}