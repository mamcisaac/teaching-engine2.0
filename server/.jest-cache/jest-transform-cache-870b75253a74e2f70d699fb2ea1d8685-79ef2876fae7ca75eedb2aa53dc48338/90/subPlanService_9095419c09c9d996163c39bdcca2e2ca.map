{"file":"/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/subPlanService.ts","mappings":"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","names":[],"sources":["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/subPlanService.ts"],"sourcesContent":["import { prisma, Prisma } from '../prisma';\nimport PDFDocument from 'pdfkit';\nimport { generateSubPlanPDF } from './subPlanGenerator';\n\nexport interface ScheduleEntry {\n  time: string;\n  activity?: string;\n  note?: string;\n}\n\nexport interface SubPlanData {\n  date: string;\n  schedule: ScheduleEntry[];\n  pullOuts: { time: string; reason: string }[];\n  contacts: Record<string, string>;\n  procedures?: string;\n  outcomes?: Array<{\n    code: string;\n    description: string;\n    subject: string;\n  }>;\n  goals?: Array<{\n    id: number;\n    text: string;\n    status: string;\n    studentName?: string;\n  }>;\n  routines?: Array<{\n    id: number;\n    title: string;\n    description: string;\n    category: string;\n    timeOfDay?: string;\n  }>;\n  fallbackPlan?: string;\n}\n\nfunction minToTime(min: number): string {\n  const h = String(Math.floor(min / 60)).padStart(2, '0');\n  const m = String(min % 60).padStart(2, '0');\n  return `${h}:${m}`;\n}\n\nexport interface SubPlanOptions {\n  includeGoals?: boolean;\n  includeRoutines?: boolean;\n  includePlans?: boolean;\n  anonymize?: boolean;\n  userId?: number;\n}\n\nexport async function buildSubPlanData(\n  date: string,\n  options: SubPlanOptions = {},\n): Promise<SubPlanData> {\n  const dayStart = new Date(date);\n  dayStart.setUTCHours(0, 0, 0, 0);\n  const dayEnd = new Date(dayStart);\n  dayEnd.setUTCDate(dayStart.getUTCDate() + 1);\n\n  const {\n    includeGoals = true,\n    includeRoutines = true,\n    includePlans = true,\n    anonymize = false,\n    userId = 1,\n  } = options;\n\n  const [plan, events, blocks, prefs, routines, studentGoals] = await Promise.all([\n    // DISABLED: Legacy dailyPlan model removed in ETFO migration\n    includePlans ? Promise.resolve(null) : Promise.resolve(null), // Legacy dailyPlan query disabled\n    prisma.calendarEvent.findMany({\n      where: { start: { lte: dayEnd }, end: { gte: dayStart } },\n    }),\n    prisma.unavailableBlock.findMany({ where: { date: dayStart } }),\n    null, // teacherPreferences archived - preferences now in User and ClassRoutine\n    includeRoutines\n      ? prisma.classRoutine.findMany({\n          where: { userId, isActive: true },\n          orderBy: [{ priority: 'desc' }, { category: 'asc' }],\n        })\n      : [],\n    includeGoals\n      ? prisma.studentGoal.findMany({\n          where: {\n            status: 'active',\n            student: { userId },\n          },\n          include: {\n            student: true,\n          },\n          take: 10, // Limit to most relevant goals\n        })\n      : [],\n  ]);\n\n  const schedule: ScheduleEntry[] = [];\n  if (plan) {\n    for (const item of plan.items) {\n      const _subjectId = item.slot?.subjectId ?? item.activity?.milestone.subjectId;\n      // DISABLED: Legacy activity model removed in ETFO migration\n      // const act = null; // Legacy activity queries disabled\n      const act = null;\n      schedule.push({ time: minToTime(item.startMin), activity: act?.title ?? '' });\n    }\n  }\n  events.forEach((e) =>\n    schedule.push({\n      time: minToTime(new Date(e.start).getUTCHours() * 60 + new Date(e.start).getUTCMinutes()),\n      note: e.title,\n    }),\n  );\n  blocks\n    .filter((b) => b.blockType === 'TEACHER_ABSENCE')\n    .forEach((b) => schedule.push({ time: minToTime(b.startMin), note: b.reason }));\n\n  schedule.sort((a, b) => a.time.localeCompare(b.time));\n\n  const pullOuts = blocks\n    .filter((b) => b.blockType === 'STUDENT_PULL_OUT')\n    .map((b) => ({ time: minToTime(b.startMin), reason: b.reason }));\n\n  const contacts = prefs?.subPlanContacts as Prisma.JsonValue | null as\n    | Record<string, string>\n    | undefined;\n\n  // Extract all unique outcomes from activities\n  const uniqueOutcomes = new Map<\n    string,\n    {\n      code: string;\n      description: string;\n      subject: string;\n    }\n  >();\n\n  if (plan) {\n    for (const item of plan.items) {\n      if (item.activity?.outcomes) {\n        for (const outcomeRelation of item.activity.outcomes) {\n          const outcome = outcomeRelation.outcome;\n          uniqueOutcomes.set(outcome.id, {\n            code: outcome.code,\n            description: outcome.description,\n            subject: outcome.subject,\n          });\n        }\n      }\n    }\n  }\n\n  // Format goals with optional anonymization\n  const formattedGoals = studentGoals.map((goal) => ({\n    id: goal.id,\n    text: goal.text,\n    status: goal.status,\n    studentName: anonymize ? undefined : `${goal.student.firstName} ${goal.student.lastName}`,\n  }));\n\n  // Format routines\n  const formattedRoutines = routines.map((routine) => ({\n    id: routine.id,\n    title: routine.title,\n    description: routine.description,\n    category: routine.category,\n    timeOfDay: routine.timeOfDay || undefined,\n  }));\n\n  // Generate fallback plan\n  const fallbackPlan = prefs?.subPlanProcedures\n    ? `Emergency Fallback: ${prefs.subPlanProcedures}\\n\\nIf technology fails or activities cannot be completed, use print materials from the substitute folder and engage students in quiet reading or journaling activities.`\n    : 'If technology fails or activities cannot be completed, use print materials from the substitute folder and engage students in quiet reading or journaling activities.';\n\n  return {\n    date: dayStart.toISOString().split('T')[0],\n    schedule,\n    pullOuts,\n    contacts: contacts || {},\n    procedures: prefs?.subPlanProcedures || undefined,\n    outcomes: includePlans ? Array.from(uniqueOutcomes.values()) : undefined,\n    goals: includeGoals ? formattedGoals : undefined,\n    routines: includeRoutines ? formattedRoutines : undefined,\n    fallbackPlan,\n  };\n}\n\nexport async function generateSubPlan(\n  date: string,\n  days = 1,\n  options: SubPlanOptions = {},\n): Promise<Buffer> {\n  const doc = new PDFDocument();\n  const chunks: Buffer[] = [];\n  doc.on('data', (c) => chunks.push(c));\n  // SubstituteInfo model archived - substitute information now managed in User and ClassRoutine models\n  const _info = null;\n\n  for (let i = 0; i < days; i++) {\n    if (i > 0) doc.addPage();\n    const d = new Date(date);\n    d.setUTCDate(d.getUTCDate() + i);\n    const data = await buildSubPlanData(d.toISOString().slice(0, 10), options);\n\n    await generateSubPlanPDF(\n      {\n        today: data.schedule.map((s) => ({ time: s.time, activity: s.activity ?? s.note ?? '' })),\n        upcoming: [],\n        procedures: data.procedures || '',\n        studentNotes:\n          pullOutsText(data.pullOuts), // Allergies now managed in Student model\n        emergencyContacts: formatContacts(data.contacts),\n        curriculumOutcomes: data.outcomes,\n        goals: data.goals,\n        routines: data.routines,\n        fallbackPlan: data.fallbackPlan,\n      },\n      doc,\n    );\n  }\n  doc.end();\n  return new Promise((resolve) => doc.on('end', () => resolve(Buffer.concat(chunks))));\n}\n\nfunction pullOutsText(pullOuts: { time: string; reason: string }[]): string {\n  return pullOuts.map((p) => `${p.time} - ${p.reason}`).join('\\n');\n}\n\nfunction formatContacts(c: Record<string, string>): string {\n  return Object.entries(c)\n    .map(([k, v]) => `${k}: ${v}`)\n    .join('\\n');\n}\n"],"version":3}