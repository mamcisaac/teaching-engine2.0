caced68fed28a06505cc75777450caa2
/* istanbul ignore next */
function cov_1kcofx1hj5() {
  var path = "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/templateService.ts";
  var hash = "e5a5f0e96cd74c79fb7d572f03fcf3ed9218ab96";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/templateService.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 182
        },
        end: {
          line: 11,
          column: 189
        }
      },
      "1": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "2": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 21,
          column: 30
        }
      },
      "3": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 30
        }
      },
      "4": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "5": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "6": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "7": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "9": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 27
        }
      },
      "10": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "12": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "13": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "14": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 46,
          column: 38
        }
      },
      "15": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 38
        }
      },
      "16": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 48,
          column: 38
        }
      },
      "17": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 38
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 50,
          column: 52
        }
      },
      "19": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 52
        }
      },
      "20": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "21": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 55,
          column: 20
        }
      },
      "22": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 61,
          column: 14
        }
      },
      "23": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "24": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "25": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 71,
          column: 26
        }
      },
      "26": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 81,
          column: 43
        }
      },
      "27": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 38
        }
      },
      "28": {
        start: {
          line: 74,
          column: 13
        },
        end: {
          line: 81,
          column: 43
        }
      },
      "29": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 43
        }
      },
      "30": {
        start: {
          line: 76,
          column: 13
        },
        end: {
          line: 81,
          column: 43
        }
      },
      "31": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 46
        }
      },
      "32": {
        start: {
          line: 78,
          column: 13
        },
        end: {
          line: 81,
          column: 43
        }
      },
      "33": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 42
        }
      },
      "34": {
        start: {
          line: 80,
          column: 13
        },
        end: {
          line: 81,
          column: 43
        }
      },
      "35": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 43
        }
      },
      "36": {
        start: {
          line: 82,
          column: 35
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "37": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 113,
          column: 10
        }
      },
      "38": {
        start: {
          line: 119,
          column: 25
        },
        end: {
          line: 155,
          column: 10
        }
      },
      "39": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 24
        }
      },
      "40": {
        start: {
          line: 162,
          column: 121
        },
        end: {
          line: 162,
          column: 125
        }
      },
      "41": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "42": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 82
        }
      },
      "43": {
        start: {
          line: 167,
          column: 25
        },
        end: {
          line: 192,
          column: 10
        }
      },
      "44": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 24
        }
      },
      "45": {
        start: {
          line: 200,
          column: 25
        },
        end: {
          line: 206,
          column: 10
        }
      },
      "46": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "47": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 66
        }
      },
      "48": {
        start: {
          line: 210,
          column: 54
        },
        end: {
          line: 210,
          column: 58
        }
      },
      "49": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "50": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 82
        }
      },
      "51": {
        start: {
          line: 215,
          column: 25
        },
        end: {
          line: 239,
          column: 10
        }
      },
      "52": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 24
        }
      },
      "53": {
        start: {
          line: 247,
          column: 25
        },
        end: {
          line: 253,
          column: 10
        }
      },
      "54": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "55": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 67
        }
      },
      "56": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 259,
          column: 11
        }
      },
      "57": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 20
        }
      },
      "58": {
        start: {
          line: 266,
          column: 25
        },
        end: {
          line: 275,
          column: 10
        }
      },
      "59": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "60": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 50
        }
      },
      "61": {
        start: {
          line: 279,
          column: 27
        },
        end: {
          line: 315,
          column: 10
        }
      },
      "62": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 26
        }
      },
      "63": {
        start: {
          line: 322,
          column: 25
        },
        end: {
          line: 331,
          column: 10
        }
      },
      "64": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 334,
          column: 9
        }
      },
      "65": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 50
        }
      },
      "66": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 342,
          column: 11
        }
      },
      "67": {
        start: {
          line: 344,
          column: 31
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "68": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 360,
          column: 10
        }
      },
      "69": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "70": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 62
        }
      },
      "71": {
        start: {
          line: 370,
          column: 25
        },
        end: {
          line: 379,
          column: 10
        }
      },
      "72": {
        start: {
          line: 380,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "73": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 50
        }
      },
      "74": {
        start: {
          line: 384,
          column: 31
        },
        end: {
          line: 401,
          column: 10
        }
      },
      "75": {
        start: {
          line: 403,
          column: 24
        },
        end: {
          line: 406,
          column: 10
        }
      },
      "76": {
        start: {
          line: 407,
          column: 30
        },
        end: {
          line: 409,
          column: 15
        }
      },
      "77": {
        start: {
          line: 408,
          column: 41
        },
        end: {
          line: 408,
          column: 55
        }
      },
      "78": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 413,
          column: 11
        }
      },
      "79": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 30
        }
      },
      "80": {
        start: {
          line: 420,
          column: 53
        },
        end: {
          line: 467,
          column: 10
        }
      },
      "81": {
        start: {
          line: 468,
          column: 31
        },
        end: {
          line: 471,
          column: 19
        }
      },
      "82": {
        start: {
          line: 469,
          column: 22
        },
        end: {
          line: 469,
          column: 31
        }
      },
      "83": {
        start: {
          line: 470,
          column: 25
        },
        end: {
          line: 470,
          column: 35
        }
      },
      "84": {
        start: {
          line: 472,
          column: 27
        },
        end: {
          line: 478,
          column: 31
        }
      },
      "85": {
        start: {
          line: 473,
          column: 12
        },
        end: {
          line: 474,
          column: 67
        }
      },
      "86": {
        start: {
          line: 474,
          column: 16
        },
        end: {
          line: 474,
          column: 67
        }
      },
      "87": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 476,
          column: 67
        }
      },
      "88": {
        start: {
          line: 476,
          column: 16
        },
        end: {
          line: 476,
          column: 67
        }
      },
      "89": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 25
        }
      },
      "90": {
        start: {
          line: 479,
          column: 24
        },
        end: {
          line: 482,
          column: 19
        }
      },
      "91": {
        start: {
          line: 480,
          column: 26
        },
        end: {
          line: 480,
          column: 61
        }
      },
      "92": {
        start: {
          line: 481,
          column: 43
        },
        end: {
          line: 481,
          column: 71
        }
      },
      "93": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 488,
          column: 10
        }
      },
      "94": {
        start: {
          line: 485,
          column: 90
        },
        end: {
          line: 485,
          column: 108
        }
      },
      "95": {
        start: {
          line: 486,
          column: 44
        },
        end: {
          line: 486,
          column: 54
        }
      },
      "96": {
        start: {
          line: 494,
          column: 33
        },
        end: {
          line: 792,
          column: 9
        }
      },
      "97": {
        start: {
          line: 793,
          column: 33
        },
        end: {
          line: 793,
          column: 35
        }
      },
      "98": {
        start: {
          line: 794,
          column: 8
        },
        end: {
          line: 814,
          column: 9
        }
      },
      "99": {
        start: {
          line: 795,
          column: 12
        },
        end: {
          line: 813,
          column: 13
        }
      },
      "100": {
        start: {
          line: 796,
          column: 33
        },
        end: {
          line: 798,
          column: 18
        }
      },
      "101": {
        start: {
          line: 799,
          column: 16
        },
        end: {
          line: 809,
          column: 17
        }
      },
      "102": {
        start: {
          line: 800,
          column: 36
        },
        end: {
          line: 807,
          column: 22
        }
      },
      "103": {
        start: {
          line: 808,
          column: 20
        },
        end: {
          line: 808,
          column: 51
        }
      },
      "104": {
        start: {
          line: 812,
          column: 16
        },
        end: {
          line: 812,
          column: 89
        }
      },
      "105": {
        start: {
          line: 815,
          column: 8
        },
        end: {
          line: 815,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 50
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        loc: {
          start: {
            line: 118,
            column: 53
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 118
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 46
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 161
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 58
          },
          end: {
            line: 241,
            column: 5
          }
        },
        line: 198
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        loc: {
          start: {
            line: 245,
            column: 52
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 245
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 80
          },
          end: {
            line: 317,
            column: 5
          }
        },
        line: 265
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 321,
            column: 4
          },
          end: {
            line: 321,
            column: 5
          }
        },
        loc: {
          start: {
            line: 321,
            column: 72
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 321
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 67
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 365
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 408,
            column: 29
          },
          end: {
            line: 408,
            column: 30
          }
        },
        loc: {
          start: {
            line: 408,
            column: 41
          },
          end: {
            line: 408,
            column: 55
          }
        },
        line: 408
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        },
        loc: {
          start: {
            line: 419,
            column: 42
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 419
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 469,
            column: 17
          },
          end: {
            line: 469,
            column: 18
          }
        },
        loc: {
          start: {
            line: 469,
            column: 22
          },
          end: {
            line: 469,
            column: 31
          }
        },
        line: 469
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 470,
            column: 20
          },
          end: {
            line: 470,
            column: 21
          }
        },
        loc: {
          start: {
            line: 470,
            column: 25
          },
          end: {
            line: 470,
            column: 35
          }
        },
        line: 470
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 472,
            column: 41
          },
          end: {
            line: 472,
            column: 42
          }
        },
        loc: {
          start: {
            line: 472,
            column: 62
          },
          end: {
            line: 478,
            column: 9
          }
        },
        line: 472
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 480,
            column: 21
          },
          end: {
            line: 480,
            column: 22
          }
        },
        loc: {
          start: {
            line: 480,
            column: 26
          },
          end: {
            line: 480,
            column: 61
          }
        },
        line: 480
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 481,
            column: 20
          },
          end: {
            line: 481,
            column: 21
          }
        },
        loc: {
          start: {
            line: 481,
            column: 43
          },
          end: {
            line: 481,
            column: 71
          }
        },
        line: 481
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 485,
            column: 80
          },
          end: {
            line: 485,
            column: 81
          }
        },
        loc: {
          start: {
            line: 485,
            column: 90
          },
          end: {
            line: 485,
            column: 108
          }
        },
        line: 485
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 486,
            column: 39
          },
          end: {
            line: 486,
            column: 40
          }
        },
        loc: {
          start: {
            line: 486,
            column: 44
          },
          end: {
            line: 486,
            column: 54
          }
        },
        line: 486
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        loc: {
          start: {
            line: 493,
            column: 42
          },
          end: {
            line: 816,
            column: 5
          }
        },
        line: 493
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 112
          },
          end: {
            line: 11,
            column: 132
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 121
          },
          end: {
            line: 11,
            column: 132
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 134
          },
          end: {
            line: 11,
            column: 152
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 146
          },
          end: {
            line: 11,
            column: 152
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 154
          },
          end: {
            line: 11,
            column: 164
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 162
          },
          end: {
            line: 11,
            column: 164
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 11,
            column: 166
          },
          end: {
            line: 11,
            column: 176
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 175
          },
          end: {
            line: 11,
            column: 176
          }
        }],
        line: 11
      },
      "4": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 21,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 21,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "5": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "6": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 25,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 25,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "7": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "8": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 34
          }
        }, {
          start: {
            line: 26,
            column: 38
          },
          end: {
            line: 26,
            column: 60
          }
        }],
        line: 26
      },
      "9": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "10": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "13": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 55,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 18
          },
          end: {
            line: 54,
            column: 41
          }
        }, {
          start: {
            line: 55,
            column: 18
          },
          end: {
            line: 55,
            column: 20
          }
        }],
        line: 53
      },
      "16": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "17": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 64,
            column: 16
          }
        }, {
          start: {
            line: 64,
            column: 20
          },
          end: {
            line: 64,
            column: 35
          }
        }],
        line: 64
      },
      "18": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 81,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 81,
            column: 43
          }
        }, {
          start: {
            line: 74,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        }],
        line: 72
      },
      "19": {
        loc: {
          start: {
            line: 74,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        }, {
          start: {
            line: 76,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        }],
        line: 74
      },
      "20": {
        loc: {
          start: {
            line: 76,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        }, {
          start: {
            line: 78,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        }],
        line: 76
      },
      "21": {
        loc: {
          start: {
            line: 78,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        }, {
          start: {
            line: 80,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        }],
        line: 78
      },
      "22": {
        loc: {
          start: {
            line: 80,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 13
          },
          end: {
            line: 81,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "23": {
        loc: {
          start: {
            line: 162,
            column: 16
          },
          end: {
            line: 162,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 162,
            column: 23
          },
          end: {
            line: 162,
            column: 25
          }
        }],
        line: 162
      },
      "24": {
        loc: {
          start: {
            line: 162,
            column: 27
          },
          end: {
            line: 162,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 162,
            column: 38
          },
          end: {
            line: 162,
            column: 40
          }
        }],
        line: 162
      },
      "25": {
        loc: {
          start: {
            line: 162,
            column: 42
          },
          end: {
            line: 162,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 162,
            column: 53
          },
          end: {
            line: 162,
            column: 58
          }
        }],
        line: 162
      },
      "26": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "27": {
        loc: {
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 164,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 164,
            column: 33
          }
        }, {
          start: {
            line: 164,
            column: 37
          },
          end: {
            line: 164,
            column: 58
          }
        }, {
          start: {
            line: 164,
            column: 62
          },
          end: {
            line: 164,
            column: 107
          }
        }],
        line: 164
      },
      "28": {
        loc: {
          start: {
            line: 175,
            column: 31
          },
          end: {
            line: 175,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 31
          },
          end: {
            line: 175,
            column: 44
          }
        }, {
          start: {
            line: 175,
            column: 48
          },
          end: {
            line: 175,
            column: 52
          }
        }],
        line: 175
      },
      "29": {
        loc: {
          start: {
            line: 176,
            column: 33
          },
          end: {
            line: 176,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 33
          },
          end: {
            line: 176,
            column: 48
          }
        }, {
          start: {
            line: 176,
            column: 52
          },
          end: {
            line: 176,
            column: 56
          }
        }],
        line: 176
      },
      "30": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "31": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "32": {
        loc: {
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 212,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 12
          },
          end: {
            line: 212,
            column: 20
          }
        }, {
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 32
          }
        }, {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 212,
            column: 55
          }
        }],
        line: 212
      },
      "33": {
        loc: {
          start: {
            line: 221,
            column: 25
          },
          end: {
            line: 221,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 46
          },
          end: {
            line: 221,
            column: 64
          }
        }, {
          start: {
            line: 221,
            column: 67
          },
          end: {
            line: 221,
            column: 76
          }
        }],
        line: 221
      },
      "34": {
        loc: {
          start: {
            line: 222,
            column: 31
          },
          end: {
            line: 222,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 58
          },
          end: {
            line: 222,
            column: 82
          }
        }, {
          start: {
            line: 222,
            column: 85
          },
          end: {
            line: 222,
            column: 94
          }
        }],
        line: 222
      },
      "35": {
        loc: {
          start: {
            line: 223,
            column: 33
          },
          end: {
            line: 223,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 62
          },
          end: {
            line: 223,
            column: 88
          }
        }, {
          start: {
            line: 223,
            column: 91
          },
          end: {
            line: 223,
            column: 100
          }
        }],
        line: 223
      },
      "36": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "37": {
        loc: {
          start: {
            line: 265,
            column: 62
          },
          end: {
            line: 265,
            column: 78
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 265,
            column: 73
          },
          end: {
            line: 265,
            column: 78
          }
        }],
        line: 265
      },
      "38": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "39": {
        loc: {
          start: {
            line: 281,
            column: 23
          },
          end: {
            line: 281,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 23
          },
          end: {
            line: 281,
            column: 28
          }
        }, {
          start: {
            line: 281,
            column: 32
          },
          end: {
            line: 281,
            column: 58
          }
        }],
        line: 281
      },
      "40": {
        loc: {
          start: {
            line: 282,
            column: 25
          },
          end: {
            line: 282,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 282,
            column: 44
          },
          end: {
            line: 282,
            column: 73
          }
        }, {
          start: {
            line: 282,
            column: 76
          },
          end: {
            line: 282,
            column: 80
          }
        }],
        line: 282
      },
      "41": {
        loc: {
          start: {
            line: 321,
            column: 51
          },
          end: {
            line: 321,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 321,
            column: 68
          },
          end: {
            line: 321,
            column: 70
          }
        }],
        line: 321
      },
      "42": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 334,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "43": {
        loc: {
          start: {
            line: 346,
            column: 16
          },
          end: {
            line: 346,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 16
          },
          end: {
            line: 346,
            column: 30
          }
        }, {
          start: {
            line: 346,
            column: 34
          },
          end: {
            line: 346,
            column: 36
          }
        }],
        line: 346
      },
      "44": {
        loc: {
          start: {
            line: 354,
            column: 31
          },
          end: {
            line: 354,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 354,
            column: 31
          },
          end: {
            line: 354,
            column: 53
          }
        }, {
          start: {
            line: 354,
            column: 57
          },
          end: {
            line: 354,
            column: 66
          }
        }],
        line: 354
      },
      "45": {
        loc: {
          start: {
            line: 355,
            column: 33
          },
          end: {
            line: 355,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 33
          },
          end: {
            line: 355,
            column: 57
          }
        }, {
          start: {
            line: 355,
            column: 61
          },
          end: {
            line: 355,
            column: 70
          }
        }],
        line: 355
      },
      "46": {
        loc: {
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "47": {
        loc: {
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 366,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 366,
            column: 12
          },
          end: {
            line: 366,
            column: 22
          }
        }, {
          start: {
            line: 366,
            column: 26
          },
          end: {
            line: 366,
            column: 36
          }
        }],
        line: 366
      },
      "48": {
        loc: {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 380
      },
      "49": {
        loc: {
          start: {
            line: 407,
            column: 30
          },
          end: {
            line: 409,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 408,
            column: 14
          },
          end: {
            line: 408,
            column: 76
          }
        }, {
          start: {
            line: 409,
            column: 14
          },
          end: {
            line: 409,
            column: 15
          }
        }],
        line: 407
      },
      "50": {
        loc: {
          start: {
            line: 473,
            column: 12
          },
          end: {
            line: 474,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 12
          },
          end: {
            line: 474,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 473
      },
      "51": {
        loc: {
          start: {
            line: 475,
            column: 12
          },
          end: {
            line: 476,
            column: 67
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 475,
            column: 12
          },
          end: {
            line: 476,
            column: 67
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 475
      },
      "52": {
        loc: {
          start: {
            line: 480,
            column: 26
          },
          end: {
            line: 480,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 480,
            column: 50
          },
          end: {
            line: 480,
            column: 56
          }
        }, {
          start: {
            line: 480,
            column: 59
          },
          end: {
            line: 480,
            column: 61
          }
        }],
        line: 480
      },
      "53": {
        loc: {
          start: {
            line: 799,
            column: 16
          },
          end: {
            line: 809,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 799,
            column: 16
          },
          end: {
            line: 809,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 799
      },
      "54": {
        loc: {
          start: {
            line: 804,
            column: 43
          },
          end: {
            line: 804,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 804,
            column: 43
          },
          end: {
            line: 804,
            column: 69
          }
        }, {
          start: {
            line: 804,
            column: 73
          },
          end: {
            line: 804,
            column: 77
          }
        }],
        line: 804
      },
      "55": {
        loc: {
          start: {
            line: 805,
            column: 45
          },
          end: {
            line: 805,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 805,
            column: 45
          },
          end: {
            line: 805,
            column: 73
          }
        }, {
          start: {
            line: 805,
            column: 77
          },
          end: {
            line: 805,
            column: 81
          }
        }],
        line: 805
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/templateService.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/michaelmcisaac/GitHub/teaching-engine2.0/server/src/services/templateService.ts"],
      sourcesContent: ["import { prisma } from '../prisma';\nimport { Prisma } from '../prisma';\n\nexport interface TemplateSearchOptions {\n  type?: 'UNIT_PLAN' | 'LESSON_PLAN';\n  category?: 'BY_SUBJECT' | 'BY_GRADE' | 'BY_THEME' | 'BY_SEASON' | 'BY_SKILL' | 'CUSTOM';\n  subject?: string;\n  gradeMin?: number;\n  gradeMax?: number;\n  isSystem?: boolean;\n  isPublic?: boolean;\n  createdByUserId?: number;\n  search?: string;\n  tags?: string[];\n  sortBy?: 'title' | 'usageCount' | 'averageRating' | 'createdAt' | 'lastUsedAt';\n  sortOrder?: 'asc' | 'desc';\n  limit?: number;\n  offset?: number;\n}\n\nexport interface TemplateCreateData {\n  title: string;\n  titleFr?: string;\n  description?: string;\n  descriptionFr?: string;\n  type: 'UNIT_PLAN' | 'LESSON_PLAN';\n  category: 'BY_SUBJECT' | 'BY_GRADE' | 'BY_THEME' | 'BY_SEASON' | 'BY_SKILL' | 'CUSTOM';\n  subject?: string;\n  gradeMin?: number;\n  gradeMax?: number;\n  tags?: string[];\n  keywords?: string[];\n  isPublic?: boolean;\n  content: Record<string, unknown>;\n  estimatedWeeks?: number;\n  unitStructure?: Record<string, unknown>;\n  estimatedMinutes?: number;\n  lessonStructure?: Record<string, unknown>;\n}\n\nexport interface AppliedTemplateData {\n  template: {\n    id: string;\n    title: string;\n    type: string;\n    content: Record<string, unknown>;\n    unitStructure?: Record<string, unknown>;\n    lessonStructure?: Record<string, unknown>;\n    estimatedWeeks?: number;\n    estimatedMinutes?: number;\n  };\n  appliedContent: Record<string, unknown>;\n}\n\n/**\n * Template Service\n * Handles business logic for template management, including creation, search, and application\n */\nexport class TemplateService {\n  /**\n   * Search and filter templates based on criteria\n   */\n  static async searchTemplates(userId: number, options: TemplateSearchOptions) {\n    const {\n      type,\n      category,\n      subject,\n      gradeMin,\n      gradeMax,\n      isSystem,\n      isPublic,\n      createdByUserId,\n      search,\n      tags,\n      sortBy = 'createdAt',\n      sortOrder = 'desc',\n      limit = 20,\n      offset = 0,\n    } = options;\n\n    const where: Prisma.PlanTemplateWhereInput = {\n      OR: [\n        { isSystem: true }, // System templates visible to all\n        { isPublic: true }, // Public templates visible to all\n        { createdByUserId: userId }, // User's own templates\n      ],\n    };\n\n    // Apply filters\n    if (type) where.type = type;\n    if (category) where.category = category;\n    if (subject) where.subject = subject;\n    if (gradeMin !== undefined || gradeMax !== undefined) {\n      where.AND = [];\n      if (gradeMin !== undefined) {\n        where.AND.push({\n          OR: [\n            { gradeMin: { lte: gradeMin } },\n            { gradeMin: null },\n          ],\n        });\n      }\n      if (gradeMax !== undefined) {\n        where.AND.push({\n          OR: [\n            { gradeMax: { gte: gradeMax } },\n            { gradeMax: null },\n          ],\n        });\n      }\n    }\n    if (isSystem !== undefined) where.isSystem = isSystem;\n    if (isPublic !== undefined) where.isPublic = isPublic;\n    if (createdByUserId !== undefined) where.createdByUserId = createdByUserId;\n\n    // Text search with database-specific case handling\n    if (search) {\n      const mode = process.env.DATABASE_URL?.includes('postgresql') \n        ? { mode: 'insensitive' as const } \n        : {};\n        \n      where.OR = [\n        { title: { contains: search, ...mode } },\n        { description: { contains: search, ...mode } },\n        { titleFr: { contains: search, ...mode } },\n        { descriptionFr: { contains: search, ...mode } },\n      ];\n    }\n\n    // Tag filtering - Using JSON array contains for tags\n    if (tags && tags.length > 0) {\n      where.tags = {\n        path: [],\n        array_contains: tags\n      } as Prisma.JsonFilter<\"PlanTemplate\">; // Type assertion for JSON array operations\n    }\n\n    // Sorting\n    const orderBy: Prisma.PlanTemplateOrderByWithRelationInput = {};\n    if (sortBy === 'title') orderBy.title = sortOrder;\n    else if (sortBy === 'usageCount') orderBy.usageCount = sortOrder;\n    else if (sortBy === 'averageRating') orderBy.averageRating = sortOrder;\n    else if (sortBy === 'createdAt') orderBy.createdAt = sortOrder;\n    else if (sortBy === 'lastUsedAt') orderBy.lastUsedAt = sortOrder;\n\n    const [templates, total] = await Promise.all([\n      prisma.planTemplate.findMany({\n        where,\n        orderBy,\n        take: limit,\n        skip: offset,\n        include: {\n          createdByUser: {\n            select: {\n              id: true,\n              name: true,\n            },\n          },\n          _count: {\n            select: {\n              ratings: true,\n              variations: true,\n            },\n          },\n        },\n      }),\n      prisma.planTemplate.count({ where }),\n    ]);\n\n    return {\n      templates,\n      pagination: {\n        total,\n        limit,\n        offset,\n        hasMore: offset + limit < total,\n      },\n    };\n  }\n\n  /**\n   * Get a template by ID with full details\n   */\n  static async getTemplateById(userId: number, templateId: string) {\n    const template = await prisma.planTemplate.findFirst({\n      where: {\n        id: templateId,\n        OR: [\n          { isSystem: true },\n          { isPublic: true },\n          { createdByUserId: userId },\n        ],\n      },\n      include: {\n        createdByUser: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n        ratings: {\n          select: {\n            id: true,\n            userId: true,\n            rating: true,\n            comment: true,\n            createdAt: true,\n          },\n          orderBy: { createdAt: 'desc' },\n          take: 5,\n        },\n        variations: {\n          orderBy: { createdAt: 'desc' },\n        },\n        _count: {\n          select: {\n            ratings: true,\n          },\n        },\n      },\n    });\n\n    return template;\n  }\n\n  /**\n   * Create a new template\n   */\n  static async createTemplate(userId: number, data: TemplateCreateData) {\n    const {\n      tags = [],\n      keywords = [],\n      isPublic = false,\n      content,\n      unitStructure,\n      lessonStructure,\n      ...templateData\n    } = data;\n\n    // Validate grade range\n    if (templateData.gradeMin && templateData.gradeMax && templateData.gradeMin > templateData.gradeMax) {\n      throw new Error('Minimum grade cannot be greater than maximum grade');\n    }\n\n    const template = await prisma.planTemplate.create({\n      data: {\n        ...templateData,\n        createdByUserId: userId,\n        tags,\n        keywords,\n        isPublic,\n        content: content as Prisma.JsonValue,\n        unitStructure: unitStructure as Prisma.JsonValue || null,\n        lessonStructure: lessonStructure as Prisma.JsonValue || null,\n      },\n      include: {\n        createdByUser: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            ratings: true,\n            variations: true,\n          },\n        },\n      },\n    });\n\n    return template;\n  }\n\n  /**\n   * Update an existing template\n   */\n  static async updateTemplate(userId: number, templateId: string, data: Partial<TemplateCreateData>) {\n    // Verify ownership (only creator can edit)\n    const existing = await prisma.planTemplate.findFirst({\n      where: {\n        id: templateId,\n        createdByUserId: userId,\n        isSystem: false, // System templates cannot be edited\n      },\n    });\n\n    if (!existing) {\n      throw new Error('Template not found or not editable');\n    }\n\n    const { gradeMin, gradeMax, ...updateData } = data;\n\n    // Validate grade range if provided\n    if (gradeMin && gradeMax && gradeMin > gradeMax) {\n      throw new Error('Minimum grade cannot be greater than maximum grade');\n    }\n\n    const template = await prisma.planTemplate.update({\n      where: { id: templateId },\n      data: {\n        ...updateData,\n        gradeMin,\n        gradeMax,\n        content: updateData.content ? updateData.content as Prisma.JsonValue : undefined,\n        unitStructure: updateData.unitStructure ? updateData.unitStructure as Prisma.JsonValue : undefined,\n        lessonStructure: updateData.lessonStructure ? updateData.lessonStructure as Prisma.JsonValue : undefined,\n      },\n      include: {\n        createdByUser: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n        variations: true,\n        _count: {\n          select: {\n            ratings: true,\n          },\n        },\n      },\n    });\n\n    return template;\n  }\n\n  /**\n   * Delete a template\n   */\n  static async deleteTemplate(userId: number, templateId: string) {\n    // Verify ownership\n    const template = await prisma.planTemplate.findFirst({\n      where: {\n        id: templateId,\n        createdByUserId: userId,\n        isSystem: false, // System templates cannot be deleted\n      },\n    });\n\n    if (!template) {\n      throw new Error('Template not found or not deletable');\n    }\n\n    await prisma.planTemplate.delete({\n      where: { id: templateId },\n    });\n\n    return true;\n  }\n\n  /**\n   * Duplicate a template\n   */\n  static async duplicateTemplate(userId: number, templateId: string, title?: string, isPublic = false) {\n    const original = await prisma.planTemplate.findFirst({\n      where: {\n        id: templateId,\n        OR: [\n          { isSystem: true },\n          { isPublic: true },\n          { createdByUserId: userId },\n        ],\n      },\n    });\n\n    if (!original) {\n      throw new Error('Template not found');\n    }\n\n    const duplicated = await prisma.planTemplate.create({\n      data: {\n        title: title || `${original.title} (Copy)`,\n        titleFr: original.titleFr ? `${original.titleFr} (Copie)` : null,\n        description: original.description,\n        descriptionFr: original.descriptionFr,\n        type: original.type,\n        category: original.category,\n        subject: original.subject,\n        gradeMin: original.gradeMin,\n        gradeMax: original.gradeMax,\n        tags: original.tags,\n        keywords: original.keywords,\n        createdByUserId: userId,\n        isSystem: false,\n        isPublic,\n        content: original.content as Prisma.JsonValue,\n        estimatedWeeks: original.estimatedWeeks,\n        unitStructure: original.unitStructure as Prisma.JsonValue,\n        estimatedMinutes: original.estimatedMinutes,\n        lessonStructure: original.lessonStructure as Prisma.JsonValue,\n      },\n      include: {\n        createdByUser: {\n          select: {\n            id: true,\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            ratings: true,\n            variations: true,\n          },\n        },\n      },\n    });\n\n    return duplicated;\n  }\n\n  /**\n   * Apply a template to create new plan data\n   */\n  static async applyTemplate(userId: number, templateId: string, customizations: Record<string, unknown> = {}): Promise<AppliedTemplateData> {\n    const template = await prisma.planTemplate.findFirst({\n      where: {\n        id: templateId,\n        OR: [\n          { isSystem: true },\n          { isPublic: true },\n          { createdByUserId: userId },\n        ],\n      },\n    });\n\n    if (!template) {\n      throw new Error('Template not found');\n    }\n\n    // Update usage tracking\n    await prisma.planTemplate.update({\n      where: { id: template.id },\n      data: {\n        usageCount: { increment: 1 },\n        lastUsedAt: new Date(),\n      },\n    });\n\n    // Merge template content with user customizations\n    const appliedContent = {\n      ...(template.content as Record<string, unknown>),\n      ...(customizations || {}),\n    };\n\n    return {\n      template: {\n        id: template.id,\n        title: template.title,\n        type: template.type,\n        content: appliedContent,\n        unitStructure: template.unitStructure as Record<string, unknown> || undefined,\n        lessonStructure: template.lessonStructure as Record<string, unknown> || undefined,\n        estimatedWeeks: template.estimatedWeeks,\n        estimatedMinutes: template.estimatedMinutes,\n      },\n      appliedContent,\n    };\n  }\n\n  /**\n   * Rate a template\n   */\n  static async rateTemplate(userId: number, templateId: string, rating: number, comment?: string) {\n    if (rating < 1 || rating > 5) {\n      throw new Error('Rating must be between 1 and 5');\n    }\n\n    // Check if template exists and is accessible\n    const template = await prisma.planTemplate.findFirst({\n      where: {\n        id: templateId,\n        OR: [\n          { isSystem: true },\n          { isPublic: true },\n          { createdByUserId: userId },\n        ],\n      },\n    });\n\n    if (!template) {\n      throw new Error('Template not found');\n    }\n\n    // Upsert rating\n    const templateRating = await prisma.templateRating.upsert({\n      where: {\n        templateId_userId: {\n          templateId,\n          userId,\n        },\n      },\n      update: {\n        rating,\n        comment,\n      },\n      create: {\n        templateId,\n        userId,\n        rating,\n        comment,\n      },\n    });\n\n    // Recalculate average rating\n    const ratings = await prisma.templateRating.findMany({\n      where: { templateId },\n      select: { rating: true },\n    });\n\n    const averageRating = ratings.length > 0 \n      ? ratings.reduce((sum, r) => sum + r.rating, 0) / ratings.length \n      : 0;\n\n    await prisma.planTemplate.update({\n      where: { id: templateId },\n      data: { averageRating },\n    });\n\n    return templateRating;\n  }\n\n  /**\n   * Get filter options for template search\n   */\n  static async getFilterOptions(userId: number) {\n    const [subjects, grades, categories, tags] = await Promise.all([\n      prisma.planTemplate.findMany({\n        where: {\n          OR: [\n            { isSystem: true },\n            { isPublic: true },\n            { createdByUserId: userId },\n          ],\n          subject: { not: null },\n        },\n        select: { subject: true },\n        distinct: ['subject'],\n      }),\n      prisma.planTemplate.findMany({\n        where: {\n          AND: [\n            {\n              OR: [\n                { isSystem: true },\n                { isPublic: true },\n                { createdByUserId: userId },\n              ],\n            },\n            {\n              OR: [\n                { gradeMin: { not: null } },\n                { gradeMax: { not: null } },\n              ],\n            },\n          ],\n        },\n        select: { gradeMin: true, gradeMax: true },\n      }),\n      prisma.planTemplate.findMany({\n        select: { category: true },\n        distinct: ['category'],\n      }),\n      prisma.planTemplate.findMany({\n        where: {\n          OR: [\n            { isSystem: true },\n            { isPublic: true },\n            { createdByUserId: userId },\n          ],\n        },\n        select: { tags: true },\n      }),\n    ]);\n\n    const uniqueSubjects = subjects\n      .map(t => t.subject)\n      .filter(s => s !== null)\n      .sort();\n\n    const gradeRange = grades.reduce(\n      (range, template) => {\n        if (template.gradeMin) range.min = Math.min(range.min, template.gradeMin);\n        if (template.gradeMax) range.max = Math.max(range.max, template.gradeMax);\n        return range;\n      },\n      { min: 12, max: 1 }\n    );\n\n    const allTags = tags\n      .flatMap(t => Array.isArray(t.tags) ? t.tags : [])\n      .filter((tag, index, array) => array.indexOf(tag) === index)\n      .sort();\n\n    return {\n      subjects: uniqueSubjects,\n      grades: Array.from({ length: gradeRange.max - gradeRange.min + 1 }, (_, i) => gradeRange.min + i),\n      categories: categories.map(c => c.category),\n      tags: allTags,\n    };\n  }\n\n  /**\n   * Create system starter templates\n   */\n  static async createStarterTemplates() {\n    const starterTemplates = [\n      {\n        title: 'Grade 1 Math - Number Sense Unit',\n        titleFr: 'Math\xE9matiques 1re ann\xE9e - Unit\xE9 de sens du nombre',\n        description: 'A comprehensive 2-week unit exploring numbers 1-20 with hands-on activities and assessment opportunities.',\n        descriptionFr: 'Une unit\xE9 compl\xE8te de 2 semaines explorant les nombres 1-20 avec des activit\xE9s pratiques et des opportunit\xE9s d\\'\xE9valuation.',\n        type: 'UNIT_PLAN' as const,\n        category: 'BY_SUBJECT' as const,\n        subject: 'Mathematics',\n        gradeMin: 1,\n        gradeMax: 1,\n        isSystem: true,\n        isPublic: true,\n        estimatedWeeks: 2,\n        tags: ['number-sense', 'hands-on', 'primary', 'counting', 'place-value'],\n        keywords: ['numbers', 'counting', 'math', 'grade-1', 'manipulatives'],\n        content: {\n          overview: 'Students will develop number sense by exploring numbers 1-20 through various concrete, pictorial, and abstract activities.',\n          bigIdeas: 'Numbers have relationships and patterns. Quantities can be represented in multiple ways.',\n          learningGoals: [\n            'Count forward and backward from 1 to 20',\n            'Recognize and represent numbers in different ways',\n            'Compare quantities using more than, less than, equal to',\n            'Solve simple addition and subtraction problems using concrete materials'\n          ],\n          essentialQuestions: [\n            'How do we use numbers in our daily lives?',\n            'What different ways can we show the same quantity?',\n            'How do numbers help us compare amounts?'\n          ],\n          keyVocabulary: ['number', 'count', 'more', 'less', 'equal', 'add', 'subtract', 'altogether'],\n          assessments: [\n            {\n              type: 'diagnostic',\n              description: 'Number recognition and counting assessment',\n              timing: 'Beginning of unit'\n            },\n            {\n              type: 'formative',\n              description: 'Daily number talks and manipulative explorations',\n              timing: 'Throughout unit'\n            },\n            {\n              type: 'summative',\n              description: 'Number representation portfolio',\n              timing: 'End of unit'\n            }\n          ],\n          differentiationStrategies: {\n            forStruggling: [\n              'Use concrete manipulatives for all activities',\n              'Start with smaller number ranges (1-10)',\n              'Provide visual number lines and hundreds charts',\n              'Use peer buddies for support'\n            ],\n            forAdvanced: [\n              'Extend to numbers beyond 20',\n              'Introduce skip counting patterns',\n              'Explore number relationships and patterns',\n              'Create their own number problems'\n            ],\n            forELL: [\n              'Use visual supports and gestures',\n              'Provide number vocabulary cards with pictures',\n              'Use home language connections where possible',\n              'Focus on mathematical language development'\n            ]\n          }\n        },\n        unitStructure: {\n          phases: [\n            {\n              name: 'Number Recognition & Counting',\n              description: 'Building foundational counting skills and number recognition',\n              estimatedDays: 4,\n              learningGoals: ['Count objects accurately', 'Recognize written numerals 1-20']\n            },\n            {\n              name: 'Number Representations',\n              description: 'Exploring different ways to show quantities',\n              estimatedDays: 3,\n              learningGoals: ['Show numbers using manipulatives, pictures, and symbols']\n            },\n            {\n              name: 'Comparing Quantities',\n              description: 'Understanding more than, less than, equal to',\n              estimatedDays: 2,\n              learningGoals: ['Compare sets of objects', 'Use comparison vocabulary']\n            },\n            {\n              name: 'Adding and Subtracting',\n              description: 'Introduction to operations with concrete materials',\n              estimatedDays: 3,\n              learningGoals: ['Solve simple addition and subtraction problems using objects']\n            }\n          ],\n          resources: [\n            { title: 'Counting Bears', type: 'manipulative', notes: '10 bears per student' },\n            { title: 'Number Cards 1-20', type: 'printable', notes: 'Laminate for durability' },\n            { title: 'Ten Frames', type: 'printable', notes: 'Print on cardstock' }\n          ]\n        }\n      },\n      {\n        title: 'Grade 3 Language - Poetry Unit',\n        titleFr: 'Fran\xE7ais 3e ann\xE9e - Unit\xE9 de po\xE9sie',\n        description: 'A creative 1-week exploration of poetry forms, writing techniques, and performance.',\n        descriptionFr: 'Une exploration cr\xE9ative d\\'une semaine des formes po\xE9tiques, des techniques d\\'\xE9criture et de la performance.',\n        type: 'UNIT_PLAN' as const,\n        category: 'BY_SUBJECT' as const,\n        subject: 'Language Arts',\n        gradeMin: 3,\n        gradeMax: 3,\n        isSystem: true,\n        isPublic: true,\n        estimatedWeeks: 1,\n        tags: ['poetry', 'writing', 'language-arts', 'creative', 'performance'],\n        keywords: ['poems', 'rhyme', 'rhythm', 'writing', 'language'],\n        content: {\n          overview: 'Students will explore various forms of poetry, learn about poetic devices, and create their own poems.',\n          bigIdeas: 'Poetry is a form of expression that uses language creatively. Words can create images, emotions, and experiences.',\n          learningGoals: [\n            'Identify different types of poems and their characteristics',\n            'Use poetic devices like rhyme, rhythm, and alliteration',\n            'Write original poems using various forms',\n            'Present poetry with expression and confidence'\n          ],\n          essentialQuestions: [\n            'How do poets use words to create images and feelings?',\n            'What makes a poem different from other types of writing?',\n            'How can we share poetry to connect with others?'\n          ],\n          keyVocabulary: ['poem', 'rhyme', 'rhythm', 'stanza', 'verse', 'alliteration', 'metaphor', 'simile'],\n          crossCurricularConnections: 'Music (rhythm and beat), Visual Arts (illustrating poems), Drama (performance)'\n        },\n        unitStructure: {\n          phases: [\n            {\n              name: 'Poetry Exploration',\n              description: 'Reading and analyzing different types of poems',\n              estimatedDays: 2,\n              learningGoals: ['Identify poem characteristics', 'Recognize poetic devices']\n            },\n            {\n              name: 'Writing Workshop',\n              description: 'Creating original poems using different forms',\n              estimatedDays: 2,\n              learningGoals: ['Write haiku, acrostic, and free verse poems']\n            },\n            {\n              name: 'Poetry Caf\xE9',\n              description: 'Sharing and performing student-created poems',\n              estimatedDays: 1,\n              learningGoals: ['Present poems with expression', 'Give constructive feedback']\n            }\n          ]\n        }\n      },\n      {\n        title: 'Grade 5 Science - Simple Machines',\n        titleFr: 'Sciences 5e ann\xE9e - Machines simples',\n        description: 'A 3-week investigation into simple machines, their functions, and applications in daily life.',\n        descriptionFr: 'Une enqu\xEAte de 3 semaines sur les machines simples, leurs fonctions et leurs applications dans la vie quotidienne.',\n        type: 'UNIT_PLAN' as const,\n        category: 'BY_SUBJECT' as const,\n        subject: 'Science',\n        gradeMin: 5,\n        gradeMax: 5,\n        isSystem: true,\n        isPublic: true,\n        estimatedWeeks: 3,\n        tags: ['simple-machines', 'science', 'inquiry', 'STEM', 'investigation'],\n        keywords: ['machines', 'lever', 'pulley', 'wheel', 'inclined-plane', 'wedge', 'screw'],\n        content: {\n          overview: 'Students will investigate the six types of simple machines through hands-on experiments and real-world applications.',\n          bigIdeas: 'Simple machines make work easier by changing the direction or amount of force needed. They are found everywhere in our daily lives.',\n          learningGoals: [\n            'Identify and classify the six types of simple machines',\n            'Explain how simple machines make work easier',\n            'Conduct investigations to test how simple machines work',\n            'Design and build a compound machine using simple machines'\n          ],\n          essentialQuestions: [\n            'How do simple machines make our lives easier?',\n            'Where do we find simple machines in our daily lives?',\n            'How can we use simple machines to solve problems?'\n          ],\n          keyVocabulary: ['force', 'work', 'lever', 'fulcrum', 'pulley', 'wheel and axle', 'inclined plane', 'wedge', 'screw', 'mechanical advantage'],\n          crossCurricularConnections: 'Mathematics (measuring forces, angles), Technology (design process), Social Studies (history of inventions)'\n        },\n        unitStructure: {\n          phases: [\n            {\n              name: 'Introduction to Simple Machines',\n              description: 'Identifying and classifying simple machines',\n              estimatedDays: 5,\n              learningGoals: ['Identify six types of simple machines', 'Find examples in the environment']\n            },\n            {\n              name: 'Investigating Forces',\n              description: 'Hands-on experiments with each type of machine',\n              estimatedDays: 8,\n              learningGoals: ['Measure and compare forces', 'Test how machines change force direction']\n            },\n            {\n              name: 'Design Challenge',\n              description: 'Creating compound machines to solve problems',\n              estimatedDays: 5,\n              learningGoals: ['Apply design process', 'Combine simple machines effectively']\n            }\n          ]\n        }\n      },\n      {\n        title: 'Cross-Curricular Community Helpers Project',\n        titleFr: 'Projet interdisciplinaire sur les aides communautaires',\n        description: 'A month-long integrated project exploring community helpers across multiple subject areas.',\n        descriptionFr: 'Un projet int\xE9gr\xE9 d\\'un mois explorant les aides communautaires dans plusieurs mati\xE8res.',\n        type: 'UNIT_PLAN' as const,\n        category: 'BY_THEME' as const,\n        subject: 'Integrated Studies',\n        gradeMin: 1,\n        gradeMax: 3,\n        isSystem: true,\n        isPublic: true,\n        estimatedWeeks: 4,\n        tags: ['community-helpers', 'cross-curricular', 'integrated', 'project-based', 'social-studies'],\n        keywords: ['community', 'helpers', 'jobs', 'careers', 'integrated-learning'],\n        content: {\n          overview: 'Students will explore different community helpers, their roles, and contributions while integrating language arts, mathematics, science, and social studies.',\n          bigIdeas: 'Communities are made up of people who work together to help each other. Everyone has a role to play in making their community a better place.',\n          crossCurricularConnections: 'Language Arts (reading about jobs, writing thank you letters), Mathematics (counting, sorting, graphing community helpers), Science (tools and safety), Social Studies (community roles and responsibilities), Arts (creating helper portraits)',\n          communityConnections: 'Guest speakers from local community (firefighters, police, nurses, teachers), field trips to community locations (fire station, library, post office)'\n        }\n      },\n      {\n        title: 'Math Problem Solving Lesson',\n        titleFr: 'Le\xE7on de r\xE9solution de probl\xE8mes math\xE9matiques',\n        description: 'A 60-minute lesson focused on developing problem-solving strategies using the three-part lesson structure.',\n        descriptionFr: 'Une le\xE7on de 60 minutes ax\xE9e sur le d\xE9veloppement de strat\xE9gies de r\xE9solution de probl\xE8mes en utilisant la structure de le\xE7on en trois parties.',\n        type: 'LESSON_PLAN' as const,\n        category: 'BY_SKILL' as const,\n        subject: 'Mathematics',\n        gradeMin: 2,\n        gradeMax: 6,\n        isSystem: true,\n        isPublic: true,\n        estimatedMinutes: 60,\n        tags: ['problem-solving', 'mathematics', 'three-part-lesson', 'strategies', 'reasoning'],\n        keywords: ['problem-solving', 'math', 'strategies', 'thinking', 'reasoning'],\n        content: {\n          objectives: [\n            'Apply problem-solving strategies to solve multi-step problems',\n            'Communicate mathematical thinking clearly',\n            'Make connections between different problem-solving approaches'\n          ],\n          materials: [\n            'Chart paper and markers',\n            'Math manipulatives (blocks, counters)',\n            'Problem-solving strategy posters',\n            'Student journals'\n          ],\n          mindsOn: 'Present a visual problem scenario and have students share what they notice and wonder. Activate prior knowledge about problem-solving strategies.',\n          action: 'Students work in pairs to solve a multi-step problem using various strategies. Teacher conferences with groups, asking probing questions to extend thinking.',\n          consolidation: 'Groups share their solutions and strategies. Class discusses different approaches and makes connections between methods.',\n          grouping: 'pairs',\n          accommodations: [\n            'Provide manipulatives for concrete representation',\n            'Offer problems with varying complexity levels',\n            'Use visual supports and graphic organizers'\n          ],\n          assessmentType: 'formative',\n          assessmentNotes: 'Observe student strategy use, communication, and reasoning during problem solving'\n        },\n        lessonStructure: {\n          duration: 60,\n          sections: [\n            {\n              name: 'Minds On',\n              description: 'Activate prior knowledge and introduce problem',\n              timeAllocation: 10,\n              activities: ['Visual problem presentation', 'Notice and wonder', 'Strategy review']\n            },\n            {\n              name: 'Action',\n              description: 'Collaborative problem solving',\n              timeAllocation: 35,\n              activities: ['Partner problem solving', 'Teacher conferencing', 'Strategy application']\n            },\n            {\n              name: 'Consolidation',\n              description: 'Share solutions and make connections',\n              timeAllocation: 15,\n              activities: ['Solution sharing', 'Strategy comparison', 'Reflection']\n            }\n          ]\n        }\n      }\n    ];\n\n    const createdTemplates = [];\n    for (const templateData of starterTemplates) {\n      try {\n        const existing = await prisma.planTemplate.findFirst({\n          where: { title: templateData.title, isSystem: true }\n        });\n\n        if (!existing) {\n          const created = await prisma.planTemplate.create({\n            data: {\n              ...templateData,\n              content: templateData.content as Prisma.JsonValue,\n              unitStructure: templateData.unitStructure as Prisma.JsonValue || null,\n              lessonStructure: templateData.lessonStructure as Prisma.JsonValue || null,\n            },\n          });\n          createdTemplates.push(created);\n        }\n      } catch (error) {\n        console.error(`Error creating template \"${templateData.title}\":`, error);\n      }\n    }\n\n    return createdTemplates;\n  }\n}\n\nexport default TemplateService;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e5a5f0e96cd74c79fb7d572f03fcf3ed9218ab96"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kcofx1hj5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kcofx1hj5();
import { prisma } from '../prisma';
/**
 * Template Service
 * Handles business logic for template management, including creation, search, and application
 */
export class TemplateService {
  /**
   * Search and filter templates based on criteria
   */
  static async searchTemplates(userId, options) {
    /* istanbul ignore next */
    cov_1kcofx1hj5().f[0]++;
    const {
      type,
      category,
      subject,
      gradeMin,
      gradeMax,
      isSystem,
      isPublic,
      createdByUserId,
      search,
      tags,
      sortBy =
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[0][0]++, 'createdAt'),
      sortOrder =
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[1][0]++, 'desc'),
      limit =
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[2][0]++, 20),
      offset =
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[3][0]++, 0)
    } =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[0]++, options);
    const where =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[1]++, {
      OR: [{
        isSystem: true
      },
      // System templates visible to all
      {
        isPublic: true
      },
      // Public templates visible to all
      {
        createdByUserId: userId
      } // User's own templates
      ]
    });
    // Apply filters
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[2]++;
    if (type) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[4][0]++;
      cov_1kcofx1hj5().s[3]++;
      where.type = type;
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[4][1]++;
    }
    cov_1kcofx1hj5().s[4]++;
    if (category) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[5][0]++;
      cov_1kcofx1hj5().s[5]++;
      where.category = category;
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[5][1]++;
    }
    cov_1kcofx1hj5().s[6]++;
    if (subject) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[6][0]++;
      cov_1kcofx1hj5().s[7]++;
      where.subject = subject;
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[6][1]++;
    }
    cov_1kcofx1hj5().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[8][0]++, gradeMin !== undefined) ||
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[8][1]++, gradeMax !== undefined)) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[7][0]++;
      cov_1kcofx1hj5().s[9]++;
      where.AND = [];
      /* istanbul ignore next */
      cov_1kcofx1hj5().s[10]++;
      if (gradeMin !== undefined) {
        /* istanbul ignore next */
        cov_1kcofx1hj5().b[9][0]++;
        cov_1kcofx1hj5().s[11]++;
        where.AND.push({
          OR: [{
            gradeMin: {
              lte: gradeMin
            }
          }, {
            gradeMin: null
          }]
        });
      } else
      /* istanbul ignore next */
      {
        cov_1kcofx1hj5().b[9][1]++;
      }
      cov_1kcofx1hj5().s[12]++;
      if (gradeMax !== undefined) {
        /* istanbul ignore next */
        cov_1kcofx1hj5().b[10][0]++;
        cov_1kcofx1hj5().s[13]++;
        where.AND.push({
          OR: [{
            gradeMax: {
              gte: gradeMax
            }
          }, {
            gradeMax: null
          }]
        });
      } else
      /* istanbul ignore next */
      {
        cov_1kcofx1hj5().b[10][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[7][1]++;
    }
    cov_1kcofx1hj5().s[14]++;
    if (isSystem !== undefined) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[11][0]++;
      cov_1kcofx1hj5().s[15]++;
      where.isSystem = isSystem;
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[11][1]++;
    }
    cov_1kcofx1hj5().s[16]++;
    if (isPublic !== undefined) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[12][0]++;
      cov_1kcofx1hj5().s[17]++;
      where.isPublic = isPublic;
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[12][1]++;
    }
    cov_1kcofx1hj5().s[18]++;
    if (createdByUserId !== undefined) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[13][0]++;
      cov_1kcofx1hj5().s[19]++;
      where.createdByUserId = createdByUserId;
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[13][1]++;
    }
    // Text search with database-specific case handling
    cov_1kcofx1hj5().s[20]++;
    if (search) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[14][0]++;
      const mode =
      /* istanbul ignore next */
      (cov_1kcofx1hj5().s[21]++, process.env.DATABASE_URL?.includes('postgresql') ?
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[15][0]++, {
        mode: 'insensitive'
      }) :
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[15][1]++, {}));
      /* istanbul ignore next */
      cov_1kcofx1hj5().s[22]++;
      where.OR = [{
        title: {
          contains: search,
          ...mode
        }
      }, {
        description: {
          contains: search,
          ...mode
        }
      }, {
        titleFr: {
          contains: search,
          ...mode
        }
      }, {
        descriptionFr: {
          contains: search,
          ...mode
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[14][1]++;
    }
    // Tag filtering - Using JSON array contains for tags
    cov_1kcofx1hj5().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[17][0]++, tags) &&
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[17][1]++, tags.length > 0)) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[16][0]++;
      cov_1kcofx1hj5().s[24]++;
      where.tags = {
        path: [],
        array_contains: tags
      }; // Type assertion for JSON array operations
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[16][1]++;
    }
    // Sorting
    const orderBy =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[25]++, {});
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[26]++;
    if (sortBy === 'title') {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[18][0]++;
      cov_1kcofx1hj5().s[27]++;
      orderBy.title = sortOrder;
    } else {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[18][1]++;
      cov_1kcofx1hj5().s[28]++;
      if (sortBy === 'usageCount') {
        /* istanbul ignore next */
        cov_1kcofx1hj5().b[19][0]++;
        cov_1kcofx1hj5().s[29]++;
        orderBy.usageCount = sortOrder;
      } else {
        /* istanbul ignore next */
        cov_1kcofx1hj5().b[19][1]++;
        cov_1kcofx1hj5().s[30]++;
        if (sortBy === 'averageRating') {
          /* istanbul ignore next */
          cov_1kcofx1hj5().b[20][0]++;
          cov_1kcofx1hj5().s[31]++;
          orderBy.averageRating = sortOrder;
        } else {
          /* istanbul ignore next */
          cov_1kcofx1hj5().b[20][1]++;
          cov_1kcofx1hj5().s[32]++;
          if (sortBy === 'createdAt') {
            /* istanbul ignore next */
            cov_1kcofx1hj5().b[21][0]++;
            cov_1kcofx1hj5().s[33]++;
            orderBy.createdAt = sortOrder;
          } else {
            /* istanbul ignore next */
            cov_1kcofx1hj5().b[21][1]++;
            cov_1kcofx1hj5().s[34]++;
            if (sortBy === 'lastUsedAt') {
              /* istanbul ignore next */
              cov_1kcofx1hj5().b[22][0]++;
              cov_1kcofx1hj5().s[35]++;
              orderBy.lastUsedAt = sortOrder;
            } else
            /* istanbul ignore next */
            {
              cov_1kcofx1hj5().b[22][1]++;
            }
          }
        }
      }
    }
    const [templates, total] =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[36]++, await Promise.all([prisma.planTemplate.findMany({
      where,
      orderBy,
      take: limit,
      skip: offset,
      include: {
        createdByUser: {
          select: {
            id: true,
            name: true
          }
        },
        _count: {
          select: {
            ratings: true,
            variations: true
          }
        }
      }
    }), prisma.planTemplate.count({
      where
    })]));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[37]++;
    return {
      templates,
      pagination: {
        total,
        limit,
        offset,
        hasMore: offset + limit < total
      }
    };
  }
  /**
   * Get a template by ID with full details
   */
  static async getTemplateById(userId, templateId) {
    /* istanbul ignore next */
    cov_1kcofx1hj5().f[1]++;
    const template =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[38]++, await prisma.planTemplate.findFirst({
      where: {
        id: templateId,
        OR: [{
          isSystem: true
        }, {
          isPublic: true
        }, {
          createdByUserId: userId
        }]
      },
      include: {
        createdByUser: {
          select: {
            id: true,
            name: true
          }
        },
        ratings: {
          select: {
            id: true,
            userId: true,
            rating: true,
            comment: true,
            createdAt: true
          },
          orderBy: {
            createdAt: 'desc'
          },
          take: 5
        },
        variations: {
          orderBy: {
            createdAt: 'desc'
          }
        },
        _count: {
          select: {
            ratings: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[39]++;
    return template;
  }
  /**
   * Create a new template
   */
  static async createTemplate(userId, data) {
    /* istanbul ignore next */
    cov_1kcofx1hj5().f[2]++;
    const {
      tags =
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[23][0]++, []),
      keywords =
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[24][0]++, []),
      isPublic =
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[25][0]++, false),
      content,
      unitStructure,
      lessonStructure,
      ...templateData
    } =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[40]++, data);
    // Validate grade range
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[27][0]++, templateData.gradeMin) &&
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[27][1]++, templateData.gradeMax) &&
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[27][2]++, templateData.gradeMin > templateData.gradeMax)) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[26][0]++;
      cov_1kcofx1hj5().s[42]++;
      throw new Error('Minimum grade cannot be greater than maximum grade');
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[26][1]++;
    }
    const template =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[43]++, await prisma.planTemplate.create({
      data: {
        ...templateData,
        createdByUserId: userId,
        tags,
        keywords,
        isPublic,
        content: content,
        unitStructure:
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[28][0]++, unitStructure) ||
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[28][1]++, null),
        lessonStructure:
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[29][0]++, lessonStructure) ||
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[29][1]++, null)
      },
      include: {
        createdByUser: {
          select: {
            id: true,
            name: true
          }
        },
        _count: {
          select: {
            ratings: true,
            variations: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[44]++;
    return template;
  }
  /**
   * Update an existing template
   */
  static async updateTemplate(userId, templateId, data) {
    /* istanbul ignore next */
    cov_1kcofx1hj5().f[3]++;
    // Verify ownership (only creator can edit)
    const existing =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[45]++, await prisma.planTemplate.findFirst({
      where: {
        id: templateId,
        createdByUserId: userId,
        isSystem: false // System templates cannot be edited
      }
    }));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[46]++;
    if (!existing) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[30][0]++;
      cov_1kcofx1hj5().s[47]++;
      throw new Error('Template not found or not editable');
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[30][1]++;
    }
    const {
      gradeMin,
      gradeMax,
      ...updateData
    } =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[48]++, data);
    // Validate grade range if provided
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[32][0]++, gradeMin) &&
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[32][1]++, gradeMax) &&
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[32][2]++, gradeMin > gradeMax)) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[31][0]++;
      cov_1kcofx1hj5().s[50]++;
      throw new Error('Minimum grade cannot be greater than maximum grade');
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[31][1]++;
    }
    const template =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[51]++, await prisma.planTemplate.update({
      where: {
        id: templateId
      },
      data: {
        ...updateData,
        gradeMin,
        gradeMax,
        content: updateData.content ?
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[33][0]++, updateData.content) :
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[33][1]++, undefined),
        unitStructure: updateData.unitStructure ?
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[34][0]++, updateData.unitStructure) :
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[34][1]++, undefined),
        lessonStructure: updateData.lessonStructure ?
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[35][0]++, updateData.lessonStructure) :
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[35][1]++, undefined)
      },
      include: {
        createdByUser: {
          select: {
            id: true,
            name: true
          }
        },
        variations: true,
        _count: {
          select: {
            ratings: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[52]++;
    return template;
  }
  /**
   * Delete a template
   */
  static async deleteTemplate(userId, templateId) {
    /* istanbul ignore next */
    cov_1kcofx1hj5().f[4]++;
    // Verify ownership
    const template =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[53]++, await prisma.planTemplate.findFirst({
      where: {
        id: templateId,
        createdByUserId: userId,
        isSystem: false // System templates cannot be deleted
      }
    }));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[54]++;
    if (!template) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[36][0]++;
      cov_1kcofx1hj5().s[55]++;
      throw new Error('Template not found or not deletable');
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[36][1]++;
    }
    cov_1kcofx1hj5().s[56]++;
    await prisma.planTemplate.delete({
      where: {
        id: templateId
      }
    });
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[57]++;
    return true;
  }
  /**
   * Duplicate a template
   */
  static async duplicateTemplate(userId, templateId, title, isPublic =
  /* istanbul ignore next */
  (cov_1kcofx1hj5().b[37][0]++, false)) {
    /* istanbul ignore next */
    cov_1kcofx1hj5().f[5]++;
    const original =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[58]++, await prisma.planTemplate.findFirst({
      where: {
        id: templateId,
        OR: [{
          isSystem: true
        }, {
          isPublic: true
        }, {
          createdByUserId: userId
        }]
      }
    }));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[59]++;
    if (!original) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[38][0]++;
      cov_1kcofx1hj5().s[60]++;
      throw new Error('Template not found');
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[38][1]++;
    }
    const duplicated =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[61]++, await prisma.planTemplate.create({
      data: {
        title:
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[39][0]++, title) ||
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[39][1]++, `${original.title} (Copy)`),
        titleFr: original.titleFr ?
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[40][0]++, `${original.titleFr} (Copie)`) :
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[40][1]++, null),
        description: original.description,
        descriptionFr: original.descriptionFr,
        type: original.type,
        category: original.category,
        subject: original.subject,
        gradeMin: original.gradeMin,
        gradeMax: original.gradeMax,
        tags: original.tags,
        keywords: original.keywords,
        createdByUserId: userId,
        isSystem: false,
        isPublic,
        content: original.content,
        estimatedWeeks: original.estimatedWeeks,
        unitStructure: original.unitStructure,
        estimatedMinutes: original.estimatedMinutes,
        lessonStructure: original.lessonStructure
      },
      include: {
        createdByUser: {
          select: {
            id: true,
            name: true
          }
        },
        _count: {
          select: {
            ratings: true,
            variations: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[62]++;
    return duplicated;
  }
  /**
   * Apply a template to create new plan data
   */
  static async applyTemplate(userId, templateId, customizations =
  /* istanbul ignore next */
  (cov_1kcofx1hj5().b[41][0]++, {})) {
    /* istanbul ignore next */
    cov_1kcofx1hj5().f[6]++;
    const template =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[63]++, await prisma.planTemplate.findFirst({
      where: {
        id: templateId,
        OR: [{
          isSystem: true
        }, {
          isPublic: true
        }, {
          createdByUserId: userId
        }]
      }
    }));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[64]++;
    if (!template) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[42][0]++;
      cov_1kcofx1hj5().s[65]++;
      throw new Error('Template not found');
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[42][1]++;
    }
    // Update usage tracking
    cov_1kcofx1hj5().s[66]++;
    await prisma.planTemplate.update({
      where: {
        id: template.id
      },
      data: {
        usageCount: {
          increment: 1
        },
        lastUsedAt: new Date()
      }
    });
    // Merge template content with user customizations
    const appliedContent =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[67]++, {
      ...template.content,
      ...(
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[43][0]++, customizations) ||
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[43][1]++, {}))
    });
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[68]++;
    return {
      template: {
        id: template.id,
        title: template.title,
        type: template.type,
        content: appliedContent,
        unitStructure:
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[44][0]++, template.unitStructure) ||
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[44][1]++, undefined),
        lessonStructure:
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[45][0]++, template.lessonStructure) ||
        /* istanbul ignore next */
        (cov_1kcofx1hj5().b[45][1]++, undefined),
        estimatedWeeks: template.estimatedWeeks,
        estimatedMinutes: template.estimatedMinutes
      },
      appliedContent
    };
  }
  /**
   * Rate a template
   */
  static async rateTemplate(userId, templateId, rating, comment) {
    /* istanbul ignore next */
    cov_1kcofx1hj5().f[7]++;
    cov_1kcofx1hj5().s[69]++;
    if (
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[47][0]++, rating < 1) ||
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[47][1]++, rating > 5)) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[46][0]++;
      cov_1kcofx1hj5().s[70]++;
      throw new Error('Rating must be between 1 and 5');
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[46][1]++;
    }
    // Check if template exists and is accessible
    const template =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[71]++, await prisma.planTemplate.findFirst({
      where: {
        id: templateId,
        OR: [{
          isSystem: true
        }, {
          isPublic: true
        }, {
          createdByUserId: userId
        }]
      }
    }));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[72]++;
    if (!template) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().b[48][0]++;
      cov_1kcofx1hj5().s[73]++;
      throw new Error('Template not found');
    } else
    /* istanbul ignore next */
    {
      cov_1kcofx1hj5().b[48][1]++;
    }
    // Upsert rating
    const templateRating =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[74]++, await prisma.templateRating.upsert({
      where: {
        templateId_userId: {
          templateId,
          userId
        }
      },
      update: {
        rating,
        comment
      },
      create: {
        templateId,
        userId,
        rating,
        comment
      }
    }));
    // Recalculate average rating
    const ratings =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[75]++, await prisma.templateRating.findMany({
      where: {
        templateId
      },
      select: {
        rating: true
      }
    }));
    const averageRating =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[76]++, ratings.length > 0 ?
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[49][0]++, ratings.reduce((sum, r) => {
      /* istanbul ignore next */
      cov_1kcofx1hj5().f[8]++;
      cov_1kcofx1hj5().s[77]++;
      return sum + r.rating;
    }, 0) / ratings.length) :
    /* istanbul ignore next */
    (cov_1kcofx1hj5().b[49][1]++, 0));
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[78]++;
    await prisma.planTemplate.update({
      where: {
        id: templateId
      },
      data: {
        averageRating
      }
    });
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[79]++;
    return templateRating;
  }
  /**
   * Get filter options for template search
   */
  static async getFilterOptions(userId) {
    /* istanbul ignore next */
    cov_1kcofx1hj5().f[9]++;
    const [subjects, grades, categories, tags] =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[80]++, await Promise.all([prisma.planTemplate.findMany({
      where: {
        OR: [{
          isSystem: true
        }, {
          isPublic: true
        }, {
          createdByUserId: userId
        }],
        subject: {
          not: null
        }
      },
      select: {
        subject: true
      },
      distinct: ['subject']
    }), prisma.planTemplate.findMany({
      where: {
        AND: [{
          OR: [{
            isSystem: true
          }, {
            isPublic: true
          }, {
            createdByUserId: userId
          }]
        }, {
          OR: [{
            gradeMin: {
              not: null
            }
          }, {
            gradeMax: {
              not: null
            }
          }]
        }]
      },
      select: {
        gradeMin: true,
        gradeMax: true
      }
    }), prisma.planTemplate.findMany({
      select: {
        category: true
      },
      distinct: ['category']
    }), prisma.planTemplate.findMany({
      where: {
        OR: [{
          isSystem: true
        }, {
          isPublic: true
        }, {
          createdByUserId: userId
        }]
      },
      select: {
        tags: true
      }
    })]));
    const uniqueSubjects =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[81]++, subjects.map(t => {
      /* istanbul ignore next */
      cov_1kcofx1hj5().f[10]++;
      cov_1kcofx1hj5().s[82]++;
      return t.subject;
    }).filter(s => {
      /* istanbul ignore next */
      cov_1kcofx1hj5().f[11]++;
      cov_1kcofx1hj5().s[83]++;
      return s !== null;
    }).sort());
    const gradeRange =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[84]++, grades.reduce((range, template) => {
      /* istanbul ignore next */
      cov_1kcofx1hj5().f[12]++;
      cov_1kcofx1hj5().s[85]++;
      if (template.gradeMin) {
        /* istanbul ignore next */
        cov_1kcofx1hj5().b[50][0]++;
        cov_1kcofx1hj5().s[86]++;
        range.min = Math.min(range.min, template.gradeMin);
      } else
      /* istanbul ignore next */
      {
        cov_1kcofx1hj5().b[50][1]++;
      }
      cov_1kcofx1hj5().s[87]++;
      if (template.gradeMax) {
        /* istanbul ignore next */
        cov_1kcofx1hj5().b[51][0]++;
        cov_1kcofx1hj5().s[88]++;
        range.max = Math.max(range.max, template.gradeMax);
      } else
      /* istanbul ignore next */
      {
        cov_1kcofx1hj5().b[51][1]++;
      }
      cov_1kcofx1hj5().s[89]++;
      return range;
    }, {
      min: 12,
      max: 1
    }));
    const allTags =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[90]++, tags.flatMap(t => {
      /* istanbul ignore next */
      cov_1kcofx1hj5().f[13]++;
      cov_1kcofx1hj5().s[91]++;
      return Array.isArray(t.tags) ?
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[52][0]++, t.tags) :
      /* istanbul ignore next */
      (cov_1kcofx1hj5().b[52][1]++, []);
    }).filter((tag, index, array) => {
      /* istanbul ignore next */
      cov_1kcofx1hj5().f[14]++;
      cov_1kcofx1hj5().s[92]++;
      return array.indexOf(tag) === index;
    }).sort());
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[93]++;
    return {
      subjects: uniqueSubjects,
      grades: Array.from({
        length: gradeRange.max - gradeRange.min + 1
      }, (_, i) => {
        /* istanbul ignore next */
        cov_1kcofx1hj5().f[15]++;
        cov_1kcofx1hj5().s[94]++;
        return gradeRange.min + i;
      }),
      categories: categories.map(c => {
        /* istanbul ignore next */
        cov_1kcofx1hj5().f[16]++;
        cov_1kcofx1hj5().s[95]++;
        return c.category;
      }),
      tags: allTags
    };
  }
  /**
   * Create system starter templates
   */
  static async createStarterTemplates() {
    /* istanbul ignore next */
    cov_1kcofx1hj5().f[17]++;
    const starterTemplates =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[96]++, [{
      title: 'Grade 1 Math - Number Sense Unit',
      titleFr: 'Mathématiques 1re année - Unité de sens du nombre',
      description: 'A comprehensive 2-week unit exploring numbers 1-20 with hands-on activities and assessment opportunities.',
      descriptionFr: 'Une unité complète de 2 semaines explorant les nombres 1-20 avec des activités pratiques et des opportunités d\'évaluation.',
      type: 'UNIT_PLAN',
      category: 'BY_SUBJECT',
      subject: 'Mathematics',
      gradeMin: 1,
      gradeMax: 1,
      isSystem: true,
      isPublic: true,
      estimatedWeeks: 2,
      tags: ['number-sense', 'hands-on', 'primary', 'counting', 'place-value'],
      keywords: ['numbers', 'counting', 'math', 'grade-1', 'manipulatives'],
      content: {
        overview: 'Students will develop number sense by exploring numbers 1-20 through various concrete, pictorial, and abstract activities.',
        bigIdeas: 'Numbers have relationships and patterns. Quantities can be represented in multiple ways.',
        learningGoals: ['Count forward and backward from 1 to 20', 'Recognize and represent numbers in different ways', 'Compare quantities using more than, less than, equal to', 'Solve simple addition and subtraction problems using concrete materials'],
        essentialQuestions: ['How do we use numbers in our daily lives?', 'What different ways can we show the same quantity?', 'How do numbers help us compare amounts?'],
        keyVocabulary: ['number', 'count', 'more', 'less', 'equal', 'add', 'subtract', 'altogether'],
        assessments: [{
          type: 'diagnostic',
          description: 'Number recognition and counting assessment',
          timing: 'Beginning of unit'
        }, {
          type: 'formative',
          description: 'Daily number talks and manipulative explorations',
          timing: 'Throughout unit'
        }, {
          type: 'summative',
          description: 'Number representation portfolio',
          timing: 'End of unit'
        }],
        differentiationStrategies: {
          forStruggling: ['Use concrete manipulatives for all activities', 'Start with smaller number ranges (1-10)', 'Provide visual number lines and hundreds charts', 'Use peer buddies for support'],
          forAdvanced: ['Extend to numbers beyond 20', 'Introduce skip counting patterns', 'Explore number relationships and patterns', 'Create their own number problems'],
          forELL: ['Use visual supports and gestures', 'Provide number vocabulary cards with pictures', 'Use home language connections where possible', 'Focus on mathematical language development']
        }
      },
      unitStructure: {
        phases: [{
          name: 'Number Recognition & Counting',
          description: 'Building foundational counting skills and number recognition',
          estimatedDays: 4,
          learningGoals: ['Count objects accurately', 'Recognize written numerals 1-20']
        }, {
          name: 'Number Representations',
          description: 'Exploring different ways to show quantities',
          estimatedDays: 3,
          learningGoals: ['Show numbers using manipulatives, pictures, and symbols']
        }, {
          name: 'Comparing Quantities',
          description: 'Understanding more than, less than, equal to',
          estimatedDays: 2,
          learningGoals: ['Compare sets of objects', 'Use comparison vocabulary']
        }, {
          name: 'Adding and Subtracting',
          description: 'Introduction to operations with concrete materials',
          estimatedDays: 3,
          learningGoals: ['Solve simple addition and subtraction problems using objects']
        }],
        resources: [{
          title: 'Counting Bears',
          type: 'manipulative',
          notes: '10 bears per student'
        }, {
          title: 'Number Cards 1-20',
          type: 'printable',
          notes: 'Laminate for durability'
        }, {
          title: 'Ten Frames',
          type: 'printable',
          notes: 'Print on cardstock'
        }]
      }
    }, {
      title: 'Grade 3 Language - Poetry Unit',
      titleFr: 'Français 3e année - Unité de poésie',
      description: 'A creative 1-week exploration of poetry forms, writing techniques, and performance.',
      descriptionFr: 'Une exploration créative d\'une semaine des formes poétiques, des techniques d\'écriture et de la performance.',
      type: 'UNIT_PLAN',
      category: 'BY_SUBJECT',
      subject: 'Language Arts',
      gradeMin: 3,
      gradeMax: 3,
      isSystem: true,
      isPublic: true,
      estimatedWeeks: 1,
      tags: ['poetry', 'writing', 'language-arts', 'creative', 'performance'],
      keywords: ['poems', 'rhyme', 'rhythm', 'writing', 'language'],
      content: {
        overview: 'Students will explore various forms of poetry, learn about poetic devices, and create their own poems.',
        bigIdeas: 'Poetry is a form of expression that uses language creatively. Words can create images, emotions, and experiences.',
        learningGoals: ['Identify different types of poems and their characteristics', 'Use poetic devices like rhyme, rhythm, and alliteration', 'Write original poems using various forms', 'Present poetry with expression and confidence'],
        essentialQuestions: ['How do poets use words to create images and feelings?', 'What makes a poem different from other types of writing?', 'How can we share poetry to connect with others?'],
        keyVocabulary: ['poem', 'rhyme', 'rhythm', 'stanza', 'verse', 'alliteration', 'metaphor', 'simile'],
        crossCurricularConnections: 'Music (rhythm and beat), Visual Arts (illustrating poems), Drama (performance)'
      },
      unitStructure: {
        phases: [{
          name: 'Poetry Exploration',
          description: 'Reading and analyzing different types of poems',
          estimatedDays: 2,
          learningGoals: ['Identify poem characteristics', 'Recognize poetic devices']
        }, {
          name: 'Writing Workshop',
          description: 'Creating original poems using different forms',
          estimatedDays: 2,
          learningGoals: ['Write haiku, acrostic, and free verse poems']
        }, {
          name: 'Poetry Café',
          description: 'Sharing and performing student-created poems',
          estimatedDays: 1,
          learningGoals: ['Present poems with expression', 'Give constructive feedback']
        }]
      }
    }, {
      title: 'Grade 5 Science - Simple Machines',
      titleFr: 'Sciences 5e année - Machines simples',
      description: 'A 3-week investigation into simple machines, their functions, and applications in daily life.',
      descriptionFr: 'Une enquête de 3 semaines sur les machines simples, leurs fonctions et leurs applications dans la vie quotidienne.',
      type: 'UNIT_PLAN',
      category: 'BY_SUBJECT',
      subject: 'Science',
      gradeMin: 5,
      gradeMax: 5,
      isSystem: true,
      isPublic: true,
      estimatedWeeks: 3,
      tags: ['simple-machines', 'science', 'inquiry', 'STEM', 'investigation'],
      keywords: ['machines', 'lever', 'pulley', 'wheel', 'inclined-plane', 'wedge', 'screw'],
      content: {
        overview: 'Students will investigate the six types of simple machines through hands-on experiments and real-world applications.',
        bigIdeas: 'Simple machines make work easier by changing the direction or amount of force needed. They are found everywhere in our daily lives.',
        learningGoals: ['Identify and classify the six types of simple machines', 'Explain how simple machines make work easier', 'Conduct investigations to test how simple machines work', 'Design and build a compound machine using simple machines'],
        essentialQuestions: ['How do simple machines make our lives easier?', 'Where do we find simple machines in our daily lives?', 'How can we use simple machines to solve problems?'],
        keyVocabulary: ['force', 'work', 'lever', 'fulcrum', 'pulley', 'wheel and axle', 'inclined plane', 'wedge', 'screw', 'mechanical advantage'],
        crossCurricularConnections: 'Mathematics (measuring forces, angles), Technology (design process), Social Studies (history of inventions)'
      },
      unitStructure: {
        phases: [{
          name: 'Introduction to Simple Machines',
          description: 'Identifying and classifying simple machines',
          estimatedDays: 5,
          learningGoals: ['Identify six types of simple machines', 'Find examples in the environment']
        }, {
          name: 'Investigating Forces',
          description: 'Hands-on experiments with each type of machine',
          estimatedDays: 8,
          learningGoals: ['Measure and compare forces', 'Test how machines change force direction']
        }, {
          name: 'Design Challenge',
          description: 'Creating compound machines to solve problems',
          estimatedDays: 5,
          learningGoals: ['Apply design process', 'Combine simple machines effectively']
        }]
      }
    }, {
      title: 'Cross-Curricular Community Helpers Project',
      titleFr: 'Projet interdisciplinaire sur les aides communautaires',
      description: 'A month-long integrated project exploring community helpers across multiple subject areas.',
      descriptionFr: 'Un projet intégré d\'un mois explorant les aides communautaires dans plusieurs matières.',
      type: 'UNIT_PLAN',
      category: 'BY_THEME',
      subject: 'Integrated Studies',
      gradeMin: 1,
      gradeMax: 3,
      isSystem: true,
      isPublic: true,
      estimatedWeeks: 4,
      tags: ['community-helpers', 'cross-curricular', 'integrated', 'project-based', 'social-studies'],
      keywords: ['community', 'helpers', 'jobs', 'careers', 'integrated-learning'],
      content: {
        overview: 'Students will explore different community helpers, their roles, and contributions while integrating language arts, mathematics, science, and social studies.',
        bigIdeas: 'Communities are made up of people who work together to help each other. Everyone has a role to play in making their community a better place.',
        crossCurricularConnections: 'Language Arts (reading about jobs, writing thank you letters), Mathematics (counting, sorting, graphing community helpers), Science (tools and safety), Social Studies (community roles and responsibilities), Arts (creating helper portraits)',
        communityConnections: 'Guest speakers from local community (firefighters, police, nurses, teachers), field trips to community locations (fire station, library, post office)'
      }
    }, {
      title: 'Math Problem Solving Lesson',
      titleFr: 'Leçon de résolution de problèmes mathématiques',
      description: 'A 60-minute lesson focused on developing problem-solving strategies using the three-part lesson structure.',
      descriptionFr: 'Une leçon de 60 minutes axée sur le développement de stratégies de résolution de problèmes en utilisant la structure de leçon en trois parties.',
      type: 'LESSON_PLAN',
      category: 'BY_SKILL',
      subject: 'Mathematics',
      gradeMin: 2,
      gradeMax: 6,
      isSystem: true,
      isPublic: true,
      estimatedMinutes: 60,
      tags: ['problem-solving', 'mathematics', 'three-part-lesson', 'strategies', 'reasoning'],
      keywords: ['problem-solving', 'math', 'strategies', 'thinking', 'reasoning'],
      content: {
        objectives: ['Apply problem-solving strategies to solve multi-step problems', 'Communicate mathematical thinking clearly', 'Make connections between different problem-solving approaches'],
        materials: ['Chart paper and markers', 'Math manipulatives (blocks, counters)', 'Problem-solving strategy posters', 'Student journals'],
        mindsOn: 'Present a visual problem scenario and have students share what they notice and wonder. Activate prior knowledge about problem-solving strategies.',
        action: 'Students work in pairs to solve a multi-step problem using various strategies. Teacher conferences with groups, asking probing questions to extend thinking.',
        consolidation: 'Groups share their solutions and strategies. Class discusses different approaches and makes connections between methods.',
        grouping: 'pairs',
        accommodations: ['Provide manipulatives for concrete representation', 'Offer problems with varying complexity levels', 'Use visual supports and graphic organizers'],
        assessmentType: 'formative',
        assessmentNotes: 'Observe student strategy use, communication, and reasoning during problem solving'
      },
      lessonStructure: {
        duration: 60,
        sections: [{
          name: 'Minds On',
          description: 'Activate prior knowledge and introduce problem',
          timeAllocation: 10,
          activities: ['Visual problem presentation', 'Notice and wonder', 'Strategy review']
        }, {
          name: 'Action',
          description: 'Collaborative problem solving',
          timeAllocation: 35,
          activities: ['Partner problem solving', 'Teacher conferencing', 'Strategy application']
        }, {
          name: 'Consolidation',
          description: 'Share solutions and make connections',
          timeAllocation: 15,
          activities: ['Solution sharing', 'Strategy comparison', 'Reflection']
        }]
      }
    }]);
    const createdTemplates =
    /* istanbul ignore next */
    (cov_1kcofx1hj5().s[97]++, []);
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[98]++;
    for (const templateData of starterTemplates) {
      /* istanbul ignore next */
      cov_1kcofx1hj5().s[99]++;
      try {
        const existing =
        /* istanbul ignore next */
        (cov_1kcofx1hj5().s[100]++, await prisma.planTemplate.findFirst({
          where: {
            title: templateData.title,
            isSystem: true
          }
        }));
        /* istanbul ignore next */
        cov_1kcofx1hj5().s[101]++;
        if (!existing) {
          /* istanbul ignore next */
          cov_1kcofx1hj5().b[53][0]++;
          const created =
          /* istanbul ignore next */
          (cov_1kcofx1hj5().s[102]++, await prisma.planTemplate.create({
            data: {
              ...templateData,
              content: templateData.content,
              unitStructure:
              /* istanbul ignore next */
              (cov_1kcofx1hj5().b[54][0]++, templateData.unitStructure) ||
              /* istanbul ignore next */
              (cov_1kcofx1hj5().b[54][1]++, null),
              lessonStructure:
              /* istanbul ignore next */
              (cov_1kcofx1hj5().b[55][0]++, templateData.lessonStructure) ||
              /* istanbul ignore next */
              (cov_1kcofx1hj5().b[55][1]++, null)
            }
          }));
          /* istanbul ignore next */
          cov_1kcofx1hj5().s[103]++;
          createdTemplates.push(created);
        } else
        /* istanbul ignore next */
        {
          cov_1kcofx1hj5().b[53][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1kcofx1hj5().s[104]++;
        console.error(`Error creating template "${templateData.title}":`, error);
      }
    }
    /* istanbul ignore next */
    cov_1kcofx1hj5().s[105]++;
    return createdTemplates;
  }
}
export default TemplateService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,